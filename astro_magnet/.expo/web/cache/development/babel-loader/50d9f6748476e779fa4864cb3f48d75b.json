{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Pressable, Box, Text, Icon } from \"native-base\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport FastImage from \"react-native-fast-image\";\nimport Image from \"./image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ImagePickerComponent(props) {\n  function getImageSrc() {\n    var _props$fallback;\n    if (props.value) {\n      return props.value;\n    }\n    return (_props$fallback = props.fallback) != null ? _props$fallback : 'https://via.placeholder.com/150';\n  }\n  function pickImage() {\n    return _pickImage.apply(this, arguments);\n  }\n  function _pickImage() {\n    _pickImage = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.canceled) {\n        props.onChange(result.assets[0].uri);\n      }\n    });\n    return _pickImage.apply(this, arguments);\n  }\n  ;\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n  return _jsxs(_Fragment, {\n    children: [props.label && _jsx(Text, {\n      color: \"onSecondary\",\n      my: 2,\n      fontSize: 20,\n      fontWeight: \"bold\",\n      style: props.labelStyle,\n      children: props.label\n    }), _jsxs(Box, {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: props.style,\n      width: width / 2.25,\n      height: width / 2.25,\n      mx: props.mode === \"image\" ? 0 : \"auto\",\n      children: [_jsx(Pressable, {\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        top: -8,\n        right: -12,\n        zIndex: 100,\n        bg: \"tertiary\",\n        height: 7,\n        width: 7,\n        p: 2,\n        rounded: \"full\",\n        onPress: pickImage,\n        children: _jsx(Icon, {\n          as: _jsx(MaterialCommunityIcons, {\n            name: \"pencil\"\n          }),\n          color: \"onSecondary\"\n        })\n      }), _jsx(_StyledComponent, {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        rounded: props.mode === \"avatar\" ? \"full\" : \"md\",\n        bg: \"secondary\",\n        overflow: \"hidden\",\n        className: \"w-full h-full\",\n        component: Box,\n        children: _jsx(Image, {\n          source: {\n            uri: getImageSrc(),\n            priority: FastImage.priority.normal,\n            cache: FastImage.cacheControl.immutable\n          },\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          resizeMode: FastImage.resizeMode.cover\n        })\n      })]\n    })]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"absolute\": {\n      \"position\": \"absolute\"\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"hidden\": {\n      \"display\": \"none\"\n    },\n    \"h-full\": {\n      \"height\": \"100%\"\n    },\n    \"w-full\": {\n      \"width\": \"100%\"\n    },\n    \"rounded\": {\n      \"borderTopLeftRadius\": 4,\n      \"borderTopRightRadius\": 4,\n      \"borderBottomRightRadius\": 4,\n      \"borderBottomLeftRadius\": 4\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","ImagePicker","Pressable","Box","Text","Icon","MaterialCommunityIcons","FastImage","Image","ImagePickerComponent","props","getImageSrc","value","fallback","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","canceled","onChange","assets","uri","Dimensions","get","width","label","labelStyle","style","mode","priority","normal","cache","cacheControl","immutable","height","resizeMode","cover"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/components/global/imagePicker.tsx"],"sourcesContent":["import React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Pressable, Box, Text, Icon } from \"native-base\";\nimport { ViewStyle, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport FastImage from \"react-native-fast-image\";\nimport Image from \"@app/frontend/components/global/image\";\n\ninterface Props {\n    label?: string;\n    value:  string | null | undefined;\n    onChange: (value: string | null | undefined) => void;\n    fallback?: string;\n    style?: ViewStyle\n    labelStyle?: ViewStyle\n    mode: \"avatar\" | \"image\"\n}\n\n/**\n * image picker for selecting an image from the device\n * @prop {string | undefined} label - label of the image picker\n * @prop {string | null | undefined} value - uri of the selected image\n * @prop {(value: string | null | undefined) => void} onChange - function to call when the image changes\n * @prop {string | undefined} fallback - uri of the fallback image when no image is selected(value is null or undefined)\n * @prop {ViewStyle | undefined} style - extra style for the image picker container\n * @prop {ViewStyle | undefined} labelStyle - extra style for the label\n * @prop {\"avatar\" | \"image\"} mode - mode of the image picker (2 options: \"avatar\" or \"image\")\n * @returns \n */\nexport default function ImagePickerComponent(props: Props) {\n\n  /**\n   * get selected image uri\n   * @returns {string} - image uri\n   */\n  function getImageSrc(): string {\n\n    //if image is selected\n    if (props.value) {\n\n      //return image uri\n      return props.value;\n    }\n\n    //if no image is selected return fallback uri\n    return props.fallback ?? 'https://via.placeholder.com/150';\n  }\n\n  /**\n   * open the picker\n   */\n  async function pickImage(): Promise<void> {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n        props.onChange(result.assets[0].uri);\n    }\n  };\n\n  const {width} = Dimensions.get('window');\n\n  return (\n    <>\n        {props.label && \n            <Text\n                color=\"onSecondary\"\n                my={2}\n                fontSize={20}\n                fontWeight=\"bold\"\n                style={props.labelStyle}\n            >\n                {props.label}\n            </Text>}\n        <Box \n            flex={1}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={props.style}\n            width={width/2.25}\n            height={width/2.25}\n            mx={props.mode === \"image\" ? 0 : \"auto\"}\n        >\n            <Pressable\n                position=\"absolute\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                top={-8} right={-12}\n                zIndex={100} bg=\"tertiary\"\n                height={7} width={7}\n                p={2} rounded=\"full\"\n                onPress={pickImage}\n            >\n                <Icon\n                    as={<MaterialCommunityIcons name=\"pencil\" />}\n                    color=\"onSecondary\"\n                />\n            </Pressable>\n            <Box\n                flex={1}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                rounded={props.mode === \"avatar\" ? \"full\" : \"md\"}\n                bg=\"secondary\"\n                overflow=\"hidden\"\n                className=\"w-full h-full\"\n            >\n                <Image\n                    source={{ \n                        uri: getImageSrc(),\n                        priority: FastImage.priority.normal,\n                        cache: FastImage.cacheControl.immutable\n                    }}\n                    style={{ \n                        width: '100%', \n                        height: '100%',\n                    }}\n                    resizeMode={FastImage.resizeMode.cover}\n                />   \n            </Box>\n        </Box>\n    </>\n    \n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}