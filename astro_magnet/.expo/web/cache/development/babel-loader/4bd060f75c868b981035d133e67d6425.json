{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Register from \"./src/frontend/screens/auth/login\";\nimport { StatusBar } from 'expo-status-bar';\nimport LoadingOverlay from \"./src/frontend/components/LoadingOverlay\";\nimport useProfile from \"./src/hooks/useProfile\";\nimport { UserContext } from \"./src/context/user\";\nimport theme from \"./src/theme/nativebase\";\nimport { NativeBaseProvider } from \"native-base\";\nimport Images from \"./src/theme/images\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport MainNavigationStack from \"./src/frontend/navigation/main\";\nimport SetupScreen from \"./src/frontend/screens/auth/setup\";\nimport { useToast } from 'native-base';\nimport ToastDialog from \"./src/frontend/components/global/toast\";\nimport UserController from \"./src/controller/user\";\nimport useCurrentLocation from \"./src/hooks/useCurrentLocation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var toast = useToast();\n  var _useProfile = useProfile(function (error) {\n      toast.show({\n        render: function render() {\n          return _jsx(ToastDialog, {\n            message: error\n          });\n        }\n      });\n    }),\n    authUser = _useProfile.user,\n    profile = _useProfile.userProfile,\n    setProfile = _useProfile.setUserProfile,\n    authStatus = _useProfile.status,\n    profileLoading = _useProfile.profileLoading;\n  var updateGeoLocation = function () {\n    var _ref = _asyncToGenerator(function* (location) {\n      var _location$coords;\n      if (!profile) return;\n      var data = {\n        lat: location.coords.latitude,\n        lng: (_location$coords = location.coords) == null ? void 0 : _location$coords.longitude\n      };\n      yield UserController.updateUser(profile.id, data, function (error) {\n        toast.show({\n          render: function render() {\n            return _jsx(ToastDialog, {\n              message: error\n            });\n          }\n        });\n      });\n    });\n    return function updateGeoLocation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useCurrentLocation(updateGeoLocation, function (error) {\n    toast.show({\n      render: function render() {\n        return _jsx(ToastDialog, {\n          message: error\n        });\n      }\n    });\n  });\n  var screen = _jsx(LoadingOverlay, {});\n  if (authStatus === \"loading\" || profileLoading) {\n    screen = _jsx(LoadingOverlay, {});\n  } else if (authStatus === \"unauthenticated\") {\n    screen = _jsx(Register, {});\n  } else if (authStatus === \"authenticated\" && !profile) {\n    screen = _jsx(SetupScreen, {});\n  } else {\n    screen = _jsx(UserContext.Provider, {\n      value: {\n        profile: profile,\n        authUser: authUser,\n        setProfile: setProfile\n      },\n      children: _jsx(SafeAreaProvider, {\n        children: _jsx(MainNavigationStack, {})\n      })\n    });\n  }\n  return _jsx(NativeBaseProvider, {\n    theme: theme,\n    children: _jsxs(_StyledComponent, {\n      source: Images.background,\n      className: \"h-screen\",\n      resizeMode: \"cover\",\n      component: ImageBackground,\n      children: [_jsx(StatusBar, {\n        hidden: true\n      }), screen]\n    })\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"h-screen\": {\n      \"height\": 100\n    }\n  },\n  topics: {\n    \"h-screen\": [\"height\"]\n  },\n  units: {\n    \"h-screen\": {\n      \"height\": \"vh\"\n    }\n  }\n});","map":{"version":3,"names":["SafeAreaProvider","Register","StatusBar","LoadingOverlay","useProfile","UserContext","theme","NativeBaseProvider","Images","MainNavigationStack","SetupScreen","useToast","ToastDialog","UserController","useCurrentLocation","App","toast","error","show","render","authUser","user","profile","userProfile","setProfile","setUserProfile","authStatus","status","profileLoading","updateGeoLocation","location","data","lat","coords","latitude","lng","longitude","updateUser","id","screen","background"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/App.tsx"],"sourcesContent":["import { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Register from './src/frontend/screens/auth/login';\nimport { StatusBar } from 'expo-status-bar';\nimport LoadingOverlay from \"./src/frontend/components/LoadingOverlay\";\nimport useProfile from '@app/hooks/useProfile';\nimport { UserContext } from '@app/context/user';\nimport theme from '@app/theme/nativebase';\nimport { NativeBaseProvider } from \"native-base\";\nimport Images from '@app/theme/images';\nimport { ImageBackground } from 'react-native';\nimport MainNavigationStack from \"@app/frontend/navigation/main\";\nimport SetupScreen from '@app/frontend/screens/auth/setup';\nimport { useToast } from 'native-base';\nimport ToastDialog from '@app/frontend/components/global/toast';\nimport UserController from '@app/controller/user';\nimport useCurrentLocation from '@app/hooks/useCurrentLocation';\n\nexport default function App() {\n    const toast = useToast();\n    const { user: authUser, \n            userProfile: profile, \n            setUserProfile: setProfile, \n            status: authStatus, profileLoading } = useProfile((error)=> {\n                toast.show({\n                    render: () => <ToastDialog message={error} />\n                });\n            });\n\n    const updateGeoLocation = async (location: any) => {\n        if (!profile) return;\n        const data = {\n            lat: location.coords.latitude,\n            lng: location.coords?.longitude\n        };\n        await UserController.updateUser(profile.id!, data, (error)=> {\n            toast.show({\n                render: () => <ToastDialog message={error} />\n            })\n        });\n    }\n\n    useCurrentLocation(\n        updateGeoLocation,\n        (error)=> {\n            toast.show({\n                render: () => <ToastDialog message={error} />\n            })\n        },\n    )\n\n    let screen = <LoadingOverlay/>;\n\n    if (authStatus === \"loading\" || profileLoading) {\n        screen = <LoadingOverlay/>\n    } else if (authStatus === \"unauthenticated\") {\n        screen = <Register/>\n    } else if (authStatus === \"authenticated\" && !profile) {\n        screen = <SetupScreen/>\n    } else {\n        screen = (\n            <UserContext.Provider value={{ profile, authUser, setProfile }}>\n                    <SafeAreaProvider>\n                        <MainNavigationStack/>\n                    </SafeAreaProvider>\n            </UserContext.Provider>\n        )\n    }\n\n    return (\n        <NativeBaseProvider theme={theme}>\n            <ImageBackground\n                source={Images.background}\n                className=\"h-screen\"\n                resizeMode=\"cover\"\n            >\n                <StatusBar hidden/>\n                {screen}\n            </ImageBackground>\n        </NativeBaseProvider>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}