{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SkypeIndicator } from 'react-native-indicators';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar LoadingOverlay = function LoadingOverlay() {\n  return _jsxs(View, {\n    style: styles.indicatorOverlay,\n    children: [_jsx(View, {\n      style: styles.indicatorBackground\n    }), _jsx(SkypeIndicator, {\n      color: \"white\"\n    })]\n  });\n};\nexport default LoadingOverlay;\nvar styles = StyleSheet.create({\n  indicatorOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: -100,\n    width: width,\n    height: height + 100,\n    zIndex: 10000\n  },\n  indicatorBackground: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"absolute\": {\n      \"position\": \"absolute\"\n    }\n  }\n});","map":{"version":3,"names":["React","SkypeIndicator","width","Dimensions","get","height","LoadingOverlay","styles","indicatorOverlay","indicatorBackground","StyleSheet","create","position","left","top","zIndex","backgroundColor"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/components/LoadingOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { SkypeIndicator } from 'react-native-indicators';\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\n/**\n * loading component when initializing app\n * @returns {JSX.Element} loading overlay component\n */\nconst LoadingOverlay = () => {\n    return (\n        <View style={styles.indicatorOverlay}>\n            <View style={styles.indicatorBackground}></View>\n            <SkypeIndicator color='white' />\n        </View>\n    );\n}\n\nexport default LoadingOverlay\n\nconst styles = StyleSheet.create({\n    indicatorOverlay: {\n        position: 'absolute',\n        left: 0,\n        top: -100,\n        width: width,\n        height: height + 100,\n        zIndex: 10000,\n    },\n\n    indicatorBackground: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAE1B,SAASC,cAAc,QAAQ,yBAAyB;AAAC;AAAA;AACzD,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,KAAK;AAC5C,IAAMG,MAAM,GAAGF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAM9C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EACzB,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,gBAAiB;IAAA,WACjC,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE;IAAoB,EAAQ,EAChD,KAAC,cAAc;MAAC,KAAK,EAAC;IAAO,EAAG;EAAA,EAC7B;AAEf,CAAC;AAED,eAAeH,cAAc;AAE7B,IAAMC,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC7BH,gBAAgB,EAAE;IACdI,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC,GAAG;IACTZ,KAAK,EAAEA,KAAK;IACZG,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBU,MAAM,EAAE;EACZ,CAAC;EAEDN,mBAAmB,EAAE;IACjBG,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNZ,KAAK,EAAE,MAAM;IACbG,MAAM,EAAE,MAAM;IACdW,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAAC;EAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}