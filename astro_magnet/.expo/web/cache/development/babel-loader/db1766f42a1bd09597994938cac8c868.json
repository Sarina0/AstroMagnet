{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { isFunction, isNull, isObject } from '@react-native-firebase/app/lib/common';\nimport StorageStatics from \"./StorageStatics\";\nvar TASK_ID = 0;\nfunction wrapErrorEventListener(listenerFn, unsubscribe) {\n  return function (event) {\n    if (unsubscribe) {\n      setTimeout(function () {\n        return unsubscribe();\n      }, 0);\n    }\n    if (isFunction(listenerFn)) {\n      listenerFn(event.error);\n    }\n  };\n}\nfunction wrapSnapshotEventListener(task, listenerFn, unsubscribe) {\n  if (!isFunction(listenerFn)) {\n    return null;\n  }\n  return function (event) {\n    if (unsubscribe) {\n      setTimeout(function () {\n        return unsubscribe();\n      }, 0);\n    }\n    if (isFunction(listenerFn)) {\n      var snapshot = Object.assign({}, event);\n      snapshot.task = task;\n      snapshot.ref = task._ref;\n      if (snapshot.metadata) {\n        if (!snapshot.metadata.generation) {\n          snapshot.metadata.generation = '';\n        }\n        if (!snapshot.metadata.bucket) {\n          snapshot.metadata.bucket = task._ref.bucket;\n        }\n        if (!snapshot.metadata.metageneration) {\n          snapshot.metadata.metageneration = '';\n        }\n      }\n      Object.freeze(snapshot);\n      task._snapshot = snapshot;\n      listenerFn(snapshot);\n    }\n  };\n}\nfunction addTaskEventListener(task, eventName, listener) {\n  var _eventName = eventName;\n  if (_eventName !== StorageStatics.TaskEvent.STATE_CHANGED) {\n    _eventName = task._type + \"_\" + eventName;\n  }\n  return task._storage.emitter.addListener(task._storage.eventNameForApp(task._id, _eventName), listener);\n}\nfunction subscribeToEvents(task, nextOrObserver, error, complete) {\n  var _error;\n  var _errorSubscription;\n  var _next;\n  var _nextSubscription;\n  var _complete;\n  var _completeSubscription;\n  var unsubscribe = function unsubscribe() {\n    if (_nextSubscription) {\n      _nextSubscription.remove();\n    }\n    if (_errorSubscription) {\n      _errorSubscription.remove();\n    }\n    if (_completeSubscription) {\n      _completeSubscription.remove();\n    }\n  };\n  if (isFunction(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else if (isObject(nextOrObserver)) {\n    _error = wrapErrorEventListener(nextOrObserver.error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver.next);\n    _complete = wrapSnapshotEventListener(task, nextOrObserver.complete, unsubscribe);\n  } else if (isNull(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else {\n    throw new Error(\"firebase.storage.StorageTask.on(*, _) 'nextOrObserver' must be a Function, an Object or Null.\");\n  }\n  if (_next) {\n    _nextSubscription = addTaskEventListener(task, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n  }\n  if (_error) {\n    _errorSubscription = addTaskEventListener(task, 'failure', _error);\n  }\n  if (_complete) {\n    _completeSubscription = addTaskEventListener(task, 'success', _complete);\n  }\n  return unsubscribe;\n}\nvar StorageTask = function () {\n  function StorageTask(type, storageRef, beginTaskFn) {\n    _classCallCheck(this, StorageTask);\n    this._type = type;\n    this._id = TASK_ID++;\n    this._promise = null;\n    this._ref = storageRef;\n    this._beginTask = beginTaskFn;\n    this._storage = storageRef._storage;\n    this._snapshot = null;\n  }\n  _createClass(StorageTask, [{\n    key: \"then\",\n    get: function get() {\n      var _this = this;\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n      return new Promise(function (resolve, reject) {\n        var boundPromise = _this._promise.then.bind(_this._promise);\n        boundPromise(function (response) {\n          _this._snapshot = _objectSpread(_objectSpread({}, response), {}, {\n            ref: _this._ref,\n            task: _this\n          });\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      }).then.bind(this._promise);\n    }\n  }, {\n    key: \"catch\",\n    get: function get() {\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n      return this._promise.catch.bind(this._promise);\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return this._snapshot;\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, nextOrObserver, error, complete) {\n      if (event !== StorageStatics.TaskEvent.STATE_CHANGED) {\n        throw new Error(\"firebase.storage.StorageTask.on event argument must be a string with a value of '\" + StorageStatics.TaskEvent.STATE_CHANGED + \"'\");\n      }\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n      if (!nextOrObserver && !error && !complete) {\n        return subscribeToEvents.bind(null, this);\n      }\n      return subscribeToEvents(this, nextOrObserver, error, complete);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this._storage.native.setTaskStatus(this._id, 0);\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      return this._storage.native.setTaskStatus(this._id, 1);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      return this._storage.native.setTaskStatus(this._id, 2);\n    }\n  }]);\n  return StorageTask;\n}();\nexport { StorageTask as default };","map":{"version":3,"names":["isFunction","isNull","isObject","StorageStatics","TASK_ID","wrapErrorEventListener","listenerFn","unsubscribe","event","setTimeout","error","wrapSnapshotEventListener","task","snapshot","Object","assign","ref","_ref","metadata","generation","bucket","metageneration","freeze","_snapshot","addTaskEventListener","eventName","listener","_eventName","TaskEvent","STATE_CHANGED","_type","_storage","emitter","addListener","eventNameForApp","_id","subscribeToEvents","nextOrObserver","complete","_error","_errorSubscription","_next","_nextSubscription","_complete","_completeSubscription","remove","next","Error","StorageTask","type","storageRef","beginTaskFn","_promise","_beginTask","Promise","resolve","reject","boundPromise","then","bind","response","catch","native","setTaskStatus"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/storage/lib/StorageTask.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFunction, isNull, isObject } from '@react-native-firebase/app/lib/common';\nimport StorageStatics from './StorageStatics';\n\nlet TASK_ID = 0;\n\nfunction wrapErrorEventListener(listenerFn, unsubscribe) {\n  return event => {\n    if (unsubscribe) {\n      setTimeout(() => unsubscribe(), 0);\n    } // 1 frame = 16ms, pushing to next frame\n    if (isFunction(listenerFn)) {\n      listenerFn(event.error);\n    }\n  };\n}\n\nfunction wrapSnapshotEventListener(task, listenerFn, unsubscribe) {\n  if (!isFunction(listenerFn)) {\n    return null;\n  }\n  return event => {\n    if (unsubscribe) {\n      setTimeout(() => unsubscribe(), 0);\n    } // 1 frame = 16ms, pushing to next frame\n    if (isFunction(listenerFn)) {\n      const snapshot = Object.assign({}, event);\n      snapshot.task = task;\n      snapshot.ref = task._ref;\n\n      if (snapshot.metadata) {\n        if (!snapshot.metadata.generation) {\n          snapshot.metadata.generation = '';\n        }\n        if (!snapshot.metadata.bucket) {\n          snapshot.metadata.bucket = task._ref.bucket;\n        }\n        if (!snapshot.metadata.metageneration) {\n          snapshot.metadata.metageneration = '';\n        }\n        // // TODO(salakar): these are always here, cannot repro without, remove in 6.1.0 if no issues:\n        // if (!snapshot.metadata.name) snapshot.metadata.name = task._ref.name;\n        // if (!snapshot.metadata.fullPath) snapshot.metadata.fullPath = task._ref.fullPath;\n      }\n\n      Object.freeze(snapshot);\n      task._snapshot = snapshot;\n\n      listenerFn(snapshot);\n    }\n  };\n}\n\nfunction addTaskEventListener(task, eventName, listener) {\n  let _eventName = eventName;\n  if (_eventName !== StorageStatics.TaskEvent.STATE_CHANGED) {\n    _eventName = `${task._type}_${eventName}`;\n  }\n\n  return task._storage.emitter.addListener(\n    task._storage.eventNameForApp(task._id, _eventName),\n    listener,\n  );\n}\n\nfunction subscribeToEvents(task, nextOrObserver, error, complete) {\n  let _error;\n  let _errorSubscription;\n\n  let _next;\n  let _nextSubscription;\n\n  let _complete;\n  let _completeSubscription;\n\n  const unsubscribe = () => {\n    if (_nextSubscription) {\n      _nextSubscription.remove();\n    }\n    if (_errorSubscription) {\n      _errorSubscription.remove();\n    }\n    if (_completeSubscription) {\n      _completeSubscription.remove();\n    }\n  };\n\n  if (isFunction(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else if (isObject(nextOrObserver)) {\n    _error = wrapErrorEventListener(nextOrObserver.error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver.next);\n    _complete = wrapSnapshotEventListener(task, nextOrObserver.complete, unsubscribe);\n  } else if (isNull(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else {\n    throw new Error(\n      \"firebase.storage.StorageTask.on(*, _) 'nextOrObserver' must be a Function, an Object or Null.\",\n    );\n  }\n\n  if (_next) {\n    _nextSubscription = addTaskEventListener(task, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n  }\n\n  if (_error) {\n    _errorSubscription = addTaskEventListener(task, 'failure', _error);\n  }\n\n  if (_complete) {\n    _completeSubscription = addTaskEventListener(task, 'success', _complete);\n  }\n\n  return unsubscribe;\n}\n\nexport default class StorageTask {\n  constructor(type, storageRef, beginTaskFn) {\n    this._type = type;\n    this._id = TASK_ID++;\n    this._promise = null;\n    this._ref = storageRef;\n    this._beginTask = beginTaskFn;\n    this._storage = storageRef._storage;\n    this._snapshot = null;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#then\n   */\n  get then() {\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n\n    return new Promise((resolve, reject) => {\n      const boundPromise = this._promise.then.bind(this._promise);\n\n      boundPromise(response => {\n        this._snapshot = { ...response, ref: this._ref, task: this };\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    }).then.bind(this._promise);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#catch\n   */\n  get catch() {\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n    return this._promise.catch.bind(this._promise);\n  }\n\n  get snapshot() {\n    return this._snapshot;\n  }\n\n  // // NOT on Web SDK\n  // /**\n  //  * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#finally\n  //  */\n  // get finally() {\n  //   if (!this._promise) this._promise = this._beginTask(this);\n  //   return this._promise.finally.bind(this._promise);\n  // }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#on\n   */\n  on(event, nextOrObserver, error, complete) {\n    if (event !== StorageStatics.TaskEvent.STATE_CHANGED) {\n      throw new Error(\n        `firebase.storage.StorageTask.on event argument must be a string with a value of '${StorageStatics.TaskEvent.STATE_CHANGED}'`,\n      );\n    }\n\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n\n    // if only event provided return the subscriber function\n    if (!nextOrObserver && !error && !complete) {\n      return subscribeToEvents.bind(null, this);\n    }\n\n    return subscribeToEvents(this, nextOrObserver, error, complete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#pause\n   */\n  pause() {\n    return this._storage.native.setTaskStatus(this._id, 0);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#resume\n   */\n  resume() {\n    return this._storage.native.setTaskStatus(this._id, 1);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#cancel\n   */\n  cancel() {\n    return this._storage.native.setTaskStatus(this._id, 2);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}