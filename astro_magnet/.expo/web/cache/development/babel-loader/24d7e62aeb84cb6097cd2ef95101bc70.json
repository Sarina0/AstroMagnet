{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport ChatScreen from \"./chat\";\nimport ProfileScreen from \"../screens/profile\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { ColorPalette } from \"../../theme/colors\";\nimport { colorWithOpacity } from \"../../shared/actions/colors\";\nimport { useState } from \"react\";\nimport LikedScreen from \"../screens/home/LikedScreen\";\nimport LookingScreen from \"../screens/home/LookingScreen\";\nimport { MenuContext } from \"../../context/menu\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialBottomTabNavigator();\nvar tabTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"transparent\"\n  })\n});\nexport default function MainNavigation() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuVisible = _useState2[0],\n    setMenuVisible = _useState2[1];\n  return _jsx(MenuContext.Provider, {\n    value: {\n      isMenuVisible: isMenuVisible,\n      setMenuVisible: setMenuVisible\n    },\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        theme: tabTheme,\n        children: _jsxs(Tab.Navigator, {\n          initialRouteName: \"Search\",\n          activeColor: ColorPalette.SOFT_MAGENTA,\n          inactiveColor: colorWithOpacity(ColorPalette.SOFT_MAGENTA, 95),\n          barStyle: navStyle(isMenuVisible),\n          shifting: true,\n          children: [_jsx(Tab.Screen, {\n            name: \"Chat\",\n            options: {\n              tabBarLabel: 'Chat',\n              tabBarIcon: function tabBarIcon(_ref) {\n                var color = _ref.color;\n                return _jsx(MaterialCommunityIcons, {\n                  name: \"chat\",\n                  color: color,\n                  size: 26\n                });\n              }\n            },\n            component: ChatScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Search\",\n            component: LookingScreen,\n            options: {\n              tabBarLabel: 'Search',\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var color = _ref2.color;\n                return _jsx(MaterialCommunityIcons, {\n                  name: \"magnify\",\n                  color: color,\n                  size: 26\n                });\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Like\",\n            options: {\n              tabBarLabel: 'Like',\n              tabBarIcon: function tabBarIcon(_ref3) {\n                var color = _ref3.color;\n                return _jsx(MaterialCommunityIcons, {\n                  name: \"heart\",\n                  color: color,\n                  size: 26\n                });\n              }\n            },\n            children: function children() {\n              return _jsx(LikedScreen, {});\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Profile\",\n            component: ProfileScreen,\n            options: {\n              tabBarLabel: 'Profile',\n              tabBarIcon: function tabBarIcon(_ref4) {\n                var color = _ref4.color;\n                return _jsx(MaterialCommunityIcons, {\n                  name: \"account\",\n                  color: color,\n                  size: 26\n                });\n              }\n            }\n          })]\n        })\n      })\n    })\n  });\n}\nvar navStyle = function navStyle(isVisible) {\n  return {\n    display: isVisible ? 'flex' : 'none',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    backgroundColor: colorWithOpacity(ColorPalette.DARK_VIOLET_2, 80),\n    overflow: \"hidden\"\n  };\n};\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"hidden\": {\n      \"display\": \"none\"\n    }\n  }\n});","map":{"version":3,"names":["NavigationContainer","DefaultTheme","MaterialCommunityIcons","ChatScreen","ProfileScreen","createMaterialBottomTabNavigator","ColorPalette","colorWithOpacity","useState","LikedScreen","LookingScreen","MenuContext","SafeAreaProvider","Tab","tabTheme","colors","background","MainNavigation","isMenuVisible","setMenuVisible","SOFT_MAGENTA","navStyle","tabBarLabel","tabBarIcon","color","isVisible","display","borderTopLeftRadius","borderTopRightRadius","backgroundColor","DARK_VIOLET_2","overflow"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/navigation/main.tsx"],"sourcesContent":["import { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\nimport ChatScreen from '@app/frontend/navigation/chat';\nimport ProfileScreen from '@app/frontend/screens/profile';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport { ColorPalette } from '@app/theme/colors';\nimport { colorWithOpacity } from '@app/shared/actions/colors';\nimport { useState } from \"react\";\nimport { ViewStyle } from 'react-native';\nimport LikedScreen from '../screens/home/LikedScreen';\nimport LookingScreen from '../screens/home/LookingScreen';\nimport { NavigatorScreenParams } from '@react-navigation/native';\nimport { ChatStackParamList } from '@app/frontend/navigation/chat';\nimport { MenuContext } from '@app/context/menu';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport type RootStackParamList = {\n    Chat: NavigatorScreenParams<ChatStackParamList>\n    Profile: undefined;\n    Search: undefined;\n    Like: undefined;\n}\n\nconst Tab = createMaterialBottomTabNavigator<RootStackParamList>();\nconst tabTheme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        background: \"transparent\"\n    }\n}\n\nexport default function MainNavigation() {\n    const [isMenuVisible, setMenuVisible] = useState(true);\n\n    return (\n        <MenuContext.Provider value={{isMenuVisible, setMenuVisible}}>\n            <SafeAreaProvider>\n                <NavigationContainer theme={tabTheme}>\n                        <Tab.Navigator\n                            initialRouteName=\"Search\"\n                            activeColor={ ColorPalette.SOFT_MAGENTA }\n                            inactiveColor={ colorWithOpacity(ColorPalette.SOFT_MAGENTA, 95) }\n                            barStyle={navStyle(isMenuVisible)}\n                            shifting\n                        >\n                            <Tab.Screen\n                                name=\"Chat\"\n                                options = {{\n                                    tabBarLabel: 'Chat',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"chat\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                                component={ChatScreen}\n                            />\n                            <Tab.Screen\n                                name=\"Search\"\n                                component={LookingScreen}\n                                options = {{\n                                    tabBarLabel: 'Search',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"magnify\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                            />\n                            <Tab.Screen\n                                name=\"Like\"\n                                options = {{\n                                    tabBarLabel: 'Like',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"heart\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                                children={\n                                    () => <LikedScreen />\n                                }\n                            />\n                            <Tab.Screen\n                                name=\"Profile\"\n                                component={ProfileScreen}\n                                options = {{\n                                    tabBarLabel: 'Profile',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"account\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                            />\n                        </Tab.Navigator>\n                </NavigationContainer>\n            </SafeAreaProvider>\n        </MenuContext.Provider>\n    )\n}\n\nconst navStyle = (isVisible: boolean): ViewStyle => {\n    return ({\n        display: isVisible ? 'flex' : 'none', \n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        backgroundColor: colorWithOpacity(ColorPalette.DARK_VIOLET_2, 80),\n        overflow: \"hidden\"\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}