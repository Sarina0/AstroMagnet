{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference from \"./FirestoreDocumentReference\";\nimport FirestoreDocumentSnapshot from \"./FirestoreDocumentSnapshot\";\nimport { parseSetOptions, parseUpdateArgs } from \"./utils\";\nimport { buildNativeMap } from \"./utils/serialize\";\nvar FirestoreTransaction = function () {\n  function FirestoreTransaction(firestore, meta) {\n    _classCallCheck(this, FirestoreTransaction);\n    this._firestore = firestore;\n    this._meta = meta;\n  }\n  _createClass(FirestoreTransaction, [{\n    key: \"_prepare\",\n    value: function _prepare() {\n      this._calledGetCount = 0;\n      this._commandBuffer = [];\n      this._pendingResult = undefined;\n    }\n  }, {\n    key: \"get\",\n    value: function get(documentRef) {\n      var _this = this;\n      if (!(documentRef instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.get(*) 'documentRef' expected a DocumentReference.\");\n      }\n      this._calledGetCount++;\n      return this._firestore.native.transactionGetDocument(this._meta.id, documentRef.path).then(function (data) {\n        return new FirestoreDocumentSnapshot(_this._firestore, data);\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(documentRef, data, options) {\n      if (!(documentRef instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.set(*) 'documentRef' expected a DocumentReference.\");\n      }\n      if (!isObject(data)) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.set(_, *) 'data' must be an object..\");\n      }\n      var setOptions;\n      try {\n        setOptions = parseSetOptions(options);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.set(_, _, *) \" + e.message + \".\");\n      }\n      this._commandBuffer.push({\n        type: 'SET',\n        path: documentRef.path,\n        data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n        options: setOptions\n      });\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(documentRef) {\n      if (!(documentRef instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.update(*) 'documentRef' expected a DocumentReference.\");\n      }\n      var data;\n      try {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        data = parseUpdateArgs(args);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.update(_, *) \" + e.message);\n      }\n      this._commandBuffer.push({\n        type: 'UPDATE',\n        path: documentRef.path,\n        data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties)\n      });\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(documentRef) {\n      if (!(documentRef instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().runTransaction() Transaction.delete(*) 'documentRef' expected a DocumentReference.\");\n      }\n      this._commandBuffer.push({\n        type: 'DELETE',\n        path: documentRef.path\n      });\n      return this;\n    }\n  }]);\n  return FirestoreTransaction;\n}();\nexport { FirestoreTransaction as default };","map":{"version":3,"names":["isObject","FirestoreDocumentReference","FirestoreDocumentSnapshot","parseSetOptions","parseUpdateArgs","buildNativeMap","FirestoreTransaction","firestore","meta","_firestore","_meta","_calledGetCount","_commandBuffer","_pendingResult","undefined","documentRef","Error","native","transactionGetDocument","id","path","then","data","options","setOptions","e","message","push","type","_settings","ignoreUndefinedProperties","args"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreTransaction.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference from './FirestoreDocumentReference';\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\nimport { parseSetOptions, parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\n\nexport default class FirestoreTransaction {\n  constructor(firestore, meta) {\n    this._firestore = firestore;\n    this._meta = meta;\n  }\n\n  /**\n   * Clears the command buffer and any pending result in prep for\n   * the next transaction iteration attempt.\n   *\n   * @private\n   */\n  _prepare() {\n    this._calledGetCount = 0;\n    this._commandBuffer = [];\n    this._pendingResult = undefined;\n  }\n\n  /**\n   * Reads the document referenced by the provided DocumentReference.\n   */\n  get(documentRef) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.get(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    this._calledGetCount++;\n    return this._firestore.native\n      .transactionGetDocument(this._meta.id, documentRef.path)\n      .then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n\n  /**\n   * Writes to the document referred to by the provided DocumentReference.\n   * If the document does not exist yet, it will be created. If you pass options,\n   * the provided data can be merged into the existing document.\n   */\n  set(documentRef, data, options) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.set(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    if (!isObject(data)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.set(_, *) 'data' must be an object..\",\n      );\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore().runTransaction() Transaction.set(_, _, *) ${e.message}.`,\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'SET',\n      path: documentRef.path,\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      options: setOptions,\n    });\n\n    return this;\n  }\n\n  update(documentRef, ...args) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.update(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore().runTransaction() Transaction.update(_, *) ${e.message}`,\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'UPDATE',\n      path: documentRef.path,\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    });\n\n    return this;\n  }\n\n  delete(documentRef) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.delete(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'DELETE',\n      path: documentRef.path,\n    });\n\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}