{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { useContext } from 'react';\nimport PageHeader from \"../../components/global/header\";\nimport SafeArea from \"../../components/global/safeArea\";\nimport { useToast } from 'native-base';\nimport ToastDialog from \"../../components/global/toast\";\nimport useChatChannels from \"../../../hooks/useChatChannels\";\nimport LoadingView from \"../../components/LoadingOverlay\";\nimport FriendCard from \"../../components/friendCard\";\nimport { formatChatTime } from \"../../../shared/actions/time\";\nimport { FlatList, Text } from \"native-base\";\nimport { UserContext } from \"../../../context/user\";\nimport EmptyView from \"../../components/EmptyView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatCard = function ChatCard(props) {\n  var _props$room = props.room,\n    users = _props$room.users,\n    lastMessage = _props$room.lastMessage;\n  var createdAt = \"\";\n  if (lastMessage) {\n    createdAt = formatChatTime(lastMessage.createdAt.toDate());\n  }\n  var _users$filter$ = users.filter(function (user) {\n      return user.id !== props.currUserId;\n    })[0],\n    profilePicture = _users$filter$.profilePicture,\n    name = _users$filter$.name;\n  var navigation = useNavigation();\n  return _jsx(FriendCard, {\n    personName: name,\n    profilePicture: profilePicture,\n    lastMessageTime: createdAt,\n    lastMessage: lastMessage == null ? void 0 : lastMessage.content,\n    onPress: function onPress() {\n      navigation.push(\"room\", {\n        id: props.room.id,\n        name: name,\n        profilePic: profilePicture\n      });\n    }\n  });\n};\nexport default function ChatScreen() {\n  var toast = useToast();\n  var _useContext = useContext(UserContext),\n    profile = _useContext.profile;\n  var _useChatChannels = useChatChannels(function (error) {\n      toast.show({\n        render: function render() {\n          return _jsx(ToastDialog, {\n            message: error\n          });\n        }\n      });\n    }),\n    channels = _useChatChannels.channels,\n    loading = _useChatChannels.loading;\n  return _jsxs(SafeArea, {\n    children: [loading && _jsx(LoadingView, {}), _jsx(PageHeader, {}), _jsx(Text, {\n      fontSize: 25,\n      fontWeight: \"bold\",\n      color: \"onSecondary\",\n      ml: 2,\n      mt: 5,\n      children: \"Messages\"\n    }), channels.length < 1 && _jsx(EmptyView, {\n      title: \"No chats yet\"\n    }), channels.length > 0 && _jsx(FlatList, {\n      data: channels,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatCard, {\n          room: item,\n          currUserId: profile == null ? void 0 : profile.id\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      p: 2,\n      flex: 1\n    })]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["useContext","PageHeader","SafeArea","useToast","ToastDialog","useChatChannels","LoadingView","FriendCard","formatChatTime","FlatList","Text","UserContext","EmptyView","useNavigation","ChatCard","props","room","users","lastMessage","createdAt","toDate","filter","user","id","currUserId","profilePicture","name","navigation","content","push","profilePic","ChatScreen","toast","profile","error","show","render","channels","loading","length","item"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/screens/chat/rooms.tsx"],"sourcesContent":["import { useContext } from 'react'\nimport PageHeader from '@app/frontend/components/global/header';\nimport SafeArea from \"@app/frontend/components/global/safeArea\";\nimport { useToast } from 'native-base';\nimport ToastDialog from '@app/frontend/components/global/toast';\nimport useChatChannels from \"@app/hooks/useChatChannels\";\nimport LoadingView from \"@app/frontend/components/LoadingOverlay\";\nimport FriendCard from \"@app/frontend/components/friendCard\";\nimport { ChatRoom } from '@app/shared/interfaces/message';\nimport {formatChatTime} from \"@app/shared/actions/time\";\nimport { FlatList, Text } from \"native-base\";\nimport { UserContext } from \"@app/context/user\";\nimport EmptyView from '@app/frontend/components/EmptyView';\nimport { ChatStackParamList } from '../../navigation/chat';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\n\n/**\n * ChatScreen props type\n * @property {boolean} menuVisible - menu visibility\n * @property {Dispatch<SetStateAction<boolean>>} setMenuVisible - menu visibility toggler\n */\ntype NavigationProps = NativeStackNavigationProp<ChatStackParamList, \"room\">;\n\n/**\n * Chat Card props type\n */\ntype ChatCardProps = {\n  currUserId: string;\n  room: ChatRoom;\n}\n\nconst ChatCard = (props: ChatCardProps ) => {\n  const { users, lastMessage } = props.room;\n  let createdAt = \"\";\n  if (lastMessage) {\n    createdAt = formatChatTime(lastMessage.createdAt.toDate());\n  }\n  const { profilePicture, name } = users.filter((user) => user.id !== props.currUserId)[0];\n  const navigation = useNavigation<NavigationProps>();\n  return (\n    <FriendCard\n      personName={name}\n      profilePicture={profilePicture}\n      lastMessageTime={createdAt}\n      lastMessage={lastMessage?.content}\n      onPress={() => {\n        navigation.push(\"room\", {\n          id: props.room.id!,\n          name: name,\n          profilePic: profilePicture\n        });\n      }}\n    />\n  );\n}\n\nexport default function ChatScreen() {\n  const toast = useToast();\n  const { profile } = useContext(UserContext);\n\n  const { channels, loading} = useChatChannels(\n    (error) => {\n      toast.show({\n        render: () => <ToastDialog message={error} />\n      })\n    });\n\n  return (\n    <SafeArea>\n        { loading && <LoadingView /> }\n        <PageHeader />\n        <Text\n          fontSize={25}\n          fontWeight=\"bold\"\n          color=\"onSecondary\"\n          ml={2}\n          mt={5}\n        >\n          Messages\n        </Text>\n        { channels.length < 1 && \n          <EmptyView title='No chats yet' />}\n        { channels.length > 0 &&\n          <FlatList\n            data={channels}\n            renderItem={({ item }) => \n              <ChatCard \n                room={item} \n                currUserId={profile?.id!} \n              />\n            }\n            keyExtractor={(item) => item.id!}\n            p={2}\n            flex={1}\n          />}\n    </SafeArea>    \n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}