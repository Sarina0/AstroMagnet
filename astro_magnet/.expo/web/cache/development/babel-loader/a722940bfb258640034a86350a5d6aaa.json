{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport { Select, Text, CheckIcon, ChevronDownIcon } from \"native-base\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SelectComponent(props) {\n  var _props$value, _props$value2;\n  return _jsxs(_StyledComponent, {\n    className: \"mt-2 \" + props.className,\n    style: props.style,\n    component: View,\n    children: [_jsx(Text, {\n      color: \"onSecondary\",\n      mb: 2,\n      fontSize: 20,\n      fontWeight: \"bold\",\n      children: props.label\n    }), _jsx(Select, {\n      bgColor: \"secondary\",\n      color: \"onSecondary\",\n      placeholderTextColor: \"indigo.900\",\n      placeholder: props.placeholder,\n      onValueChange: props.onValueChange,\n      selectedValue: (_props$value = props.value) != null ? _props$value : undefined,\n      defaultValue: (_props$value2 = props.value) != null ? _props$value2 : undefined,\n      borderRadius: 7,\n      borderColor: \"transparent\",\n      alignItems: \"center\",\n      fontSize: 18,\n      fontWeight: \"bold\",\n      dropdownIcon: _jsx(ChevronDownIcon, {\n        size: 5,\n        color: \"indigo.900\",\n        mr: 2\n      }),\n      _selectedItem: {\n        bg: \"onSecondary\",\n        _text: {\n          color: \"secondary\",\n          fontWeight: \"bold\"\n        },\n        endIcon: _jsx(CheckIcon, {\n          size: 5\n        })\n      },\n      _item: {\n        bg: \"transparent\",\n        _text: {\n          fontWeight: \"bold\"\n        }\n      },\n      children: props.items.map(function (item, index) {\n        return _jsx(Select.Item, {\n          label: item.label,\n          value: item.value,\n          fontSize: 20\n        }, index);\n      })\n    })]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"mt-2\": {\n      \"marginTop\": 8\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["Select","Text","CheckIcon","ChevronDownIcon","SelectComponent","props","className","style","label","placeholder","onValueChange","value","undefined","bg","_text","color","fontWeight","endIcon","items","map","item","index"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/components/global/select.tsx"],"sourcesContent":["import {Select, Text, CheckIcon, ChevronDownIcon} from \"native-base\";\nimport {View, ViewStyle} from \"react-native\";\n\n/**\n * select props type\n * @property {string | undefined} label - label of the select\n * @property {string | undefined} placeholder - placeholder of the select\n * @property {string} value - value of the select\n * @property {(newValue: string) => void} onChangeText - function to call when the value changes\n * @property {boolean} items - all options of the select\n * @property {string | undefined} className - extra tailwind class for select container\n * @property {ViewStyle | undefined} style - extra style for select container\n */\ninterface Props {\n    label?: string;\n    placeholder?: string;\n    value: string | null | undefined;\n    onValueChange: (newValue: string) => void;\n    items: {label: string, value: string}[];\n    className?: string;\n    style?: ViewStyle | ViewStyle[];\n}\n\n/**\n * select component\n * @prop {string | undefined} label - label of the select if has\n * @prop {string | undefined} placeholder - placeholder of the select if has\n * @prop {string} value - value of the select\n * @prop {(newValue: string) => void} onValueChange - function to call when the select value changes\n * @prop {boolean | undefined} items - all options of the select\n * @prop {string | undefined} className - extra tailwind class for select container\n * @prop {ViewStyle | undefined} style - extra style for select container\n * @returns {JSX.Element} select component\n */\nexport default function SelectComponent(props: Props) {\n    return(\n        <View className={`mt-2 ${props.className}`} style={props.style}>\n            <Text\n                color=\"onSecondary\"\n                mb={2}\n                fontSize={20}\n                fontWeight=\"bold\"\n            >\n                {props.label}\n            </Text>\n            <Select\n                bgColor=\"secondary\"\n                color=\"onSecondary\"\n                placeholderTextColor=\"indigo.900\"\n                placeholder={props.placeholder}\n                onValueChange={props.onValueChange}\n                selectedValue={props.value??undefined}\n                defaultValue={props.value??undefined}\n                borderRadius={7}\n                borderColor=\"transparent\"\n                alignItems=\"center\"\n                fontSize={18}\n                fontWeight=\"bold\"\n                dropdownIcon={<ChevronDownIcon size={5} color=\"indigo.900\" mr={2}/>}\n                _selectedItem={{\n                    bg: \"onSecondary\",\n                    _text: {\n                        color: \"secondary\",\n                        fontWeight: \"bold\"\n                    },\n                    endIcon: <CheckIcon size={5}/>\n                }}\n                _item={{\n                    bg: \"transparent\",\n                    _text: {\n                        fontWeight: \"bold\"\n                    }\n                }}\n            >\n                {props.items.map((item, index) => (\n                    <Select.Item \n                        label={item.label} \n                        value={item.value} \n                        key={index}\n                        fontSize={20}\n                    />\n                ))}\n            </Select>\n        </View>\n    )\n}"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,eAAe,QAAO,aAAa;AAAC;AAAA;AAAA;AAkCrE,eAAe,SAASC,eAAe,CAACC,KAAY,EAAE;EAAA;EAClD;IACU,SAAS,YAAUA,KAAK,CAACC,SAAY;IAAC,KAAK,EAAED,KAAK,CAACE,KAAM;IAAA;IAAA,WAC3D,KAAC,IAAI;MACD,KAAK,EAAC,aAAa;MACnB,EAAE,EAAE,CAAE;MACN,QAAQ,EAAE,EAAG;MACb,UAAU,EAAC,MAAM;MAAA,UAEhBF,KAAK,CAACG;IAAK,EACT,EACP,KAAC,MAAM;MACH,OAAO,EAAC,WAAW;MACnB,KAAK,EAAC,aAAa;MACnB,oBAAoB,EAAC,YAAY;MACjC,WAAW,EAAEH,KAAK,CAACI,WAAY;MAC/B,aAAa,EAAEJ,KAAK,CAACK,aAAc;MACnC,aAAa,kBAAEL,KAAK,CAACM,KAAK,2BAAEC,SAAU;MACtC,YAAY,mBAAEP,KAAK,CAACM,KAAK,4BAAEC,SAAU;MACrC,YAAY,EAAE,CAAE;MAChB,WAAW,EAAC,aAAa;MACzB,UAAU,EAAC,QAAQ;MACnB,QAAQ,EAAE,EAAG;MACb,UAAU,EAAC,MAAM;MACjB,YAAY,EAAE,KAAC,eAAe;QAAC,IAAI,EAAE,CAAE;QAAC,KAAK,EAAC,YAAY;QAAC,EAAE,EAAE;MAAE,EAAG;MACpE,aAAa,EAAE;QACXC,EAAE,EAAE,aAAa;QACjBC,KAAK,EAAE;UACHC,KAAK,EAAE,WAAW;UAClBC,UAAU,EAAE;QAChB,CAAC;QACDC,OAAO,EAAE,KAAC,SAAS;UAAC,IAAI,EAAE;QAAE;MAChC,CAAE;MACF,KAAK,EAAE;QACHJ,EAAE,EAAE,aAAa;QACjBC,KAAK,EAAE;UACHE,UAAU,EAAE;QAChB;MACJ,CAAE;MAAA,UAEDX,KAAK,CAACa,KAAK,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;QAAA,OACzB,KAAC,MAAM,CAAC,IAAI;UACR,KAAK,EAAED,IAAI,CAACZ,KAAM;UAClB,KAAK,EAAEY,IAAI,CAACT,KAAM;UAElB,QAAQ,EAAE;QAAG,GADRU,KAAK,CAEZ;MAAA,CACL;IAAC,EACG;EAAA;AAGrB;AAAC;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}