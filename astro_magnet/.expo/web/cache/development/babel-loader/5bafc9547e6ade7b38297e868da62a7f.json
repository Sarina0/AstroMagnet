{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Images from \"../../theme/images\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmptyView = function EmptyView(props) {\n  var title = props.title;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Image, {\n        style: styles.sadIcon,\n        source: Images.icon_sad\n      }), _jsx(Text, {\n        style: styles.textLabel,\n        children: title || ''\n      })]\n    })\n  });\n};\nexport default EmptyView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sadIcon: {\n    width: 50,\n    height: 50,\n    resizeMode: 'contain',\n    marginBottom: 10,\n    opacity: 0.7\n  },\n  textLabel: {\n    fontSize: 20,\n    color: 'white',\n    opacity: 0.7\n  },\n  placeImage: {\n    width: 20,\n    height: 20,\n    resizeMode: 'contain'\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","Images","EmptyView","props","title","styles","container","alignItems","justifyContent","sadIcon","icon_sad","textLabel","StyleSheet","create","flex","width","height","top","resizeMode","marginBottom","opacity","fontSize","color","placeImage"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/components/EmptyView.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Dimensions, Image, Text } from 'react-native';\nimport Images from \"../../theme/images\";\n\n/**\n * empty view component props type\n * @property {string} title - title of the empty view\n */\ninterface Props {\n    title: string;\n}\n\n/**\n * component to show when there is no data\n * @prop {string} title - title of the empty view\n * @returns {JSX.Element} empty view component\n */\nconst EmptyView = (props: Props) => {\n    const { title } = props;\n\n    return (\n        <View style={styles.container}>\n            <View style={{alignItems: 'center', justifyContent: 'center'}}>\n                <Image style={styles.sadIcon} source={Images.icon_sad}/>\n                <Text style={styles.textLabel}>{title || ''}</Text>\n            </View>\n        </View>\n    );\n}\n\nexport default EmptyView\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        top: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n\n    sadIcon: {\n        width: 50,\n        height: 50,\n        resizeMode: 'contain',\n        marginBottom: 10,\n        opacity: 0.7\n    },\n\n    textLabel: {\n        fontSize: 20,\n        color: 'white',\n        opacity: 0.7\n    },\n    placeImage: {\n        width: 20,\n        height: 20,\n        resizeMode: 'contain',\n    },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAE1B,OAAOC,MAAM;AAA2B;AAAA;AAexC,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAY,EAAK;EAChC,IAAQC,KAAK,GAAKD,KAAK,CAAfC,KAAK;EAEb,OACI,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC1B,MAAC,IAAI;MAAC,KAAK,EAAE;QAACC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAQ,CAAE;MAAA,WAC1D,KAAC,KAAK;QAAC,KAAK,EAAEH,MAAM,CAACI,OAAQ;QAAC,MAAM,EAAER,MAAM,CAACS;MAAS,EAAE,EACxD,KAAC,IAAI;QAAC,KAAK,EAAEL,MAAM,CAACM,SAAU;QAAA,UAAEP,KAAK,IAAI;MAAE,EAAQ;IAAA;EAChD,EACJ;AAEf,CAAC;AAED,eAAeF,SAAS;AAExB,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC7BP,SAAS,EAAE;IACPQ,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,CAAC;IACNV,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EAEDC,OAAO,EAAE;IACLM,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVE,UAAU,EAAE,SAAS;IACrBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC;EAEDT,SAAS,EAAE;IACPU,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdF,OAAO,EAAE;EACb,CAAC;EACDG,UAAU,EAAE;IACRR,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVE,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAAC;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}