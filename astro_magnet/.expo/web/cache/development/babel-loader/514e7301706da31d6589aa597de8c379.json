{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useToast, Fab, ArrowDownIcon } from \"native-base\";\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { MenuContext } from \"../../../context/menu\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport useMessage from \"../../../hooks/useMessage\";\nimport ToastDialog from \"../../components/global/toast\";\nimport Input from \"../../components/chat/chatInput\";\nimport Dialog from \"../../components/chat/dialog\";\nimport LoadingOverlay from \"../../components/LoadingOverlay\";\nimport { sendMessage } from \"../../../controller/message\";\nimport { UserContext } from \"../../../context/user\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport { AutoScrollFlatList } from \"react-native-autoscroll-flatlist\";\nimport useKeyboardHeight from \"../../../hooks/useKeyboardHeight\";\nimport useKeyboard from \"../../../hooks/useKeyboard\";\nimport { ColorPalette } from \"../../../theme/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Room(props) {\n  var toast = useToast();\n  var listRef = useRef(null);\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    page = _useState2[0],\n    setPage = _useState2[1];\n  var _useMessage = useMessage(props.route.params.id, page, function (error) {\n      toast.show({\n        render: function render() {\n          return _jsx(ToastDialog, {\n            message: error\n          });\n        }\n      });\n    }),\n    messages = _useMessage.messages,\n    loading = _useMessage.loading;\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useContext = useContext(UserContext),\n    profile = _useContext.profile;\n  var _useContext2 = useContext(MenuContext),\n    setMenuVisible = _useContext2.setMenuVisible;\n  useEffect(function () {\n    setMenuVisible(false);\n    return function () {\n      setMenuVisible(true);\n      setPage(1);\n    };\n  }, []);\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    firstLoad = _useState6[0],\n    setFirstLoad = _useState6[1];\n  useEffect(function () {\n    if (firstLoad && !loading) {\n      setFirstLoad(false);\n    }\n  }, [firstLoad, loading]);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isKeyboardShow = _useState8[0],\n    setIsKeyboardShow = _useState8[1];\n  var keyboardHeight = useKeyboardHeight();\n  useKeyboard(function (isKeyboardShow) {\n    setIsKeyboardShow(isKeyboardShow);\n  });\n  function onMessageTopScroll() {\n    if (!firstLoad && !loading) {\n      setPage(page + 1);\n    }\n  }\n  function onSendMessage() {\n    return _onSendMessage.apply(this, arguments);\n  }\n  function _onSendMessage() {\n    _onSendMessage = _asyncToGenerator(function* () {\n      if (!profile) return;\n      if (message.length > 0) {\n        var newMessage = {\n          chatRoomId: props.route.params.id,\n          sendBy: {\n            id: profile.id,\n            name: profile.name,\n            profilePicture: profile.profilePicture,\n            email: profile.email\n          },\n          content: message,\n          timestamp: new Date(),\n          createdAt: firestore.Timestamp.now(),\n          seen: false\n        };\n        yield sendMessage(newMessage, function (error) {\n          toast.show({\n            render: function render() {\n              return _jsx(ToastDialog, {\n                message: error\n              });\n            }\n          });\n        });\n        setMessage(\"\");\n      }\n      return;\n    });\n    return _onSendMessage.apply(this, arguments);\n  }\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1\",\n    component: SafeAreaView,\n    children: [loading && _jsx(LoadingOverlay, {}), _jsx(AutoScrollFlatList, {\n      data: messages,\n      ref: listRef,\n      initialNumToRender: 10,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Dialog, _objectSpread({}, item));\n      },\n      contentContainerStyle: {\n        flexDirection: \"column-reverse\",\n        paddingTop: 10\n      },\n      threshold: 20,\n      newItemAlertMessage: function newItemAlertMessage(newItem) {\n        return \"New message: +\" + newItem;\n      },\n      newItemAlertContainerStyle: {\n        backgroundColor: ColorPalette.DARK_VIOLET_2\n      },\n      newItemAlertTextStyle: {\n        color: ColorPalette.SOFT_MAGENTA\n      },\n      indicatorComponent: _jsx(Fab, {\n        position: \"absolute\",\n        bottom: 100,\n        right: 30,\n        size: \"md\",\n        icon: _jsx(ArrowDownIcon, {\n          size: \"sm\",\n          color: \"onSecondary\"\n        }),\n        backgroundColor: \"secondary\",\n        onPress: function onPress() {\n          var _listRef$current;\n          return (_listRef$current = listRef.current) == null ? void 0 : _listRef$current.scrollToEnd();\n        }\n      }),\n      onScroll: function onScroll(e) {\n        if (e.nativeEvent.contentOffset.y == 0) {\n          onMessageTopScroll();\n        }\n      },\n      showNewItemAlert: false\n    }), _jsx(Input, {\n      value: message,\n      onChangeText: setMessage,\n      placeholder: \"Type a message\",\n      onSend: onSendMessage,\n      style: {\n        marginBottom: isKeyboardShow ? keyboardHeight + 0.5 : 5,\n        paddingHorizontal: isKeyboardShow ? 0 : 10,\n        borderRadius: isKeyboardShow ? 0 : 10,\n        width: \"100%\"\n      }\n    })]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"absolute\": {\n      \"position\": \"absolute\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    }\n  }\n});","map":{"version":3,"names":["useToast","Fab","ArrowDownIcon","useContext","useEffect","useState","useRef","MenuContext","useMessage","ToastDialog","Input","Dialog","LoadingOverlay","sendMessage","UserContext","firestore","AutoScrollFlatList","useKeyboardHeight","useKeyboard","ColorPalette","Room","props","toast","listRef","page","setPage","route","params","id","error","show","render","messages","loading","message","setMessage","profile","setMenuVisible","firstLoad","setFirstLoad","isKeyboardShow","setIsKeyboardShow","keyboardHeight","onMessageTopScroll","onSendMessage","length","newMessage","chatRoomId","sendBy","name","profilePicture","email","content","timestamp","Date","createdAt","Timestamp","now","seen","item","flexDirection","paddingTop","newItem","backgroundColor","DARK_VIOLET_2","color","SOFT_MAGENTA","current","scrollToEnd","e","nativeEvent","contentOffset","y","marginBottom","paddingHorizontal","borderRadius","width"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/screens/chat/room.tsx"],"sourcesContent":["import { Text, useToast, Box, Fab, ArrowDownIcon } from \"native-base\";\nimport {useContext, useEffect, useState, useRef } from \"react\";\nimport { MenuContext } from \"@app/context/menu\";\nimport { SafeAreaView } from \"react-native\";\nimport useMessage from \"@app/hooks/useMessage\";\nimport ToastDialog from '@app/frontend/components/global/toast';\nimport Input from \"@app/frontend/components/chat/chatInput\";\nimport Dialog from \"@app/frontend/components/chat/dialog\";\nimport LoadingOverlay from \"@app/frontend/components/LoadingOverlay\";\nimport { sendMessage } from \"@app/controller/message\";\nimport type { Message } from \"@app/shared/interfaces/message\";\nimport { UserContext } from \"@app/context/user\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport {AutoScrollFlatList} from \"react-native-autoscroll-flatlist\";\nimport useKeyboardHeight from \"@app/hooks/useKeyboardHeight\";\nimport useKeyboard from \"@app/hooks/useKeyboard\";\nimport { ColorPalette } from \"@app/theme/colors\";\n\nexport default function Room(props: {route: {params: {id: string}}}) {\n    const toast = useToast();\n    const listRef = useRef<AutoScrollFlatList<Message>>(null);\n    const [page, setPage] = useState(1);\n    const { messages, loading } = useMessage(\n        props.route.params.id,\n        page,\n        (error) => {\n            toast.show({\n                render: () => <ToastDialog message={error} />,\n            });\n        } \n    );\n    const [message, setMessage] = useState(\"\");\n    const { profile } = useContext(UserContext);\n\n    const { setMenuVisible } = useContext(MenuContext);\n    useEffect(()=>{\n\n        //set navigation bar to be invisible when enter room\n        setMenuVisible(false);\n\n        //set navigation bar to be visible when leave room\n        return (\n            () => {\n                setMenuVisible(true);\n                setPage(1);\n            }\n        )\n    }, []);\n\n    //hooks to detect message loaded the first time\n    const [firstLoad, setFirstLoad] = useState(true);\n    useEffect(() => {\n        if (firstLoad && !loading) {\n            setFirstLoad(false);\n        }\n    }, [firstLoad, loading]);\n\n\n    //keep track of keyboard height\n    const [isKeyboardShow, setIsKeyboardShow] = useState<boolean>(false);\n    const keyboardHeight = useKeyboardHeight();\n\n    //keep track of keyboard show/hide\n    useKeyboard((isKeyboardShow) => {\n        setIsKeyboardShow(isKeyboardShow);\n    })\n\n    function onMessageTopScroll() {\n        if (!firstLoad && !loading) {\n            setPage(page + 1);\n        }\n    }\n\n\n    async function onSendMessage() {\n        if (!profile) return;\n        if (message.length > 0) {\n            const newMessage: Message = {\n                chatRoomId: props.route.params.id,\n                sendBy: {\n                    id: profile.id!,\n                    name: profile.name!,\n                    profilePicture: profile.profilePicture!,\n                    email: profile.email!,\n                },\n                content: message,\n                timestamp: new Date(),\n                createdAt: firestore.Timestamp.now(),\n                seen: false\n            }\n            await sendMessage(newMessage, (error) => {\n                toast.show({\n                    render: () => <ToastDialog message={error} />,\n                });\n            });\n            setMessage(\"\");\n        } \n        return;\n    }\n\n    return (\n        <SafeAreaView className=\"flex-1\">\n            {loading && <LoadingOverlay/>}\n            <AutoScrollFlatList\n                data={messages}\n                ref={listRef}\n                initialNumToRender={10}\n                renderItem={({item}) => \n                    <Dialog\n                        {...item}\n                    />\n                }\n                contentContainerStyle={{\n                    flexDirection: \"column-reverse\",\n                    paddingTop: 10,\n                }}\n                threshold={20}\n                newItemAlertMessage={(newItem) => `New message: +${newItem}`}\n                newItemAlertContainerStyle={{\n                    backgroundColor: ColorPalette.DARK_VIOLET_2,\n                }}\n                newItemAlertTextStyle={{\n                    color: ColorPalette.SOFT_MAGENTA,\n                }}\n                indicatorComponent={\n                    <Fab\n                        position=\"absolute\"\n                        bottom={100}\n                        right={30}\n                        size=\"md\"\n                        icon={<ArrowDownIcon size=\"sm\" color=\"onSecondary\" />}\n                        backgroundColor=\"secondary\"\n                        onPress={()=>listRef.current?.scrollToEnd()}\n                    />\n                }\n                onScroll={(e)=>{\n                    //check if top is reached\n                    if (e.nativeEvent.contentOffset.y == 0) {\n                        onMessageTopScroll();\n                    }\n                }}\n                showNewItemAlert={false}\n            />\n            <Input \n                value={message}\n                onChangeText={setMessage}\n                placeholder=\"Type a message\"\n                onSend={onSendMessage}\n                style={{\n                    marginBottom: isKeyboardShow? keyboardHeight + 0.5 : 5,\n                    paddingHorizontal: isKeyboardShow? 0 : 10,\n                    borderRadius: isKeyboardShow? 0 : 10,\n                    width: \"100%\",\n                }}\n            />\n        </SafeAreaView>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}