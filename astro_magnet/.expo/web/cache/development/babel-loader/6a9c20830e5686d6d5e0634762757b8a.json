{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport { Text, Actionsheet, ChevronDownIcon, useDisclose, Box } from \"native-base\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MultiSelectComponent(props) {\n  var _useDisclose = useDisclose(),\n    isOpen = _useDisclose.isOpen,\n    onOpen = _useDisclose.onOpen,\n    onClose = _useDisclose.onClose;\n  return _jsxs(_StyledComponent, {\n    className: \"mt-2\",\n    style: props.style,\n    component: View,\n    children: [_jsx(Text, {\n      color: \"onSecondary\",\n      mb: 2,\n      fontSize: 20,\n      fontWeight: \"bold\",\n      children: props.label\n    }), _jsx(Pressable, {\n      onPress: onOpen,\n      children: _jsxs(Box, {\n        bgColor: \"secondary\",\n        borderRadius: 7,\n        borderColor: \"transparent\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        p: 2,\n        children: [_jsx(Text, {\n          fontSize: 18,\n          fontWeight: \"bold\",\n          color: props.value.length > 0 ? \"onSecondary\" : \"indigo.900\",\n          children: props.value.length == 0 ? props.placeholder : props.value.join(\", \")\n        }), _jsx(ChevronDownIcon, {\n          size: 5,\n          color: \"indigo.900\"\n        })]\n      })\n    }), _jsx(Actionsheet, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: _jsx(Actionsheet.Content, {\n        children: props.items.map(function (item, index) {\n          return _jsx(Actionsheet.Item, {\n            bg: props.value.includes(item.value) ? \"onSecondary\" : \"transparent\",\n            _text: {\n              color: props.value.includes(item.value) ? \"secondary\" : \"onSecondary\"\n            },\n            onPress: function onPress() {\n              if (props.value.includes(item.value)) {\n                props.onValueChange(props.value.filter(function (value) {\n                  return value != item.value;\n                }));\n              } else {\n                props.onValueChange([].concat(_toConsumableArray(props.value), [item.value]));\n              }\n            },\n            children: _jsx(Text, {\n              children: item.label\n            })\n          }, index);\n        })\n      })\n    })]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"mt-2\": {\n      \"marginTop\": 8\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["Text","Actionsheet","ChevronDownIcon","useDisclose","Box","MultiSelectComponent","props","isOpen","onOpen","onClose","style","label","value","length","placeholder","join","items","map","item","index","includes","color","onValueChange","filter"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/components/global/multiSelect.tsx"],"sourcesContent":["import {Text, Actionsheet, ChevronDownIcon, useDisclose, Box} from \"native-base\";\nimport {View, ViewStyle, Pressable} from \"react-native\";\n\n/**\n * multi select props type\n * @property {string | undefined} label - label of the multi select\n * @property {string | undefined} placeholder - placeholder of the multi select\n * @property {string[]} value - value of the multi select\n * @property {(newValue: string[]) => void} onValueChange - function to call when the value changes\n * @property {{label: string, value: string}[]} items - items of the multi select\n * @property {string | undefined} className - class name of the\n * @property {ViewStyle | undefined} style - style of the multi select\n */\ninterface Props {\n    label?: string;\n    placeholder?: string;\n    value: string[];\n    onValueChange: (newValue: string[]) => void;\n    items: {label: string, value: string}[];\n    style?: ViewStyle;\n}\n\n/**\n * select component that supports selecting multiple items\n * @prop {string | undefined} label - label of the select if has\n * @prop {string | undefined} placeholder - placeholder of the select if has\n * @prop {string[]} value - value of the select\n * @prop {(newValue: string[]) => void} onValueChange - function to call when the select value changes\n * @prop {{label: string, value: string}[]} items - all items of the select\n * @prop {ViewStyle | undefined} style - extra style for select container\n * @returns {JSX.Element} multi select component\n */\nexport default function MultiSelectComponent(props: Props) {\n    const {isOpen, onOpen, onClose} = useDisclose();\n    return(\n        <View className=\"mt-2\" style={props.style}>\n            <Text\n                color=\"onSecondary\"\n                mb={2}\n                fontSize={20}\n                fontWeight=\"bold\"\n            >\n                {props.label}\n            </Text>\n            <Pressable\n            onPress={onOpen}\n            >\n                <Box\n                    bgColor=\"secondary\"\n                    borderRadius={7}\n                    borderColor=\"transparent\"\n                    alignItems=\"center\"\n                    flexDirection=\"row\"\n                    justifyContent=\"space-between\"\n                    p={2}\n                >\n                    <Text\n                        fontSize={18}\n                        fontWeight=\"bold\"\n                        color={props.value.length>0?\"onSecondary\":\"indigo.900\"}\n                    >\n                        {props.value.length==0?props.placeholder:props.value.join(\", \")}\n                    </Text>\n                    <ChevronDownIcon size={5} color=\"indigo.900\"/>\n                </Box>\n            </Pressable>\n            <Actionsheet\n                isOpen={isOpen}\n                onClose={onClose}\n            >\n                <Actionsheet.Content>\n                    {props.items.map((item, index) => (\n                        <Actionsheet.Item \n                            key={index}\n                            bg={props.value.includes(item.value)?\"onSecondary\":\"transparent\"}\n                            _text={{\n                                color: props.value.includes(item.value)?\"secondary\":\"onSecondary\",\n                            }}\n                            onPress={() => {\n                                if(props.value.includes(item.value)) {\n                                    props.onValueChange(props.value.filter(value => value!=item.value));\n                                } else {\n                                    props.onValueChange([...props.value, item.value]);\n                                }\n                            }}\n                        >  \n                            <Text>{item.label}</Text>\n                        </Actionsheet.Item>\n                    ))}\n                </Actionsheet.Content>\n            </Actionsheet>\n        </View>\n    )\n}\n"],"mappings":";;;AAAA,SAAQA,IAAI,EAAEC,WAAW,EAAEC,eAAe,EAAEC,WAAW,EAAEC,GAAG,QAAO,aAAa;AAAC;AAAA;AAAA;AAAA;AAgCjF,eAAe,SAASC,oBAAoB,CAACC,KAAY,EAAE;EACvD,mBAAkCH,WAAW,EAAE;IAAxCI,MAAM,gBAANA,MAAM;IAAEC,MAAM,gBAANA,MAAM;IAAEC,OAAO,gBAAPA,OAAO;EAC9B;IACU,SAAS,EAAC,MAAM;IAAC,KAAK,EAAEH,KAAK,CAACI,KAAM;IAAA;IAAA,WACtC,KAAC,IAAI;MACD,KAAK,EAAC,aAAa;MACnB,EAAE,EAAE,CAAE;MACN,QAAQ,EAAE,EAAG;MACb,UAAU,EAAC,MAAM;MAAA,UAEhBJ,KAAK,CAACK;IAAK,EACT,EACP,KAAC,SAAS;MACV,OAAO,EAAEH,MAAO;MAAA,UAEZ,MAAC,GAAG;QACA,OAAO,EAAC,WAAW;QACnB,YAAY,EAAE,CAAE;QAChB,WAAW,EAAC,aAAa;QACzB,UAAU,EAAC,QAAQ;QACnB,aAAa,EAAC,KAAK;QACnB,cAAc,EAAC,eAAe;QAC9B,CAAC,EAAE,CAAE;QAAA,WAEL,KAAC,IAAI;UACD,QAAQ,EAAE,EAAG;UACb,UAAU,EAAC,MAAM;UACjB,KAAK,EAAEF,KAAK,CAACM,KAAK,CAACC,MAAM,GAAC,CAAC,GAAC,aAAa,GAAC,YAAa;UAAA,UAEtDP,KAAK,CAACM,KAAK,CAACC,MAAM,IAAE,CAAC,GAACP,KAAK,CAACQ,WAAW,GAACR,KAAK,CAACM,KAAK,CAACG,IAAI,CAAC,IAAI;QAAC,EAC5D,EACP,KAAC,eAAe;UAAC,IAAI,EAAE,CAAE;UAAC,KAAK,EAAC;QAAY,EAAE;MAAA;IAC5C,EACE,EACZ,KAAC,WAAW;MACR,MAAM,EAAER,MAAO;MACf,OAAO,EAAEE,OAAQ;MAAA,UAEjB,KAAC,WAAW,CAAC,OAAO;QAAA,UACfH,KAAK,CAACU,KAAK,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;UAAA,OACzB,KAAC,WAAW,CAAC,IAAI;YAEb,EAAE,EAAEb,KAAK,CAACM,KAAK,CAACQ,QAAQ,CAACF,IAAI,CAACN,KAAK,CAAC,GAAC,aAAa,GAAC,aAAc;YACjE,KAAK,EAAE;cACHS,KAAK,EAAEf,KAAK,CAACM,KAAK,CAACQ,QAAQ,CAACF,IAAI,CAACN,KAAK,CAAC,GAAC,WAAW,GAAC;YACxD,CAAE;YACF,OAAO,EAAE,mBAAM;cACX,IAAGN,KAAK,CAACM,KAAK,CAACQ,QAAQ,CAACF,IAAI,CAACN,KAAK,CAAC,EAAE;gBACjCN,KAAK,CAACgB,aAAa,CAAChB,KAAK,CAACM,KAAK,CAACW,MAAM,CAAC,UAAAX,KAAK;kBAAA,OAAIA,KAAK,IAAEM,IAAI,CAACN,KAAK;gBAAA,EAAC,CAAC;cACvE,CAAC,MAAM;gBACHN,KAAK,CAACgB,aAAa,8BAAKhB,KAAK,CAACM,KAAK,IAAEM,IAAI,CAACN,KAAK,GAAE;cACrD;YACJ,CAAE;YAAA,UAEF,KAAC,IAAI;cAAA,UAAEM,IAAI,CAACP;YAAK;UAAQ,GAbpBQ,KAAK,CAcK;QAAA,CACtB;MAAC;IACgB,EACZ;EAAA;AAG1B;AAAC;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}