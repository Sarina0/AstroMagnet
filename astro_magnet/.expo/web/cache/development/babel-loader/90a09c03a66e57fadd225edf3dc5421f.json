{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport auth from \"@react-native-firebase/auth\";\nexport default function useAuthState() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(\"loading\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  function onAuthStateChanged(user) {\n    console.log(\"[LOG] user state changed\");\n    if (user) {\n      console.log(\"[LOG] user authenticated\");\n      setUser(user);\n      setStatus(\"authenticated\");\n    } else {\n      console.log(\"[LOG] user unauthenticated\");\n      setUser(null);\n      setStatus(\"unauthenticated\");\n    }\n  }\n  useEffect(function () {\n    var unsubscribe = auth().onAuthStateChanged(onAuthStateChanged);\n    return unsubscribe;\n  }, []);\n  return {\n    user: user,\n    status: status\n  };\n}","map":{"version":3,"names":["useState","useEffect","auth","useAuthState","user","setUser","status","setStatus","onAuthStateChanged","console","log","unsubscribe"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/hooks/useAuthState.tsx"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport auth, { FirebaseAuthTypes } from \"@react-native-firebase/auth\";\n\ntype status = \"authenticated\" | \"unauthenticated\" | \"loading\";\n\nexport default function useAuthState() {\n\n    /**authenticated user*/\n    const [user, setUser] = useState<FirebaseAuthTypes.User|null>(null);\n\n    /**authentication status loading-unauthenticated-authenticated*/\n    const [status, setStatus] = useState<status>(\"loading\");\n\n    // Handle user state changes\n    function onAuthStateChanged(user: FirebaseAuthTypes.User|null) {\n      console.log(\"[LOG] user state changed\");\n      if (user) {\n        console.log(\"[LOG] user authenticated\");\n        setUser(user);\n        setStatus(\"authenticated\");\n      } else {\n        console.log(\"[LOG] user unauthenticated\");\n        setUser(null);\n        setStatus(\"unauthenticated\");\n      }\n    }\n\n    useEffect(() => {\n      //on auth state change will return a function to unsubscribe\n      const unsubscribe = auth().onAuthStateChanged(onAuthStateChanged);\n      // unsubscribe on view unmount\n      return unsubscribe;\n    }, []);\n\n    return {\n        user,\n        status\n    }\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,IAAI,MAA6B,6BAA6B;AAIrE,eAAe,SAASC,YAAY,GAAG;EAGnC,gBAAwBH,QAAQ,CAA8B,IAAI,CAAC;IAAA;IAA5DI,IAAI;IAAEC,OAAO;EAGpB,iBAA4BL,QAAQ,CAAS,SAAS,CAAC;IAAA;IAAhDM,MAAM;IAAEC,SAAS;EAGxB,SAASC,kBAAkB,CAACJ,IAAiC,EAAE;IAC7DK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAIN,IAAI,EAAE;MACRK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCL,OAAO,CAACD,IAAI,CAAC;MACbG,SAAS,CAAC,eAAe,CAAC;IAC5B,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCL,OAAO,CAAC,IAAI,CAAC;MACbE,SAAS,CAAC,iBAAiB,CAAC;IAC9B;EACF;EAEAN,SAAS,CAAC,YAAM;IAEd,IAAMU,WAAW,GAAGT,IAAI,EAAE,CAACM,kBAAkB,CAACA,kBAAkB,CAAC;IAEjE,OAAOG,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHP,IAAI,EAAJA,IAAI;IACJE,MAAM,EAANA;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module"}