{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Base64, getDataUrlParts, hasOwnProperty, isInteger, isNumber, isObject, isString, isUndefined, pathChild, pathLastComponent, pathParent, ReferenceBase, toFilePath } from '@react-native-firebase/app/lib/common';\nimport StorageDownloadTask from \"./StorageDownloadTask\";\nimport StorageListResult, { provideStorageReferenceClass } from \"./StorageListResult\";\nimport StorageStatics from \"./StorageStatics\";\nimport StorageUploadTask from \"./StorageUploadTask\";\nimport { validateMetadata } from \"./utils\";\nvar StorageReference = function (_ReferenceBase) {\n  _inherits(StorageReference, _ReferenceBase);\n  var _super = _createSuper(StorageReference);\n  function StorageReference(storage, path) {\n    var _this;\n    _classCallCheck(this, StorageReference);\n    _this = _super.call(this, path);\n    _this._storage = storage;\n    return _this;\n  }\n  _createClass(StorageReference, [{\n    key: \"bucket\",\n    get: function get() {\n      return this._storage._customUrlOrRegion.replace('gs://', '');\n    }\n  }, {\n    key: \"fullPath\",\n    get: function get() {\n      return this.path;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return pathLastComponent(this.path);\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = pathParent(this.path);\n      if (parentPath === null) {\n        return parentPath;\n      }\n      return new StorageReference(this._storage, parentPath);\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new StorageReference(this._storage, '/');\n    }\n  }, {\n    key: \"storage\",\n    get: function get() {\n      return this._storage;\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      var childPath = pathChild(this.path, path);\n      return new StorageReference(this._storage, childPath);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this._storage.native.delete(this.toString());\n    }\n  }, {\n    key: \"getDownloadURL\",\n    value: function getDownloadURL() {\n      return this._storage.native.getDownloadURL(this.toString());\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      return this._storage.native.getMetadata(this.toString());\n    }\n  }, {\n    key: \"list\",\n    value: function list(options) {\n      var _this2 = this;\n      if (!isUndefined(options) && !isObject(options)) {\n        throw new Error(\"firebase.storage.StorageReference.list(*) 'options' expected an object value.\");\n      }\n      var listOptions = {\n        maxResults: 1000\n      };\n      if (options) {\n        if (hasOwnProperty(options, 'maxResults')) {\n          if (!isNumber(options.maxResults) || !isInteger(options.maxResults)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\");\n          }\n          if (options.maxResults < 1 || options.maxResults > 1000) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\");\n          }\n          listOptions.maxResults = options.maxResults;\n        }\n        if (options.pageToken) {\n          if (!isString(options.pageToken)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\");\n          }\n          listOptions.pageToken = options.pageToken;\n        }\n      }\n      return this._storage.native.list(this.toString(), listOptions).then(function (data) {\n        return new StorageListResult(_this2._storage, data);\n      });\n    }\n  }, {\n    key: \"listAll\",\n    value: function listAll() {\n      var _this3 = this;\n      return this._storage.native.listAll(this.toString()).then(function (data) {\n        return new StorageListResult(_this3._storage, data);\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(data, metadata) {\n      var _this4 = this;\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, false);\n      }\n      return new StorageUploadTask(this, function (task) {\n        return Base64.fromData(data).then(function (_ref) {\n          var string = _ref.string,\n            format = _ref.format;\n          var _this4$_updateString = _this4._updateString(string, format, metadata, false),\n            _string = _this4$_updateString._string,\n            _format = _this4$_updateString._format,\n            _metadata = _this4$_updateString._metadata;\n          return _this4._storage.native.putString(_this4.toString(), _string, _format, _metadata, task._id);\n        });\n      });\n    }\n  }, {\n    key: \"putString\",\n    value: function putString(string) {\n      var _this5 = this;\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : StorageStatics.StringFormat.RAW;\n      var metadata = arguments.length > 2 ? arguments[2] : undefined;\n      var _this$_updateString = this._updateString(string, format, metadata, false),\n        _string = _this$_updateString._string,\n        _format = _this$_updateString._format,\n        _metadata = _this$_updateString._metadata;\n      return new StorageUploadTask(this, function (task) {\n        return _this5._storage.native.putString(_this5.toString(), _string, _format, _metadata, task._id);\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.path.length <= 1) {\n        return \"\" + this._storage._customUrlOrRegion;\n      }\n      return this._storage._customUrlOrRegion + \"/\" + this.path;\n    }\n  }, {\n    key: \"updateMetadata\",\n    value: function updateMetadata(metadata) {\n      validateMetadata(metadata);\n      return this._storage.native.updateMetadata(this.toString(), metadata);\n    }\n  }, {\n    key: \"writeToFile\",\n    value: function writeToFile(filePath) {\n      var _this6 = this;\n      if (!isString(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\");\n      }\n      return new StorageDownloadTask(this, function (task) {\n        return _this6._storage.native.writeToFile(_this6.toString(), toFilePath(filePath), task._id);\n      });\n    }\n  }, {\n    key: \"putFile\",\n    value: function putFile(filePath, metadata) {\n      var _this7 = this;\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, false);\n      }\n      if (!isString(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\");\n      }\n      return new StorageUploadTask(this, function (task) {\n        return _this7._storage.native.putFile(_this7.toString(), toFilePath(filePath), metadata, task._id);\n      });\n    }\n  }, {\n    key: \"_updateString\",\n    value: function _updateString(string, format, metadata) {\n      var update = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (!isString(string)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\");\n      }\n      if (!Object.values(StorageStatics.StringFormat).includes(format)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of \" + Object.values(StorageStatics.StringFormat).join(',') + \".\");\n      }\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, update);\n      }\n      var _string = string;\n      var _format = format;\n      var _metadata = metadata;\n      if (format === StorageStatics.StringFormat.RAW) {\n        _string = Base64.btoa(_string);\n        _format = StorageStatics.StringFormat.BASE64;\n      } else if (format === StorageStatics.StringFormat.DATA_URL) {\n        var _getDataUrlParts = getDataUrlParts(_string),\n          mediaType = _getDataUrlParts.mediaType,\n          base64String = _getDataUrlParts.base64String;\n        if (isUndefined(base64String)) {\n          throw new Error('firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.');\n        }\n        if (isUndefined(metadata) || isUndefined(metadata.contentType)) {\n          if (isUndefined(metadata)) {\n            _metadata = {};\n          }\n          _metadata.contentType = mediaType;\n          _string = base64String;\n          _format = StorageStatics.StringFormat.BASE64;\n        }\n      }\n      return {\n        _string: _string,\n        _metadata: _metadata,\n        _format: _format\n      };\n    }\n  }]);\n  return StorageReference;\n}(ReferenceBase);\nexport { StorageReference as default };\nprovideStorageReferenceClass(StorageReference);","map":{"version":3,"names":["Base64","getDataUrlParts","hasOwnProperty","isInteger","isNumber","isObject","isString","isUndefined","pathChild","pathLastComponent","pathParent","ReferenceBase","toFilePath","StorageDownloadTask","StorageListResult","provideStorageReferenceClass","StorageStatics","StorageUploadTask","validateMetadata","StorageReference","storage","path","_storage","_customUrlOrRegion","replace","parentPath","childPath","native","delete","toString","getDownloadURL","getMetadata","options","Error","listOptions","maxResults","pageToken","list","then","data","listAll","metadata","task","fromData","string","format","_updateString","_string","_format","_metadata","putString","_id","StringFormat","RAW","length","updateMetadata","filePath","writeToFile","putFile","update","Object","values","includes","join","btoa","BASE64","DATA_URL","mediaType","base64String","contentType"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/storage/lib/StorageReference.js"],"sourcesContent":["/* eslint-disable no-console */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  Base64,\n  getDataUrlParts,\n  hasOwnProperty,\n  isInteger,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  pathChild,\n  pathLastComponent,\n  pathParent,\n  ReferenceBase,\n  toFilePath,\n} from '@react-native-firebase/app/lib/common';\nimport StorageDownloadTask from './StorageDownloadTask';\nimport StorageListResult, { provideStorageReferenceClass } from './StorageListResult';\nimport StorageStatics from './StorageStatics';\nimport StorageUploadTask from './StorageUploadTask';\nimport { validateMetadata } from './utils';\n\nexport default class StorageReference extends ReferenceBase {\n  constructor(storage, path) {\n    super(path);\n    this._storage = storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#bucket\n   */\n  get bucket() {\n    return this._storage._customUrlOrRegion.replace('gs://', '');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  get fullPath() {\n    return this.path;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#name\n   */\n  get name() {\n    return pathLastComponent(this.path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#parent\n   */\n  get parent() {\n    const parentPath = pathParent(this.path);\n    if (parentPath === null) {\n      return parentPath;\n    }\n    return new StorageReference(this._storage, parentPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#root\n   */\n  get root() {\n    return new StorageReference(this._storage, '/');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#storage\n   */\n  get storage() {\n    return this._storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#child\n   */\n  child(path) {\n    const childPath = pathChild(this.path, path);\n    return new StorageReference(this._storage, childPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#delete\n   */\n  delete() {\n    return this._storage.native.delete(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getDownloadURL\n   */\n  getDownloadURL() {\n    return this._storage.native.getDownloadURL(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getMetadata\n   */\n  getMetadata() {\n    return this._storage.native.getMetadata(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#list\n   */\n  list(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.list(*) 'options' expected an object value.\",\n      );\n    }\n\n    const listOptions = {\n      maxResults: 1000,\n    };\n\n    if (options) {\n      if (hasOwnProperty(options, 'maxResults')) {\n        if (!isNumber(options.maxResults) || !isInteger(options.maxResults)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\",\n          );\n        }\n\n        if (options.maxResults < 1 || options.maxResults > 1000) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\",\n          );\n        }\n\n        listOptions.maxResults = options.maxResults;\n      }\n\n      if (options.pageToken) {\n        if (!isString(options.pageToken)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\",\n          );\n        }\n\n        listOptions.pageToken = options.pageToken;\n      }\n    }\n\n    return this._storage.native\n      .list(this.toString(), listOptions)\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#listAll\n   */\n  listAll() {\n    return this._storage.native\n      .listAll(this.toString())\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#put\n   */\n  put(data, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, false);\n    }\n\n    return new StorageUploadTask(this, task =>\n      Base64.fromData(data).then(({ string, format }) => {\n        const { _string, _format, _metadata } = this._updateString(string, format, metadata, false);\n        return this._storage.native.putString(\n          this.toString(),\n          _string,\n          _format,\n          _metadata,\n          task._id,\n        );\n      }),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#putString\n   */\n  putString(string, format = StorageStatics.StringFormat.RAW, metadata) {\n    const { _string, _format, _metadata } = this._updateString(string, format, metadata, false);\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putString(this.toString(), _string, _format, _metadata, task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  toString() {\n    if (this.path.length <= 1) {\n      return `${this._storage._customUrlOrRegion}`;\n    }\n\n    return `${this._storage._customUrlOrRegion}/${this.path}`;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#updateMetadata\n   */\n  updateMetadata(metadata) {\n    validateMetadata(metadata);\n    return this._storage.native.updateMetadata(this.toString(), metadata);\n  }\n\n  /* ----------------------------------------\n   *   EXTRA APIS (DO NOT ON EXIST WEB SDK)\n   * ---------------------------------------- */\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  writeToFile(filePath) {\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageDownloadTask(this, task =>\n      this._storage.native.writeToFile(this.toString(), toFilePath(filePath), task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  putFile(filePath, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, false);\n    }\n\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putFile(this.toString(), toFilePath(filePath), metadata, task._id),\n    );\n  }\n\n  _updateString(string, format, metadata, update = false) {\n    if (!isString(string)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\",\n      );\n    }\n\n    if (!Object.values(StorageStatics.StringFormat).includes(format)) {\n      throw new Error(\n        `firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of ${Object.values(\n          StorageStatics.StringFormat,\n        ).join(',')}.`,\n      );\n    }\n\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, update);\n    }\n\n    let _string = string;\n    let _format = format;\n    let _metadata = metadata;\n\n    if (format === StorageStatics.StringFormat.RAW) {\n      _string = Base64.btoa(_string);\n      _format = StorageStatics.StringFormat.BASE64;\n    } else if (format === StorageStatics.StringFormat.DATA_URL) {\n      const { mediaType, base64String } = getDataUrlParts(_string);\n      if (isUndefined(base64String)) {\n        throw new Error(\n          'firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.',\n        );\n      }\n\n      if (isUndefined(metadata) || isUndefined(metadata.contentType)) {\n        if (isUndefined(metadata)) {\n          _metadata = {};\n        }\n        _metadata.contentType = mediaType;\n        _string = base64String;\n        _format = StorageStatics.StringFormat.BASE64;\n      }\n    }\n    return { _string, _metadata, _format };\n  }\n}\n\nprovideStorageReferenceClass(StorageReference);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}