{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect } from \"react\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport useAuthState from \"./useAuthState\";\nexport default function useProfile(onError) {\n  var _useAuthState = useAuthState(),\n    user = _useAuthState.user,\n    status = _useAuthState.status;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userProfile = _useState2[0],\n    setUserProfile = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    profileLoading = _useState4[0],\n    setProfileLoading = _useState4[1];\n  useEffect(function () {\n    if (status === \"loading\") return;\n    if (user) {\n      setProfileLoading(true);\n      console.log(\"[LOG] profile loading\");\n      var unsubscribe = firestore().collection('users').where(\"email\", \"==\", user.email).onSnapshot(function (documentSnapShot) {\n        if (documentSnapShot && documentSnapShot.docs.length > 0) {\n          var rawDob = documentSnapShot.docs[0].data().dateAndTimeOfBirth;\n          var dateOfBirth = rawDob ? rawDob.toDate() : null;\n          setUserProfile(_objectSpread(_objectSpread({}, documentSnapShot.docs[0].data()), {}, {\n            id: documentSnapShot.docs[0].id,\n            dateAndTimeOfBirth: dateOfBirth\n          }));\n          setProfileLoading(false);\n        } else {\n          setUserProfile(null);\n          setProfileLoading(false);\n          console.log(\"[LOG] user profile does not exist\");\n        }\n      }, function (error) {\n        setProfileLoading(false);\n        onError && onError(\"Error fetching user profile\");\n        console.log(\"[LOG] error fetching user profile:\", error);\n      });\n      return unsubscribe;\n    } else {\n      setProfileLoading(false);\n      console.log(\"[LOG] user not logged in\");\n    }\n  }, [user, status]);\n  return {\n    user: user,\n    status: status,\n    userProfile: userProfile,\n    setUserProfile: setUserProfile,\n    profileLoading: profileLoading\n  };\n}","map":{"version":3,"names":["useState","useEffect","firestore","useAuthState","useProfile","onError","user","status","userProfile","setUserProfile","profileLoading","setProfileLoading","console","log","unsubscribe","collection","where","email","onSnapshot","documentSnapShot","docs","length","rawDob","data","dateAndTimeOfBirth","dateOfBirth","toDate","id","error"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/hooks/useProfile.tsx"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport useAuthState from \"./useAuthState\";\nimport { User } from \"@app/shared/interfaces/user\";\n\n/**\n * hooks to setup user profile after user has logged in\n * @param {(error: string)=>void | undefined} onError - callback function to handle network error\n * @return {FirebaseAuthTypes.User} user - current logged in user\n * @return status - of authentication: loading-unauthenticated-authenticated\n * @return setupProfile - react setState function to update user profile\n * @return {User|null} userProfile - user profile\n * @return {boolean} profileLoading - loading status of user profile(true-false)\n */\nexport default function useProfile(\n    onError?: (error: string) => void,\n) {\n    const {user, status} = useAuthState();\n    const [userProfile, setUserProfile] = useState<User|null>(null);\n    const [profileLoading, setProfileLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        if (status===\"loading\") return;\n        if (user) {\n            setProfileLoading(true);\n            console.log(\"[LOG] profile loading\");\n            const unsubscribe = firestore()\n                .collection('users')\n                .where(\"email\", \"==\", user.email)\n                .onSnapshot(documentSnapShot => {\n\n                    //check if user profile exists\n                    if (documentSnapShot && documentSnapShot.docs.length > 0) {\n                        const rawDob = documentSnapShot.docs[0].data().dateAndTimeOfBirth;\n                        const dateOfBirth = rawDob ? rawDob.toDate() : null;\n\n                        //if profile exists, set the profile\n                        setUserProfile({\n                            ...documentSnapShot.docs[0].data(),\n                            id: documentSnapShot.docs[0].id,\n                            dateAndTimeOfBirth: dateOfBirth\n                        } as User);\n                        setProfileLoading(false);\n                    } else {\n\n                        //if profile does not exist, set the profile to null\n                        setUserProfile(null);\n                        setProfileLoading(false);\n                        console.log(\"[LOG] user profile does not exist\")\n                    }\n                }, (error)=> {\n                    setProfileLoading(false);\n                    onError && onError(\"Error fetching user profile\");\n                    console.log(\"[LOG] error fetching user profile:\", error);\n                })\n\n            //unsubscribe on view unmount\n            return unsubscribe;\n        } else {\n            setProfileLoading(false);\n            console.log(\"[LOG] user not logged in\")\n        }\n    }, [user, status]);\n    \n    return {\n        user,\n        status,\n        userProfile,\n        setUserProfile,\n        profileLoading\n    }\n}"],"mappings":";;;;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY;AAYnB,eAAe,SAASC,UAAU,CAC9BC,OAAiC,EACnC;EACE,oBAAuBF,YAAY,EAAE;IAA9BG,IAAI,iBAAJA,IAAI;IAAEC,MAAM,iBAANA,MAAM;EACnB,gBAAsCP,QAAQ,CAAY,IAAI,CAAC;IAAA;IAAxDQ,WAAW;IAAEC,cAAc;EAClC,iBAA4CT,QAAQ,CAAU,IAAI,CAAC;IAAA;IAA5DU,cAAc;IAAEC,iBAAiB;EAExCV,SAAS,CAAC,YAAM;IACZ,IAAIM,MAAM,KAAG,SAAS,EAAE;IACxB,IAAID,IAAI,EAAE;MACNK,iBAAiB,CAAC,IAAI,CAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAMC,WAAW,GAAGZ,SAAS,EAAE,CAC1Ba,UAAU,CAAC,OAAO,CAAC,CACnBC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEV,IAAI,CAACW,KAAK,CAAC,CAChCC,UAAU,CAAC,UAAAC,gBAAgB,EAAI;QAG5B,IAAIA,gBAAgB,IAAIA,gBAAgB,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACtD,IAAMC,MAAM,GAAGH,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,CAACC,kBAAkB;UACjE,IAAMC,WAAW,GAAGH,MAAM,GAAGA,MAAM,CAACI,MAAM,EAAE,GAAG,IAAI;UAGnDjB,cAAc,iCACPU,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;YAClCI,EAAE,EAAER,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,EAAE;YAC/BH,kBAAkB,EAAEC;UAAW,GACzB;UACVd,iBAAiB,CAAC,KAAK,CAAC;QAC5B,CAAC,MAAM;UAGHF,cAAc,CAAC,IAAI,CAAC;UACpBE,iBAAiB,CAAC,KAAK,CAAC;UACxBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QACpD;MACJ,CAAC,EAAE,UAACe,KAAK,EAAI;QACTjB,iBAAiB,CAAC,KAAK,CAAC;QACxBN,OAAO,IAAIA,OAAO,CAAC,6BAA6B,CAAC;QACjDO,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEe,KAAK,CAAC;MAC5D,CAAC,CAAC;MAGN,OAAOd,WAAW;IACtB,CAAC,MAAM;MACHH,iBAAiB,CAAC,KAAK,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C;EACJ,CAAC,EAAE,CAACP,IAAI,EAAEC,MAAM,CAAC,CAAC;EAElB,OAAO;IACHD,IAAI,EAAJA,IAAI;IACJC,MAAM,EAANA,MAAM;IACNC,WAAW,EAAXA,WAAW;IACXC,cAAc,EAAdA,cAAc;IACdC,cAAc,EAAdA;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module"}