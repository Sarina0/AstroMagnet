{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport firestore from \"@react-native-firebase/firestore\";\nexport function sendMessage(_x, _x2) {\n  return _sendMessage.apply(this, arguments);\n}\nfunction _sendMessage() {\n  _sendMessage = _asyncToGenerator(function* (message, onError) {\n    var chatRoomId = message.chatRoomId;\n    var chatRoomRef = firestore().collection(\"chatRooms\").doc(chatRoomId);\n    var messageRef = chatRoomRef.collection(\"messages\").doc();\n    var batch = firestore().batch();\n    batch.set(messageRef, message);\n    batch.update(chatRoomRef, {\n      lastMessage: message\n    });\n    yield batch.commit().catch(function (error) {\n      console.log(\"[ERROR] error sending message\", error);\n      onError && onError(\"Error sending your message, please try again later\");\n    });\n  });\n  return _sendMessage.apply(this, arguments);\n}\nexport function createRoom(_x3, _x4, _x5) {\n  return _createRoom.apply(this, arguments);\n}\nfunction _createRoom() {\n  _createRoom = _asyncToGenerator(function* (currentUsers, friends, onError) {\n    var chatUser1 = {\n      id: currentUsers.id,\n      name: currentUsers.name,\n      profilePicture: currentUsers.profilePicture,\n      email: currentUsers.email\n    };\n    var chatUser2 = {\n      id: friends.id,\n      name: friends.name,\n      profilePicture: friends.profilePicture,\n      email: friends.email\n    };\n    var chatRoomRef = firestore().collection(\"chatRooms\").doc();\n    var chatRoomId = chatRoomRef.id;\n    var batch = firestore().batch();\n    var newWelComeMessage = {\n      chatRoomId: chatRoomId,\n      sendBy: chatUser1,\n      content: \"Welcome to the chatroom\",\n      timestamp: new Date(),\n      createdAt: firestore.Timestamp.now(),\n      seen: false\n    };\n    batch.set(chatRoomRef, {\n      users: [chatUser1, chatUser2],\n      lastMessage: newWelComeMessage\n    });\n    var messageRef = chatRoomRef.collection(\"messages\").doc();\n    batch.set(messageRef, newWelComeMessage);\n    batch.update(firestore().collection(\"users\").doc(currentUsers.id), {\n      liked: firestore.FieldValue.arrayRemove(friends.id),\n      messagingFriendList: firestore.FieldValue.arrayUnion({\n        email: friends.email,\n        name: friends.name,\n        profilePicture: friends.profilePicture,\n        id: friends.id,\n        chatRoomId: chatRoomId\n      })\n    });\n    batch.update(firestore().collection(\"users\").doc(friends.id), {\n      liked: firestore.FieldValue.arrayRemove(currentUsers.id),\n      messagingFriendList: firestore.FieldValue.arrayUnion({\n        email: currentUsers.email,\n        name: currentUsers.name,\n        profilePicture: currentUsers.profilePicture,\n        id: currentUsers.id,\n        chatRoomId: chatRoomId\n      })\n    });\n    yield batch.commit().catch(function (error) {\n      console.log(\"[ERROR] error creating chatroom\", error);\n      onError && onError(\"Error creating chatroom, please try again later\");\n    });\n    return chatRoomId;\n  });\n  return _createRoom.apply(this, arguments);\n}","map":{"version":3,"names":["firestore","sendMessage","message","onError","chatRoomId","chatRoomRef","collection","doc","messageRef","batch","set","update","lastMessage","commit","catch","error","console","log","createRoom","currentUsers","friends","chatUser1","id","name","profilePicture","email","chatUser2","newWelComeMessage","sendBy","content","timestamp","Date","createdAt","Timestamp","now","seen","users","liked","FieldValue","arrayRemove","messagingFriendList","arrayUnion"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/controller/message.ts"],"sourcesContent":["import firestore from \"@react-native-firebase/firestore\";\nimport type { Message, ChatUser } from \"@app/shared/interfaces/message\";\nimport { User } from \"@app/shared/interfaces/user\";\n\nexport async function sendMessage(\n    message: Message,\n    onError?: (error: string) => void\n    ) {\n    const { chatRoomId } = message;\n    const chatRoomRef = firestore().collection(\"chatRooms\").doc(chatRoomId);\n    const messageRef = chatRoomRef.collection(\"messages\").doc();\n    const batch = firestore().batch();\n    batch.set(messageRef, message);\n    batch.update(chatRoomRef, {\n        lastMessage: message\n    });\n    await batch\n        .commit()\n        .catch((error)=>{\n            console.log(\"[ERROR] error sending message\",error);\n            onError && onError(\"Error sending your message, please try again later\");\n        });\n}\n\nexport async function createRoom(\n    currentUsers: User,\n    friends: User,\n    onError?: (error: string) => void\n    ) {\n    const chatUser1 = {\n        id: currentUsers.id,\n        name: currentUsers.name,\n        profilePicture: currentUsers.profilePicture,\n        email: currentUsers.email,\n    }\n    const chatUser2 = {\n        id: friends.id,\n        name: friends.name,\n        profilePicture: friends.profilePicture,\n        email: friends.email,\n    }\n\n    //generate chatroom id\n    const chatRoomRef = firestore().collection(\"chatRooms\").doc();\n    const chatRoomId = chatRoomRef.id;\n\n    //create firestore batch to update multiple documents\n    const batch = firestore().batch();\n\n    const newWelComeMessage = {\n        chatRoomId,\n        sendBy: chatUser1,\n        content: \"Welcome to the chatroom\",\n        timestamp: new Date(),\n        createdAt: firestore.Timestamp.now(),\n        seen: false,\n    }\n\n    //create new chat room\n    batch.set(chatRoomRef, {\n        users: [chatUser1, chatUser2],\n        lastMessage: newWelComeMessage\n    });\n\n    //add new message to chatroom\n    const messageRef = chatRoomRef.collection(\"messages\").doc();\n    batch.set(messageRef, newWelComeMessage);\n\n    //add new chat room to current user chatrooms\n    batch.update(firestore().collection(\"users\").doc(currentUsers.id), {\n        liked: firestore.FieldValue.arrayRemove(friends.id),\n        messagingFriendList: firestore.FieldValue.arrayUnion({\n            email: friends.email,\n            name: friends.name,\n            profilePicture: friends.profilePicture,\n            id: friends.id,\n            chatRoomId: chatRoomId,\n        })\n    });\n\n    //add new chat room to friend user chatrooms\n    batch.update(firestore().collection(\"users\").doc(friends.id), {\n        liked: firestore.FieldValue.arrayRemove(currentUsers.id),\n        messagingFriendList: firestore.FieldValue.arrayUnion({\n            email: currentUsers.email,\n            name: currentUsers.name,\n            profilePicture: currentUsers.profilePicture,\n            id: currentUsers.id,\n            chatRoomId: chatRoomId,\n        })\n    });\n    await batch.commit()\n        .catch((error)=>{\n            console.log(\"[ERROR] error creating chatroom\",error);\n            onError && onError(\"Error creating chatroom, please try again later\");\n        });\n    return chatRoomId;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}