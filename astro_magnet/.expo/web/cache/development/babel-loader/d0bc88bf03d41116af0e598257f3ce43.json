{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport { parseSetOptions, parseSnapshotArgs, parseUpdateArgs } from \"./utils\";\nimport { buildNativeMap, provideDocumentReferenceClass } from \"./utils/serialize\";\nvar FirestoreCollectionReference = null;\nexport function provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\nvar FirestoreDocumentSnapshot = null;\nexport function provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\nvar _id = 0;\nvar FirestoreDocumentReference = function () {\n  function FirestoreDocumentReference(firestore, documentPath) {\n    _classCallCheck(this, FirestoreDocumentReference);\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n  _createClass(FirestoreDocumentReference, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._documentPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._documentPath.parent();\n      return new FirestoreCollectionReference(this._firestore, parentPath);\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._documentPath.relativeName;\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      if (!isString(collectionPath)) {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\");\n      }\n      if (collectionPath === '') {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\");\n      }\n      var path = this._documentPath.child(collectionPath);\n      if (!path.isCollection) {\n        throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\");\n      }\n      return new FirestoreCollectionReference(this._firestore, path);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this._firestore.native.documentDelete(this.path);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n      if (!isUndefined(options) && !isObject(options)) {\n        throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n      }\n      if (options && options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        throw new Error(\"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\");\n      }\n      return this._firestore.native.documentGet(this.path, options).then(function (data) {\n        return new FirestoreDocumentSnapshot(_this._firestore, data);\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreDocumentReference)) {\n        throw new Error(\"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\");\n      }\n      return !(this.path !== other.path || this.firestore.app.name !== other.firestore.app.name || this.firestore.app.options.projectId !== other.firestore.app.options.projectId);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot() {\n      var _this2 = this;\n      var snapshotListenOptions;\n      var callback;\n      var onNext;\n      var onError;\n      try {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var options = parseSnapshotArgs(args);\n        snapshotListenOptions = options.snapshotListenOptions;\n        callback = options.callback;\n        onNext = options.onNext;\n        onError = options.onError;\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().onSnapshot(*) \" + e.message);\n      }\n      function handleSuccess(documentSnapshot) {\n        callback(documentSnapshot, null);\n        onNext(documentSnapshot);\n      }\n      function handleError(error) {\n        callback(null, error);\n        onError(error);\n      }\n      var listenerId = _id++;\n      var onSnapshotSubscription = this._firestore.emitter.addListener(this._firestore.eventNameForApp(\"firestore_document_sync_event:\" + listenerId), function (event) {\n        if (event.body.error) {\n          handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n        } else {\n          var documentSnapshot = new FirestoreDocumentSnapshot(_this2._firestore, event.body.snapshot);\n          handleSuccess(documentSnapshot);\n        }\n      });\n      var unsubscribe = function unsubscribe() {\n        onSnapshotSubscription.remove();\n        _this2._firestore.native.documentOffSnapshot(listenerId);\n      };\n      this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n      return unsubscribe;\n    }\n  }, {\n    key: \"set\",\n    value: function set(data, options) {\n      if (!isObject(data)) {\n        throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n      }\n      var setOptions;\n      try {\n        setOptions = parseSetOptions(options);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().set(_, *) \" + e.message + \".\");\n      }\n      return this._firestore.native.documentSet(this.path, buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties), setOptions);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      if (args.length === 0) {\n        throw new Error('firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.');\n      }\n      var data;\n      try {\n        data = parseUpdateArgs(args);\n      } catch (e) {\n        throw new Error(\"firebase.firestore().doc().update(*) \" + e.message);\n      }\n      return this._firestore.native.documentUpdate(this.path, buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties));\n    }\n  }]);\n  return FirestoreDocumentReference;\n}();\nexport { FirestoreDocumentReference as default };\nprovideDocumentReferenceClass(FirestoreDocumentReference);","map":{"version":3,"names":["isObject","isString","isUndefined","NativeError","parseSetOptions","parseSnapshotArgs","parseUpdateArgs","buildNativeMap","provideDocumentReferenceClass","FirestoreCollectionReference","provideCollectionReferenceClass","collectionReference","FirestoreDocumentSnapshot","provideDocumentSnapshotClass","documentSnapshot","_id","FirestoreDocumentReference","firestore","documentPath","_firestore","_documentPath","id","parentPath","parent","relativeName","collectionPath","Error","path","child","isCollection","native","documentDelete","options","source","documentGet","then","data","other","app","name","projectId","snapshotListenOptions","callback","onNext","onError","args","e","message","handleSuccess","handleError","error","listenerId","onSnapshotSubscription","emitter","addListener","eventNameForApp","event","body","fromEvent","snapshot","unsubscribe","remove","documentOffSnapshot","documentOnSnapshot","setOptions","documentSet","_settings","ignoreUndefinedProperties","length","documentUpdate"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentReference.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport { parseSetOptions, parseSnapshotArgs, parseUpdateArgs } from './utils';\nimport { buildNativeMap, provideDocumentReferenceClass } from './utils/serialize';\n\n// To avoid React Native require cycle warnings\nlet FirestoreCollectionReference = null;\nexport function provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\n\nlet FirestoreDocumentSnapshot = null;\nexport function provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\n\nlet _id = 0;\n\nexport default class FirestoreDocumentReference {\n  constructor(firestore, documentPath) {\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._documentPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._documentPath.parent();\n    return new FirestoreCollectionReference(this._firestore, parentPath);\n  }\n\n  get path() {\n    return this._documentPath.relativeName;\n  }\n\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\",\n      );\n    }\n\n    if (collectionPath === '') {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\",\n      );\n    }\n\n    const path = this._documentPath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\",\n      );\n    }\n\n    return new FirestoreCollectionReference(this._firestore, path);\n  }\n\n  delete() {\n    return this._firestore.native.documentDelete(this.path);\n  }\n\n  get(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n    }\n\n    if (\n      options &&\n      options.source &&\n      options.source !== 'default' &&\n      options.source !== 'server' &&\n      options.source !== 'cache'\n    ) {\n      throw new Error(\n        \"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\",\n      );\n    }\n\n    return this._firestore.native\n      .documentGet(this.path, options)\n      .then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\",\n      );\n    }\n\n    return !(\n      this.path !== other.path ||\n      this.firestore.app.name !== other.firestore.app.name ||\n      this.firestore.app.options.projectId !== other.firestore.app.options.projectId\n    );\n  }\n\n  onSnapshot(...args) {\n    let snapshotListenOptions;\n    let callback;\n    let onNext;\n    let onError;\n\n    try {\n      const options = parseSnapshotArgs(args);\n      snapshotListenOptions = options.snapshotListenOptions;\n      callback = options.callback;\n      onNext = options.onNext;\n      onError = options.onError;\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().onSnapshot(*) ${e.message}`);\n    }\n\n    function handleSuccess(documentSnapshot) {\n      callback(documentSnapshot, null);\n      onNext(documentSnapshot);\n    }\n\n    function handleError(error) {\n      callback(null, error);\n      onError(error);\n    }\n\n    const listenerId = _id++;\n\n    const onSnapshotSubscription = this._firestore.emitter.addListener(\n      this._firestore.eventNameForApp(`firestore_document_sync_event:${listenerId}`),\n      event => {\n        if (event.body.error) {\n          handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n        } else {\n          const documentSnapshot = new FirestoreDocumentSnapshot(\n            this._firestore,\n            event.body.snapshot,\n          );\n          handleSuccess(documentSnapshot);\n        }\n      },\n    );\n\n    const unsubscribe = () => {\n      onSnapshotSubscription.remove();\n      this._firestore.native.documentOffSnapshot(listenerId);\n    };\n\n    this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n\n    return unsubscribe;\n  }\n\n  set(data, options) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().set(_, *) ${e.message}.`);\n    }\n\n    return this._firestore.native.documentSet(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      setOptions,\n    );\n  }\n\n  update(...args) {\n    if (args.length === 0) {\n      throw new Error(\n        'firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.',\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().update(*) ${e.message}`);\n    }\n\n    return this._firestore.native.documentUpdate(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    );\n  }\n}\n\nprovideDocumentReferenceClass(FirestoreDocumentReference); // serialize\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}