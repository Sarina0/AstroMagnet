{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Triangle = function (_React$PureComponent) {\n  _inherits(Triangle, _React$PureComponent);\n  var _super = _createSuper(Triangle);\n  function Triangle() {\n    _classCallCheck(this, Triangle);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Triangle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        size = _this$props.size,\n        color = _this$props.color,\n        direction = _this$props.direction;\n      var directionMapper = {\n        up: \"0deg\",\n        down: \"180deg\",\n        left: \"270deg\",\n        right: \"90deg\"\n      };\n      var borderStyle = {\n        borderLeftWidth: size,\n        borderRightWidth: size,\n        borderBottomWidth: size * 1.5,\n        borderBottomColor: color,\n        transform: [{\n          rotate: directionMapper[direction]\n        }]\n      };\n      return _jsx(View, {\n        style: [styles.triangle, borderStyle]\n      });\n    }\n  }]);\n  return Triangle;\n}(React.PureComponent);\nTriangle.displayName = \"Triangle\";\nTriangle.defaultProps = {\n  size: 8,\n  color: \"#000000\",\n  direction: \"down\"\n};\nvar styles = StyleSheet.create({\n  triangle: {\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderLeftColor: \"transparent\",\n    borderRightColor: \"transparent\"\n  }\n});","map":{"version":3,"sources":["../../../src/component/Triangle.tsx"],"names":[],"mappings":";;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAS1B,WAAa,QAAS;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OASlB,kBAAM;MACF,kBAAiC,IAAI,CAAC,KAAK;QAApC,IAAI,eAAJ,IAAI;QAAE,KAAK,eAAL,KAAK;QAAE,SAAS,eAAT,SAAS;MAC7B,IAAM,eAAe,GAAG;QACpB,EAAE,EAAE,MAAM;QACV,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE;OACV;MACD,IAAM,WAAW,GAAG;QAChB,eAAe,EAAE,IAAI;QACrB,gBAAgB,EAAE,IAAI;QACtB,iBAAiB,EAAE,IAAI,GAAG,GAAG;QAC7B,iBAAiB,EAAE,KAAK;QACxB,SAAS,EAAE,CACP;UACI,MAAM,EAAE,eAAe,CAAC,SAAS;SACpC;OAER;MACD,OAAO,KAAC,IAAI;QAAC,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW;MAAE,EAAG;IAC1D;EAAC;EAAA;AAAA,EA7ByB,KAAK,CAAC,aAAoB;AAC7C,QAAA,CAAA,WAAW,GAAG,UAAU;AAExB,QAAA,CAAA,YAAY,GAAgD;EAC/D,IAAI,EAAE,CAAC;EACP,KAAK,EAAE,SAAS;EAChB,SAAS,EAAE;CACd;AAyBL,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;EAC7B,QAAQ,EAAE;IACN,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;IACT,eAAe,EAAE,aAAa;IAC9B,WAAW,EAAE,OAAO;IACpB,eAAe,EAAE,aAAa;IAC9B,gBAAgB,EAAE;EACrB;CACJ,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nexport class Triangle extends React.PureComponent {\n    render() {\n        const { size, color, direction } = this.props;\n        const directionMapper = {\n            up: \"0deg\",\n            down: \"180deg\",\n            left: \"270deg\",\n            right: \"90deg\",\n        };\n        const borderStyle = {\n            borderLeftWidth: size,\n            borderRightWidth: size,\n            borderBottomWidth: size * 1.5,\n            borderBottomColor: color,\n            transform: [\n                {\n                    rotate: directionMapper[direction],\n                },\n            ],\n        };\n        return <View style={[styles.triangle, borderStyle]}/>;\n    }\n}\nTriangle.displayName = \"Triangle\";\nTriangle.defaultProps = {\n    size: 8,\n    color: \"#000000\",\n    direction: \"down\",\n};\nconst styles = StyleSheet.create({\n    triangle: {\n        width: 0,\n        height: 0,\n        backgroundColor: \"transparent\",\n        borderStyle: \"solid\",\n        borderLeftColor: \"transparent\",\n        borderRightColor: \"transparent\",\n    },\n});\n//# sourceMappingURL=Triangle.js.map"]},"metadata":{},"sourceType":"module"}