{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { ColorPalette } from \"../../theme/colors\";\nimport Room from \"../screens/chat/room\";\nimport Rooms from \"../screens/chat/rooms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n;\nexport default function ChatNavigation() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      animation: \"none\",\n      animationDuration: 300,\n      headerStyle: {\n        backgroundColor: ColorPalette.DARK_VIOLET_2\n      },\n      headerTintColor: ColorPalette.SOFT_MAGENTA,\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    initialRouteName: \"rooms\",\n    children: [_jsx(Stack.Screen, {\n      name: \"rooms\",\n      component: Rooms,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"room\",\n      children: function children(props) {\n        return _jsx(Room, _objectSpread({}, props));\n      },\n      options: function options(_ref) {\n        var route = _ref.route;\n        return {\n          title: route.params.name,\n          headerBackTitleVisible: false\n        };\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","ColorPalette","Room","Rooms","Stack","ChatNavigation","animation","animationDuration","headerStyle","backgroundColor","DARK_VIOLET_2","headerTintColor","SOFT_MAGENTA","headerTitleStyle","fontWeight","headerShown","props","route","title","params","name","headerBackTitleVisible"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/navigation/chat.tsx"],"sourcesContent":["import {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { ColorPalette } from \"@app/theme/colors\";\nimport Room from \"@app/frontend/screens/chat/room\";\nimport Rooms from \"@app/frontend/screens/chat/rooms\";\n\nexport type ChatStackParamList = {\n    rooms: undefined;\n    room: {\n        id: string;\n        name: string;\n        profilePic: string;\n    }\n}\n\nconst Stack = createNativeStackNavigator<ChatStackParamList>();\n\ninterface Props {\n    setMenuVisible: Dispatch<SetStateAction<boolean>>;\n};\n\nexport default function ChatNavigation() {\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                animation:\"none\",\n                animationDuration: 300,\n                headerStyle:{\n                    backgroundColor: ColorPalette.DARK_VIOLET_2,\n                },\n                headerTintColor: ColorPalette.SOFT_MAGENTA,\n                headerTitleStyle: {\n                    fontWeight: \"bold\",\n                },   \n            }}       \n            initialRouteName=\"rooms\"\n        >\n            <Stack.Screen\n                name=\"rooms\"\n                component={Rooms}\n                options={{\n                    headerShown: false\n                }}\n            />\n            <Stack.Screen\n                name=\"room\"\n                children={\n                    (props) => <Room {...props} />\n                }\n                options={({ route }) => ({\n                    title: route.params.name,\n                    headerBackTitleVisible: false,\n                })}\n            />\n        </Stack.Navigator>\n    )\n}"],"mappings":";;;AAAA,SAAQA,0BAA0B,QAAO,gCAAgC;AAEzE,SAASC,YAAY;AACrB,OAAOC,IAAI;AACX,OAAOC,KAAK;AAAyC;AAAA;AAWrD,IAAMC,KAAK,GAAGJ,0BAA0B,EAAsB;AAI7D;AAED,eAAe,SAASK,cAAc,GAAG;EACrC,OACI,MAAC,KAAK,CAAC,SAAS;IACZ,aAAa,EAAE;MACXC,SAAS,EAAC,MAAM;MAChBC,iBAAiB,EAAE,GAAG;MACtBC,WAAW,EAAC;QACRC,eAAe,EAAER,YAAY,CAACS;MAClC,CAAC;MACDC,eAAe,EAAEV,YAAY,CAACW,YAAY;MAC1CC,gBAAgB,EAAE;QACdC,UAAU,EAAE;MAChB;IACJ,CAAE;IACF,gBAAgB,EAAC,OAAO;IAAA,WAExB,KAAC,KAAK,CAAC,MAAM;MACT,IAAI,EAAC,OAAO;MACZ,SAAS,EAAEX,KAAM;MACjB,OAAO,EAAE;QACLY,WAAW,EAAE;MACjB;IAAE,EACJ,EACF,KAAC,KAAK,CAAC,MAAM;MACT,IAAI,EAAC,MAAM;MACX,QAAQ,EACJ,kBAACC,KAAK;QAAA,OAAK,KAAC,IAAI,oBAAKA,KAAK,EAAI;MAAA,CACjC;MACD,OAAO,EAAE;QAAA,IAAGC,KAAK,QAALA,KAAK;QAAA,OAAQ;UACrBC,KAAK,EAAED,KAAK,CAACE,MAAM,CAACC,IAAI;UACxBC,sBAAsB,EAAE;QAC5B,CAAC;MAAA;IAAE,EACL;EAAA,EACY;AAE1B"},"metadata":{},"sourceType":"module"}