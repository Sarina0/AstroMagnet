{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"contentContainerStyle\", \"threshold\", \"showScrollToEndIndicator\", \"showNewItemAlert\", \"newItemAlertRenderer\", \"indicatorContainerStyle\", \"indicatorComponent\", \"numColumns\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Triangle } from \"./Triangle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport var AutoScrollFlatList = function (_React$PureComponent) {\n  _inherits(AutoScrollFlatList, _React$PureComponent);\n  var _super = _createSuper(AutoScrollFlatList);\n  function AutoScrollFlatList(props) {\n    var _this;\n    _classCallCheck(this, AutoScrollFlatList);\n    _this = _super.call(this, props);\n    _this.listRef = React.createRef();\n    _this.flatListHeight = 0;\n    _this.flatListWidth = 0;\n    _this.contentHeight = 0;\n    _this.contentWidth = 0;\n    _this.scrollTop = 0;\n    _this.scrollToEnd = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        animated: true\n      };\n      var offset = _this.props.horizontal ? _this.contentWidth - _this.flatListWidth : _this.contentHeight - _this.flatListHeight;\n      _this.setState({\n        newItemCount: 0\n      });\n      _this.scrollToOffset({\n        offset: offset,\n        animated: params.animated\n      });\n    };\n    _this.scrollToIndex = function (params) {\n      var _this$listRef$current;\n      (_this$listRef$current = _this.listRef.current) == null ? void 0 : _this$listRef$current.scrollToIndex(params);\n    };\n    _this.scrollToItem = function (params) {\n      var _this$listRef$current2;\n      (_this$listRef$current2 = _this.listRef.current) == null ? void 0 : _this$listRef$current2.scrollToItem(params);\n    };\n    _this.scrollToOffset = function (params) {\n      var _this$listRef$current3;\n      (_this$listRef$current3 = _this.listRef.current) == null ? void 0 : _this$listRef$current3.scrollToOffset(params);\n    };\n    _this.recordInteraction = function () {\n      var _this$listRef$current4;\n      (_this$listRef$current4 = _this.listRef.current) == null ? void 0 : _this$listRef$current4.recordInteraction();\n    };\n    _this.flashScrollIndicators = function () {\n      var _this$listRef$current5;\n      (_this$listRef$current5 = _this.listRef.current) == null ? void 0 : _this$listRef$current5.flashScrollIndicators();\n    };\n    _this.getScrollableNode = function () {\n      var _this$listRef$current6;\n      return (_this$listRef$current6 = _this.listRef.current) == null ? void 0 : _this$listRef$current6.getScrollableNode();\n    };\n    _this.getNativeScrollRef = function () {\n      var _this$listRef$current7;\n      return (_this$listRef$current7 = _this.listRef.current) == null ? void 0 : _this$listRef$current7.getNativeScrollRef();\n    };\n    _this.getScrollResponder = function () {\n      var _this$listRef$current8;\n      return (_this$listRef$current8 = _this.listRef.current) == null ? void 0 : _this$listRef$current8.getScrollResponder();\n    };\n    _this.isAutoScrolling = function () {\n      return _this.state.enabledAutoScrollToEnd;\n    };\n    _this.getTriangleDirection = function () {\n      var _this$props = _this.props,\n        inverted = _this$props.inverted,\n        horizontal = _this$props.horizontal,\n        triangleDirection = _this$props.triangleDirection;\n      var direction;\n      if (horizontal) {\n        if (inverted) {\n          direction = \"left\";\n        } else {\n          direction = \"right\";\n        }\n      } else {\n        if (inverted) {\n          direction = \"up\";\n        } else {\n          direction = \"down\";\n        }\n      }\n      return triangleDirection != null ? triangleDirection : direction;\n    };\n    _this.getScrollToEndIndicatorPosition = function () {\n      var _this$props2 = _this.props,\n        inverted = _this$props2.inverted,\n        horizontal = _this$props2.horizontal;\n      return {\n        top: inverted && !horizontal ? 20 : undefined,\n        bottom: inverted && !horizontal ? undefined : 20,\n        left: inverted && horizontal ? 30 : undefined,\n        right: inverted && horizontal ? undefined : 20\n      };\n    };\n    _this.onLayout = function (event) {\n      _this.flatListHeight = event.nativeEvent.layout.height;\n      _this.flatListWidth = event.nativeEvent.layout.width;\n      if (_this.listRef.current && _this.state.enabledAutoScrollToEnd) {\n        _this.scrollToEnd();\n      }\n      _this.props.onLayout == null ? void 0 : _this.props.onLayout(event);\n    };\n    _this.onContentSizeChange = function (width, height) {\n      _this.contentHeight = height;\n      _this.contentWidth = width;\n      if (_this.state.enabledAutoScrollToEnd) {\n        _this.scrollToEnd();\n      }\n      _this.props.onContentSizeChange == null ? void 0 : _this.props.onContentSizeChange(width, height);\n    };\n    _this.onScroll = function (event) {\n      var prevScrollTop = _this.scrollTop;\n      _this.scrollTop = _this.props.horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n      var isScrollingDown = prevScrollTop <= _this.scrollTop;\n      var scrollEnd = _this.props.horizontal ? _this.contentWidth - _this.flatListWidth : _this.contentHeight - _this.flatListHeight;\n      var isEndOfList = _this.scrollTop + _this.props.threshold >= Math.floor(scrollEnd);\n      _this.setState({\n        isEndOfList: isEndOfList,\n        enabledAutoScrollToEnd: _this.props.autoScrollDisabled ? false : _this.state.enabledAutoScrollToEnd && isScrollingDown || isEndOfList\n      }, function () {\n        _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n      });\n      event.persist == null ? void 0 : event.persist();\n    };\n    _this.renderDefaultNewItemAlertComponent = function (newItemCount, translateY) {\n      var _this$props3 = _this.props,\n        inverted = _this$props3.inverted,\n        horizontal = _this$props3.horizontal,\n        newItemAlertMessage = _this$props3.newItemAlertMessage,\n        newItemAlertContainerStyle = _this$props3.newItemAlertContainerStyle,\n        newItemAlertTextStyle = _this$props3.newItemAlertTextStyle;\n      var direction = _this.getTriangleDirection();\n      var message = newItemAlertMessage ? newItemAlertMessage(newItemCount) : \"\" + (direction === \"left\" ? \" \" : \"\") + newItemCount + \" new item\" + (newItemCount > 1 ? \"s\" : \"\");\n      var position = inverted && !horizontal ? {\n        bottom: translateY\n      } : {\n        top: translateY\n      };\n      return _jsxs(Animated.View, {\n        style: [styles.newItemAlert, newItemAlertContainerStyle, position],\n        children: [direction === \"left\" && _jsx(Triangle, {\n          size: 4,\n          direction: direction\n        }), _jsx(Text, {\n          style: [styles.alertMessage, newItemAlertTextStyle],\n          children: message\n        }), direction !== \"left\" && _jsx(Triangle, {\n          size: 4,\n          direction: direction\n        })]\n      });\n    };\n    _this.renderDefaultIndicatorComponent = function () {\n      var indicatorContainerStyle = _this.props.indicatorContainerStyle;\n      return _jsx(View, {\n        style: indicatorContainerStyle != null ? indicatorContainerStyle : [styles.scrollToEndIndicator, _this.getScrollToEndIndicatorPosition()],\n        children: _jsx(Triangle, {\n          direction: _this.getTriangleDirection()\n        })\n      });\n    };\n    _this.state = {\n      enabledAutoScrollToEnd: props.autoScrollDisabled ? false : true,\n      newItemCount: 0,\n      alertY: new Animated.Value(0),\n      isEndOfList: true\n    };\n    return _this;\n  }\n  _createClass(AutoScrollFlatList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _prevProps$data, _prevProps$data2;\n      var _this$props4 = this.props,\n        data = _this$props4.data,\n        filteredDataForNewItemCount = _this$props4.filteredDataForNewItemCount;\n      var _this$state = this.state,\n        enabledAutoScrollToEnd = _this$state.enabledAutoScrollToEnd,\n        newItemCount = _this$state.newItemCount,\n        alertY = _this$state.alertY;\n      var filteredPrevData = filteredDataForNewItemCount ? filteredDataForNewItemCount((_prevProps$data = prevProps.data) != null ? _prevProps$data : []) : (_prevProps$data2 = prevProps.data) != null ? _prevProps$data2 : [];\n      var filteredData = filteredDataForNewItemCount ? filteredDataForNewItemCount(data != null ? data : []) : data != null ? data : [];\n      if (!enabledAutoScrollToEnd && filteredData.length > filteredPrevData.length) {\n        var newCount = prevState.newItemCount + filteredData.length - filteredPrevData.length;\n        this.setState({\n          newItemCount: newCount\n        });\n        if (newCount === 1) {\n          alertY.setValue(-30);\n          Animated.timing(alertY, {\n            toValue: 10,\n            duration: 250,\n            useNativeDriver: false\n          }).start();\n        }\n      } else if (enabledAutoScrollToEnd && newItemCount) {\n        this.setState({\n          newItemCount: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        contentContainerStyle = _this$props5.contentContainerStyle,\n        threshold = _this$props5.threshold,\n        showScrollToEndIndicator = _this$props5.showScrollToEndIndicator,\n        showNewItemAlert = _this$props5.showNewItemAlert,\n        newItemAlertRenderer = _this$props5.newItemAlertRenderer,\n        indicatorContainerStyle = _this$props5.indicatorContainerStyle,\n        indicatorComponent = _this$props5.indicatorComponent,\n        numColumns = _this$props5.numColumns,\n        restProps = _objectWithoutProperties(_this$props5, _excluded);\n      var _this$state2 = this.state,\n        enabledAutoScrollToEnd = _this$state2.enabledAutoScrollToEnd,\n        newItemCount = _this$state2.newItemCount,\n        alertY = _this$state2.alertY,\n        isEndOfList = _this$state2.isEndOfList;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_createElement(FlatList, _objectSpread(_objectSpread({}, restProps), {}, {\n          ref: this.listRef,\n          key: numColumns,\n          numColumns: numColumns,\n          contentContainerStyle: contentContainerStyle != null ? contentContainerStyle : styles.contentContainer,\n          onLayout: this.onLayout,\n          onContentSizeChange: this.onContentSizeChange,\n          onScroll: this.onScroll\n        })), showNewItemAlert && !enabledAutoScrollToEnd && newItemCount > 0 && _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return _this2.scrollToEnd();\n          },\n          children: newItemAlertRenderer ? newItemAlertRenderer(newItemCount, alertY) : this.renderDefaultNewItemAlertComponent(newItemCount, alertY)\n        }), showScrollToEndIndicator && !enabledAutoScrollToEnd && !isEndOfList && _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return _this2.scrollToEnd();\n          },\n          children: indicatorComponent != null ? indicatorComponent : this.renderDefaultIndicatorComponent()\n        })]\n      });\n    }\n  }]);\n  return AutoScrollFlatList;\n}(React.PureComponent);\nAutoScrollFlatList.displayName = \"AutoScrollFlatList\";\nAutoScrollFlatList.defaultProps = {\n  threshold: 0,\n  showScrollToEndIndicator: true,\n  showNewItemAlert: true,\n  autoScrollDisabled: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: \"hidden\"\n  },\n  contentContainer: {\n    alignItems: \"stretch\",\n    paddingVertical: 8,\n    paddingHorizontal: 8\n  },\n  scrollToEndIndicator: {\n    position: \"absolute\",\n    width: 30,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#000000\",\n    borderRadius: 5,\n    backgroundColor: \"#ffffff\"\n  },\n  newItemAlert: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    paddingVertical: 3,\n    paddingHorizontal: 8\n  },\n  alertMessage: {\n    marginRight: 4\n  }\n});","map":{"version":3,"sources":["../../../src/component/AutoScrollFlatList.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAG1B,SAAQ,QAAQ;AAAoB;AAAA;AAAA;AAmBpC,WAAa,kBAAsB;EAAA;EAAA;EAiB/B,4BAAY,KAAe,EAAA;IAAA;IAAA;IACvB,0BAAM,KAAK;IARE,MAAA,OAAO,GAAiC,KAAK,CAAC,SAAS,EAAE;IAClE,MAAA,cAAc,GAAW,CAAC;IAC1B,MAAA,aAAa,GAAW,CAAC;IACzB,MAAA,aAAa,GAAW,CAAC;IACzB,MAAA,YAAY,GAAW,CAAC;IACxB,MAAA,SAAS,GAAW,CAAC;IAqC7B,MAAA,WAAW,GAAG,YAAmD;MAAA,IAAlD,MAAA,uEAA8B;QAAC,QAAQ,EAAE;MAAI,CAAC;MACzD,IAAM,MAAM,GAAG,MAAK,KAAK,CAAC,UAAU,GAAG,MAAK,YAAY,GAAG,MAAK,aAAa,GAAG,MAAK,aAAa,GAAG,MAAK,cAAc;MACxH,MAAK,QAAQ,CAAC;QAAC,YAAY,EAAE;MAAC,CAAC,CAAC;MAChC,MAAK,cAAc,CAAC;QAAC,MAAM,EAAN,MAAM;QAAE,QAAQ,EAAE,MAAM,CAAC;MAAQ,CAAC,CAAC;IAC5D,CAAC;IAED,MAAA,aAAa,GAAG,UAAC,MAAuF,EAAI;MAAA;MACxG,+BAAK,OAAO,CAAC,OAAO,qBAApB,sBAAsB,aAAa,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,MAAA,YAAY,GAAG,UAAC,MAA2D,EAAI;MAAA;MAC3E,gCAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,YAAY,CAAC,MAAM,CAAC;IAC9C,CAAC;IAED,MAAA,cAAc,GAAG,UAAC,MAA4C,EAAI;MAAA;MAC9D,gCAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,cAAc,CAAC,MAAM,CAAC;IAChD,CAAC;IAED,MAAA,iBAAiB,GAAG,YAAK;MAAA;MACrB,gCAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,iBAAiB,EAAE;IAC7C,CAAC;IAED,MAAA,qBAAqB,GAAG,YAAK;MAAA;MACzB,gCAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,qBAAqB,EAAE;IACjD,CAAC;IAED,MAAA,iBAAiB,GAAG,YAAU;MAAA;MAC1B,iCAAO,MAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,iBAAiB,EAAE;IACpD,CAAC;IAED,MAAA,kBAAkB,GAAG,YAAsF;MAAA;MACvG,iCAAO,MAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,kBAAkB,EAAE;IACrD,CAAC;IAED,MAAA,kBAAkB,GAAG,YAAqC;MAAA;MACtD,iCAAO,MAAK,OAAO,CAAC,OAAO,qBAApB,uBAAsB,kBAAkB,EAAE;IACrD,CAAC;IAED,MAAA,eAAe,GAAG;MAAA,OAAM,MAAK,KAAK,CAAC,sBAAsB;IAAA;IAwBjD,MAAA,oBAAoB,GAAG,YAAiC;MAC5D,kBAAkD,MAAK,KAAK;QAArD,QAAQ,eAAR,QAAQ;QAAE,UAAU,eAAV,UAAU;QAAE,iBAAiB,eAAjB,iBAAiB;MAC9C,IAAI,SAAqC;MACzC,IAAI,UAAU,EAAE;QACZ,IAAI,QAAQ,EAAE;UACV,SAAS,GAAG,MAAM;SACrB,MAAM;UACH,SAAS,GAAG,OAAO;QACtB;OACJ,MAAM;QACH,IAAI,QAAQ,EAAE;UACV,SAAS,GAAG,IAAI;SACnB,MAAM;UACH,SAAS,GAAG,MAAM;QACrB;MACJ;MACD,OAAO,iBAAiB,WAAjB,iBAAiB,GAAI,SAAS;IACzC,CAAC;IAEO,MAAA,+BAA+B,GAAG,YAAK;MAC3C,mBAA+B,MAAK,KAAK;QAAlC,QAAQ,gBAAR,QAAQ;QAAE,UAAU,gBAAV,UAAU;MAC3B,OAAO;QACH,GAAG,EAAE,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,SAAS;QAC7C,MAAM,EAAE,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,EAAE;QAChD,IAAI,EAAE,QAAQ,IAAI,UAAU,GAAG,EAAE,GAAG,SAAS;QAC7C,KAAK,EAAE,QAAQ,IAAI,UAAU,GAAG,SAAS,GAAG;OAC/C;IACL,CAAC;IAEO,MAAA,QAAQ,GAAG,UAAC,KAAwB,EAAI;MAC5C,MAAK,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM;MACrD,MAAK,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK;MACnD,IAAI,MAAK,OAAO,CAAC,OAAO,IAAI,MAAK,KAAK,CAAC,sBAAsB,EAAE;QAC3D,MAAK,WAAW,EAAE;MACrB;MAGD,MAAK,KAAK,CAAC,QAAQ,oBAAnB,MAAK,KAAK,CAAC,QAAQ,CAAG,KAAK,CAAC;IAChC,CAAC;IAEO,MAAA,mBAAmB,GAAG,UAAC,KAAa,EAAE,MAAc,EAAI;MAC5D,MAAK,aAAa,GAAG,MAAM;MAC3B,MAAK,YAAY,GAAG,KAAK;MACzB,IAAI,MAAK,KAAK,CAAC,sBAAsB,EAAE;QACnC,MAAK,WAAW,EAAE;MACrB;MAGD,MAAK,KAAK,CAAC,mBAAmB,oBAA9B,MAAK,KAAK,CAAC,mBAAmB,CAAG,KAAK,EAAE,MAAM,CAAC;IACnD,CAAC;IAEO,MAAA,QAAQ,GAAG,UAAC,KAA8C,EAAI;MAKlE,IAAM,aAAa,GAAG,MAAK,SAAS;MACpC,MAAK,SAAS,GAAG,MAAK,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;MAC9G,IAAM,eAAe,GAAG,aAAa,IAAI,MAAK,SAAS;MACvD,IAAM,SAAS,GAAG,MAAK,KAAK,CAAC,UAAU,GAAG,MAAK,YAAY,GAAG,MAAK,aAAa,GAAG,MAAK,aAAa,GAAG,MAAK,cAAc;MAC3H,IAAM,WAAW,GAAG,MAAK,SAAS,GAAG,MAAK,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;MAClF,MAAK,QAAQ,CAAC;QAAC,WAAW,EAAX,WAAW;QAAE,sBAAsB,EAAE,MAAK,KAAK,CAAC,kBAAkB,GAAG,KAAK,GAAI,MAAK,KAAK,CAAC,sBAAsB,IAAI,eAAe,IAAK;MAAW,CAAC,EAAE,YAAK;QAErK,MAAK,KAAK,CAAC,QAAQ,oBAAnB,MAAK,KAAK,CAAC,QAAQ,CAAG,KAAK,CAAC;MAChC,CAAC,CAAC;MAIF,KAAK,CAAC,OAAO,oBAAb,KAAK,CAAC,OAAO,EAAI;IACrB,CAAC;IAEO,MAAA,kCAAkC,GAAG,UAAC,YAAoB,EAAE,UAA0B,EAAI;MAC9F,mBAAuG,MAAK,KAAK;QAA1G,QAAQ,gBAAR,QAAQ;QAAE,UAAU,gBAAV,UAAU;QAAE,mBAAmB,gBAAnB,mBAAmB;QAAE,0BAA0B,gBAA1B,0BAA0B;QAAE,qBAAqB,gBAArB,qBAAqB;MACnG,IAAM,SAAS,GAAG,MAAK,oBAAoB,EAAE;MAC7C,IAAM,OAAO,GAAG,mBAAmB,GAAG,mBAAmB,CAAC,YAAY,CAAC,SAAM,SAAS,KAAK,MAAM,GAAG,GAAG,GAAG,EAAE,IAAG,YAAY,kBAAY,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAE;MACpK,IAAM,QAAQ,GAAG,QAAQ,IAAI,CAAC,UAAU,GAAG;QAAC,MAAM,EAAE;MAAU,CAAC,GAAG;QAAC,GAAG,EAAE;MAAU,CAAC;MACnF,OACI,MAAC,QAAQ,CAAC,IAAI;QAAC,KAAK,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,0BAA0B,EAAE,QAAQ,CAAE;QAAA,WAC7E,SAAS,KAAK,MAAM,IAAI,KAAC,QAAQ;UAAC,IAAI,EAAE,CAAE;UAAC,SAAS,EAAE;QAAU,EAAG,EACpE,KAAC,IAAI;UAAC,KAAK,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,qBAAqB,CAAE;UAAA,UAAE;QAAO,EACnE,EAAC,SAAS,KAAK,MAAM,IAAI,KAAC,QAAQ;UAAC,IAAI,EAAE,CAAE;UAAC,SAAS,EAAE;QAAU,EAAG;MAAA,EACxD;IAExB,CAAC;IAEO,MAAA,+BAA+B,GAAG,YAAK;MAC3C,IAAO,uBAAuB,GAAI,MAAK,KAAK,CAArC,uBAAuB;MAC9B,OACI,KAAC,IAAI;QAAC,KAAK,EAAE,uBAAuB,WAAvB,uBAAuB,GAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAK,+BAA+B,EAAE,CAAE;QAAA,UAC1G,KAAC,QAAQ;UAAC,SAAS,EAAE,MAAK,oBAAoB;QAAG;MACrD,EAAO;IAEf,CAAC;IA3LG,MAAK,KAAK,GAAG;MACT,sBAAsB,EAAE,KAAK,CAAC,kBAAkB,GAAG,KAAK,GAAG,IAAI;MAC/D,YAAY,EAAE,CAAC;MACf,MAAM,EAAE,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7B,WAAW,EAAE;KAChB;IAAC;EACN;EAAC;IAAA;IAAA,OAED,4BAAmB,SAA6B,EAAE,SAA0B,EAAA;MAAA;MACxE,mBAA4C,IAAI,CAAC,KAAK;QAA/C,IAAI,gBAAJ,IAAI;QAAE,2BAA2B,gBAA3B,2BAA2B;MACxC,kBAAuD,IAAI,CAAC,KAAK;QAA1D,sBAAsB,eAAtB,sBAAsB;QAAE,YAAY,eAAZ,YAAY;QAAE,MAAM,eAAN,MAAM;MACnD,IAAM,gBAAgB,GAAG,2BAA2B,GAAG,2BAA2B,oBAAC,SAAS,CAAC,IAAI,8BAAI,EAAE,CAAC,uBAAG,SAAS,CAAC,IAAI,+BAAI,EAAE;MAC/H,IAAM,YAAY,GAAG,2BAA2B,GAAG,2BAA2B,CAAC,IAAI,WAAJ,IAAI,GAAI,EAAE,CAAC,GAAG,IAAI,WAAJ,IAAI,GAAI,EAAE;MACvG,IAAI,CAAC,sBAAsB,IAAI,YAAY,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,EAAE;QAC1E,IAAM,QAAQ,GAAG,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM;QACvF,IAAI,CAAC,QAAQ,CAAC;UAAC,YAAY,EAAE;QAAQ,CAAC,CAAC;QACvC,IAAI,QAAQ,KAAK,CAAC,EAAE;UAChB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;UACpB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;YACpB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,GAAG;YACb,eAAe,EAAE;WACpB,CAAC,CAAC,KAAK,EAAE;QACb;OACJ,MAAM,IAAI,sBAAsB,IAAI,YAAY,EAAE;QAC/C,IAAI,CAAC,QAAQ,CAAC;UAAC,YAAY,EAAE;QAAC,CAAC,CAAC;MACnC;IACL;EAAC;IAAA;IAAA,OA8CD,kBAAM;MAAA;MAKF,mBAAoL,IAAI,CAAC,KAAK;QAAvL,qBAAqB,gBAArB,qBAAqB;QAAE,SAAS,gBAAT,SAAS;QAAE,wBAAwB,gBAAxB,wBAAwB;QAAE,gBAAgB,gBAAhB,gBAAgB;QAAE,oBAAoB,gBAApB,oBAAoB;QAAE,uBAAuB,gBAAvB,uBAAuB;QAAE,kBAAkB,gBAAlB,kBAAkB;QAAE,UAAU,gBAAV,UAAU;QAAK,SAAS;MAChL,mBAAoE,IAAI,CAAC,KAAK;QAAvE,sBAAsB,gBAAtB,sBAAsB;QAAE,YAAY,gBAAZ,YAAY;QAAE,MAAM,gBAAN,MAAM;QAAE,WAAW,gBAAX,WAAW;MAChE,OACI,MAAC,IAAI;QAAC,KAAK,EAAE,MAAM,CAAC,SAAU;QAAA,WAC1B,eAAC,QAAQ,kCAAK,SAAS;UAAE,GAAG,EAAE,IAAI,CAAC,OAAQ;UAAC,GAAG,EAAE,UAAW;UAAC,UAAU,EAAE,UAAW;UAAC,qBAAqB,EAAE,qBAAqB,WAArB,qBAAqB,GAAI,MAAM,CAAC,gBAAiB;UAAC,QAAQ,EAAE,IAAI,CAAC,QAAS;UAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAoB;UAAC,QAAQ,EAAE,IAAI,CAAC;QAAS,GAC9P,EAAC,gBAAgB,IAAI,CAAC,sBAAsB,IAAI,YAAY,GAAG,CAAC,IAC5D,KAAC,wBAAwB;UAAC,OAAO,EAAE;YAAA,OAAM,MAAI,CAAC,WAAW,EAAE;UAAA,CAAC;UAAA,UAAE,oBAAoB,GAAG,oBAAoB,CAAC,YAAY,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,MAAM;QAAC,EAClM,EACA,wBAAwB,IAAI,CAAC,sBAAsB,IAAI,CAAC,WAAW,IAAI,KAAC,wBAAwB;UAAC,OAAO,EAAE;YAAA,OAAM,MAAI,CAAC,WAAW,EAAE;UAAA,CAAC;UAAA,UAAE,kBAAkB,WAAlB,kBAAkB,GAAI,IAAI,CAAC,+BAA+B;QAAE,EAA4B;MAAA,EAC3N;IAEf;EAAC;EAAA;AAAA,EA5GsC,KAAK,CAAC,aAA8B;AACpE,kBAAA,CAAA,WAAW,GAAG,oBAAoB;AAElC,kBAAA,CAAA,YAAY,GAA2G;EAC1H,SAAS,EAAE,CAAC;EACZ,wBAAwB,EAAE,IAAI;EAC9B,gBAAgB,EAAE,IAAI;EACtB,kBAAkB,EAAE;CACvB;AAyML,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;EAC7B,SAAS,EAAE;IACP,IAAI,EAAE,CAAC;IACP,QAAQ,EAAE;GACb;EACD,gBAAgB,EAAE;IACd,UAAU,EAAE,SAAS;IACrB,eAAe,EAAE,CAAC;IAClB,iBAAiB,EAAE;GACtB;EACD,oBAAoB,EAAE;IAClB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,QAAQ;IACxB,UAAU,EAAE,QAAQ;IACpB,WAAW,EAAE,CAAC;IACd,WAAW,EAAE,SAAS;IACtB,YAAY,EAAE,CAAC;IACf,eAAe,EAAE;GACpB;EACD,YAAY,EAAE;IACV,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,QAAQ;IACnB,aAAa,EAAE,KAAK;IACpB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,EAAE;IAChB,WAAW,EAAE,UAAU,CAAC,aAAa;IACrC,WAAW,EAAE,SAAS;IACtB,eAAe,EAAE,SAAS;IAC1B,eAAe,EAAE,CAAC;IAClB,iBAAiB,EAAE;GACtB;EACD,YAAY,EAAE;IACV,WAAW,EAAE;EAChB;CACJ,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Animated, FlatList, StyleSheet, Text, TouchableWithoutFeedback, View } from \"react-native\";\nimport { Triangle } from \"./Triangle\";\nexport class AutoScrollFlatList extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n        this.flatListHeight = 0;\n        this.flatListWidth = 0;\n        this.contentHeight = 0;\n        this.contentWidth = 0;\n        this.scrollTop = 0;\n        /**\n         *  Exposing FlatList Methods To AutoScrollFlatList's Ref\n         */\n        this.scrollToEnd = (params = { animated: true }) => {\n            const offset = this.props.horizontal ? this.contentWidth - this.flatListWidth : this.contentHeight - this.flatListHeight;\n            this.setState({ newItemCount: 0 });\n            this.scrollToOffset({ offset, animated: params.animated });\n        };\n        this.scrollToIndex = (params) => {\n            this.listRef.current?.scrollToIndex(params);\n        };\n        this.scrollToItem = (params) => {\n            this.listRef.current?.scrollToItem(params);\n        };\n        this.scrollToOffset = (params) => {\n            this.listRef.current?.scrollToOffset(params);\n        };\n        this.recordInteraction = () => {\n            this.listRef.current?.recordInteraction();\n        };\n        this.flashScrollIndicators = () => {\n            this.listRef.current?.flashScrollIndicators();\n        };\n        this.getScrollableNode = () => {\n            return this.listRef.current?.getScrollableNode();\n        };\n        this.getNativeScrollRef = () => {\n            return this.listRef.current?.getNativeScrollRef();\n        };\n        this.getScrollResponder = () => {\n            return this.listRef.current?.getScrollResponder();\n        };\n        this.isAutoScrolling = () => this.state.enabledAutoScrollToEnd;\n        /**\n         * Private Methods\n         */\n        this.getTriangleDirection = () => {\n            const { inverted, horizontal, triangleDirection } = this.props;\n            let direction;\n            if (horizontal) {\n                if (inverted) {\n                    direction = \"left\";\n                }\n                else {\n                    direction = \"right\";\n                }\n            }\n            else {\n                if (inverted) {\n                    direction = \"up\";\n                }\n                else {\n                    direction = \"down\";\n                }\n            }\n            return triangleDirection ?? direction;\n        };\n        this.getScrollToEndIndicatorPosition = () => {\n            const { inverted, horizontal } = this.props;\n            return {\n                top: inverted && !horizontal ? 20 : undefined,\n                bottom: inverted && !horizontal ? undefined : 20,\n                left: inverted && horizontal ? 30 : undefined,\n                right: inverted && horizontal ? undefined : 20,\n            };\n        };\n        this.onLayout = (event) => {\n            this.flatListHeight = event.nativeEvent.layout.height;\n            this.flatListWidth = event.nativeEvent.layout.width;\n            if (this.listRef.current && this.state.enabledAutoScrollToEnd) {\n                this.scrollToEnd();\n            }\n            // User-defined onLayout event\n            this.props.onLayout?.(event);\n        };\n        this.onContentSizeChange = (width, height) => {\n            this.contentHeight = height;\n            this.contentWidth = width;\n            if (this.state.enabledAutoScrollToEnd) {\n                this.scrollToEnd();\n            }\n            // User-defined onContentSizeChange event\n            this.props.onContentSizeChange?.(width, height);\n        };\n        this.onScroll = (event) => {\n            /**\n             *  Default behavior: if scrollTop is at the end of <Flatlist>, autoscroll will be enabled.\n             *  CAVEAT: Android has precision error here from 4 decimal places, therefore we need to use Math.floor() to make sure the calculation is correct on Android.\n             */\n            const prevScrollTop = this.scrollTop;\n            this.scrollTop = this.props.horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n            const isScrollingDown = prevScrollTop <= this.scrollTop;\n            const scrollEnd = this.props.horizontal ? this.contentWidth - this.flatListWidth : this.contentHeight - this.flatListHeight;\n            const isEndOfList = this.scrollTop + this.props.threshold >= Math.floor(scrollEnd);\n            this.setState({ isEndOfList, enabledAutoScrollToEnd: this.props.autoScrollDisabled ? false : (this.state.enabledAutoScrollToEnd && isScrollingDown) || isEndOfList }, () => {\n                // User-defined onScroll event\n                this.props.onScroll?.(event);\n            });\n            /**\n             * Need to check if event.persist is defined before using to account for usage in react-native-web\n             */\n            event.persist?.();\n        };\n        this.renderDefaultNewItemAlertComponent = (newItemCount, translateY) => {\n            const { inverted, horizontal, newItemAlertMessage, newItemAlertContainerStyle, newItemAlertTextStyle } = this.props;\n            const direction = this.getTriangleDirection();\n            const message = newItemAlertMessage ? newItemAlertMessage(newItemCount) : `${direction === \"left\" ? \" \" : \"\"}${newItemCount} new item${newItemCount > 1 ? \"s\" : \"\"}`;\n            const position = inverted && !horizontal ? { bottom: translateY } : { top: translateY };\n            return (<Animated.View style={[styles.newItemAlert, newItemAlertContainerStyle, position]}>\n                {direction === \"left\" && <Triangle size={4} direction={direction}/>}\n                <Text style={[styles.alertMessage, newItemAlertTextStyle]}>{message}</Text>\n                {direction !== \"left\" && <Triangle size={4} direction={direction}/>}\n            </Animated.View>);\n        };\n        this.renderDefaultIndicatorComponent = () => {\n            const { indicatorContainerStyle } = this.props;\n            return (<View style={indicatorContainerStyle ?? [styles.scrollToEndIndicator, this.getScrollToEndIndicatorPosition()]}>\n                <Triangle direction={this.getTriangleDirection()}/>\n            </View>);\n        };\n        this.state = {\n            enabledAutoScrollToEnd: props.autoScrollDisabled ? false : true,\n            newItemCount: 0,\n            alertY: new Animated.Value(0),\n            isEndOfList: true,\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { data, filteredDataForNewItemCount } = this.props;\n        const { enabledAutoScrollToEnd, newItemCount, alertY } = this.state;\n        const filteredPrevData = filteredDataForNewItemCount ? filteredDataForNewItemCount(prevProps.data ?? []) : prevProps.data ?? [];\n        const filteredData = filteredDataForNewItemCount ? filteredDataForNewItemCount(data ?? []) : data ?? [];\n        if (!enabledAutoScrollToEnd && filteredData.length > filteredPrevData.length) {\n            const newCount = prevState.newItemCount + filteredData.length - filteredPrevData.length;\n            this.setState({ newItemCount: newCount });\n            if (newCount === 1) {\n                alertY.setValue(-30);\n                Animated.timing(alertY, {\n                    toValue: 10,\n                    duration: 250,\n                    useNativeDriver: false,\n                }).start();\n            }\n        }\n        else if (enabledAutoScrollToEnd && newItemCount) {\n            this.setState({ newItemCount: 0 });\n        }\n    }\n    render() {\n        /**\n         * Need to force a refresh for the FlatList by changing the key when numColumns changes.\n         * Ref: https://stackoverflow.com/questions/44291781/dynamically-changing-number-of-columns-in-react-native-flat-list\n         */\n        const { contentContainerStyle, threshold, showScrollToEndIndicator, showNewItemAlert, newItemAlertRenderer, indicatorContainerStyle, indicatorComponent, numColumns, ...restProps } = this.props;\n        const { enabledAutoScrollToEnd, newItemCount, alertY, isEndOfList } = this.state;\n        return (<View style={styles.container}>\n                <FlatList {...restProps} ref={this.listRef} key={numColumns} numColumns={numColumns} contentContainerStyle={contentContainerStyle ?? styles.contentContainer} onLayout={this.onLayout} onContentSizeChange={this.onContentSizeChange} onScroll={this.onScroll}/>\n                {showNewItemAlert && !enabledAutoScrollToEnd && newItemCount > 0 && (<TouchableWithoutFeedback onPress={() => this.scrollToEnd()}>{newItemAlertRenderer ? newItemAlertRenderer(newItemCount, alertY) : this.renderDefaultNewItemAlertComponent(newItemCount, alertY)}</TouchableWithoutFeedback>)}\n                {showScrollToEndIndicator && !enabledAutoScrollToEnd && !isEndOfList && <TouchableWithoutFeedback onPress={() => this.scrollToEnd()}>{indicatorComponent ?? this.renderDefaultIndicatorComponent()}</TouchableWithoutFeedback>}\n            </View>);\n    }\n}\nAutoScrollFlatList.displayName = \"AutoScrollFlatList\";\nAutoScrollFlatList.defaultProps = {\n    threshold: 0,\n    showScrollToEndIndicator: true,\n    showNewItemAlert: true,\n    autoScrollDisabled: false,\n};\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: \"hidden\",\n    },\n    contentContainer: {\n        alignItems: \"stretch\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n    },\n    scrollToEndIndicator: {\n        position: \"absolute\",\n        width: 30,\n        height: 30,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderWidth: 1,\n        borderColor: \"#000000\",\n        borderRadius: 5,\n        backgroundColor: \"#ffffff\",\n    },\n    newItemAlert: {\n        position: \"absolute\",\n        alignSelf: \"center\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        borderRadius: 10,\n        borderWidth: StyleSheet.hairlineWidth,\n        borderColor: \"#000000\",\n        backgroundColor: \"#ffffff\",\n        paddingVertical: 3,\n        paddingHorizontal: 8,\n    },\n    alertMessage: {\n        marginRight: 4,\n    },\n});\n//# sourceMappingURL=AutoScrollFlatList.js.map"]},"metadata":{},"sourceType":"module"}