{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\",\"color\",\"size\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";var MaterialCommunityIcons;try{MaterialCommunityIcons=require(\"@expo/vector-icons/MaterialCommunityIcons\").default;}catch(e){var isErrorLogged=false;MaterialCommunityIcons=function MaterialCommunityIcons(_ref){var name=_ref.name,color=_ref.color,size=_ref.size,rest=_objectWithoutProperties(_ref,_excluded);if(!isErrorLogged){if(!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)){console.error(e);}console.warn(\"Tried to use the icon '\"+name+\"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\",\"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");isErrorLogged=true;}return React.createElement(Text,_extends({},rest,{style:[styles.icon,{color:color,fontSize:size}],pointerEvents:\"none\",selectable:false}),\"\\u25A1\");};}export var accessibilityProps=Platform.OS==='web'?{role:'img',focusable:false}:{accessibilityElementsHidden:true,importantForAccessibility:'no-hide-descendants'};var defaultIcon=function defaultIcon(_ref2){var name=_ref2.name,color=_ref2.color,size=_ref2.size,direction=_ref2.direction,allowFontScaling=_ref2.allowFontScaling;return React.createElement(MaterialCommunityIcons,_extends({allowFontScaling:allowFontScaling,name:name,color:color,size:size,style:[{transform:[{scaleX:direction==='rtl'?-1:1}],lineHeight:size},styles.icon],pointerEvents:\"none\",selectable:false},accessibilityProps));};var styles=StyleSheet.create({icon:{backgroundColor:'transparent'}});export default defaultIcon;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["React","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","styles","icon","fontSize","accessibilityProps","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","create","backgroundColor"],"mappings":"kZAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAAA,mLAWA,GAAIC,uBAAJ,CASA,GAAI,CAEFA,sBAAsB,CACpBC,OAAO,6CAAPA,CAA4DC,OAD9DF,CAFF,CAIE,MAAOG,CAAP,CAAU,CACV,GAAIC,cAAa,CAAG,KADV,CAIVJ,sBAAsB,CAAG,gCAAA,IAAA,CAAoC,CAAnC,GAAEK,KAAF,CAAmC,IAAA,CAAjCA,IAAF,CAAQC,KAAR,CAAmC,IAAA,CAA3BA,KAAR,CAAeC,IAAf,CAAmC,IAAA,CAApBA,IAAf,CAAwBC,IAAAA,0BAAW,IAAA,YAE3D,GAAI,CAACJ,aAAL,CAAoB,CAClB,GACE,CAAC,6DAAA,CAA8DK,IAA9D,CACEN,CAAD,CAAWO,OADZ,CADH,CAIE,CACAC,OAAO,CAACC,KAARD,CAAcR,CAAdQ,CAAAA,CACD,CAEDA,OAAO,CAACE,IAARF,2BAC4BN,IAD5BM,kSAAAA,CAKAP,aAAa,CAAG,IAAhBA,CACD,CAED,MACE,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMI,IADN,CAAA,CAEE,KAAK,CAAE,CAACM,MAAM,CAACC,IAAR,CAAc,CAAET,KAAF,CAAEA,KAAF,CAASU,QAAQ,CAAET,IAAnB,CAAd,CAFT,CAIE,aAAa,CAAC,MAJhB,CAKE,UAAU,CAAE,KALd,CAAA,CAAA,CAAA,QAAA,CADF,CAWD,CA9BDP,CA+BD,CAED,MAAO,IAAMiB,mBAAkB,CAC7B,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CACI,CACEC,IAAI,CAAE,KADR,CAEEC,SAAS,CAAE,KAFb,CADJ,CAKI,CACEC,2BAA2B,CAAE,IAD/B,CAEEC,yBAAyB,CACvB,qBAHJ,CANC,CAYP,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAG,KAAA,CAAA,CAAA,GAClBlB,KADmB,CAAD,KAAA,CAClBA,IADmB,CAEnBC,KAFmB,CAAD,KAAA,CAElBA,KAFmB,CAGnBC,IAHmB,CAAD,KAAA,CAGlBA,IAHmB,CAInBiB,SAJmB,CAAD,KAAA,CAIlBA,SAJmB,CAKnBC,gBAAAA,CALkB,KAAA,CAKlBA,gBAAAA,CALkB,MAOlB,MAAA,CAAA,aAAA,CAAC,sBAAD,CAAA,QAAA,CAAA,CACE,gBAAgB,CAAEA,gBADpB,CAEE,IAAI,CAAEpB,IAFR,CAGE,KAAK,CAAEC,KAHT,CAIE,IAAI,CAAEC,IAJR,CAKE,KAAK,CAAE,CACL,CACEmB,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEH,SAAS,GAAK,KAAdA,CAAsB,CAAC,CAAvBA,CAA2B,CAArC,CAAD,CADb,CAEEI,UAAU,CAAErB,IAFd,CADK,CAKLO,MAAM,CAACC,IALF,CALT,CAYE,aAAa,CAAC,MAZhB,CAaE,UAAU,CAAE,KAbd,CAAA,CAcME,kBAdN,CAAA,CAPkB,CAAA,CAApB,CAyBA,GAAMH,OAAM,CAAG,UAAU,CAACe,MAAX,CAAkB,CAC/Bd,IAAI,CAAE,CACJe,eAAe,CAAE,aADb,CADyB,CAAlB,CAAf,CAMA,cAAeP,YAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"module"}