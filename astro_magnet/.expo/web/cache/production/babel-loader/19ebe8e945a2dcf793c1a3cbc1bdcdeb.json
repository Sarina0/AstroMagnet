{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isString}from'@react-native-firebase/app/lib/common';import FirestoreDocumentReference,{provideDocumentSnapshotClass}from\"./FirestoreDocumentReference\";import FirestoreFieldPath,{fromDotSeparatedString}from\"./FirestoreFieldPath\";import FirestorePath from\"./FirestorePath\";import FirestoreSnapshotMetadata from\"./FirestoreSnapshotMetadata\";import{extractFieldPathData}from\"./utils\";import{parseNativeMap}from\"./utils/serialize\";var FirestoreDocumentSnapshot=function(){function FirestoreDocumentSnapshot(firestore,nativeData){_classCallCheck(this,FirestoreDocumentSnapshot);this._data=parseNativeMap(firestore,nativeData.data);this._metadata=new FirestoreSnapshotMetadata(nativeData.metadata);this._ref=new FirestoreDocumentReference(firestore,FirestorePath.fromName(nativeData.path));this._exists=nativeData.exists;}_createClass(FirestoreDocumentSnapshot,[{key:\"exists\",get:function get(){return this._exists;}},{key:\"id\",get:function get(){return this._ref.id;}},{key:\"metadata\",get:function get(){return this._metadata;}},{key:\"ref\",get:function get(){return this._ref;}},{key:\"data\",value:function data(){return this._data;}},{key:\"get\",value:function get(fieldPath){if(!isString(fieldPath)&&!(fieldPath instanceof FirestoreFieldPath)){throw new Error(\"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' expected type string or FieldPath.\");}var path;if(isString(fieldPath)){try{path=fromDotSeparatedString(fieldPath);}catch(e){throw new Error(\"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' \"+e.message+\".\");}}else{path=fieldPath;}return extractFieldPathData(this._data,path._segments);}},{key:\"isEqual\",value:function isEqual(other){if(!(other instanceof FirestoreDocumentSnapshot)){throw new Error(\"firebase.firestore() DocumentSnapshot.isEqual(*) 'other' expected a DocumentSnapshot instance.\");}if(this.exists!==other.exists||!this.metadata.isEqual(other.metadata)||!this.ref.isEqual(other.ref)){return false;}var thisData=JSON.stringify(this.data());var otherData=JSON.stringify(other.data());return thisData===otherData;}}]);return FirestoreDocumentSnapshot;}();export{FirestoreDocumentSnapshot as default};provideDocumentSnapshotClass(FirestoreDocumentSnapshot);","map":{"version":3,"names":["isString","FirestoreDocumentReference","provideDocumentSnapshotClass","FirestoreFieldPath","fromDotSeparatedString","FirestorePath","FirestoreSnapshotMetadata","extractFieldPathData","parseNativeMap","FirestoreDocumentSnapshot","firestore","nativeData","_data","data","_metadata","metadata","_ref","fromName","path","_exists","exists","id","fieldPath","Error","e","message","_segments","other","isEqual","ref","thisData","JSON","stringify","otherData"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentSnapshot.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, {\n  provideDocumentSnapshotClass,\n} from './FirestoreDocumentReference';\nimport FirestoreFieldPath, { fromDotSeparatedString } from './FirestoreFieldPath';\nimport FirestorePath from './FirestorePath';\nimport FirestoreSnapshotMetadata from './FirestoreSnapshotMetadata';\nimport { extractFieldPathData } from './utils';\nimport { parseNativeMap } from './utils/serialize';\n\nexport default class FirestoreDocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = new FirestoreSnapshotMetadata(nativeData.metadata);\n    this._ref = new FirestoreDocumentReference(firestore, FirestorePath.fromName(nativeData.path));\n    this._exists = nativeData.exists;\n  }\n\n  get exists() {\n    return this._exists;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data() {\n    // TODO: ehesp: Figure out how to handle this.\n    // const snapshotOptions = {};\n    //\n    // if (!isUndefined(options)) {\n    //   if (!isObject(options)) {\n    //     throw new Error(\n    //       `firebase.firestore() DocumentSnapshot.data(*) 'options' expected an object if defined.`,\n    //     );\n    //   }\n    //\n    //   if (\n    //     options.serverTimestamps &&\n    //     options.serverTimestamps !== 'estimate' &&\n    //     options.serverTimestamps !== 'previous' &&\n    //     options.serverTimestamps !== 'none'\n    //   ) {\n    //     throw new Error(\n    //       `firebase.firestore() DocumentSnapshot.data(*) 'options.serverTimestamps' expected one of 'estimate', 'previous' or 'none'.`,\n    //     );\n    //   }\n    // }\n\n    return this._data;\n  }\n\n  get(fieldPath) {\n    // TODO: ehesp: How are SnapshotOptions handled?\n\n    if (!isString(fieldPath) && !(fieldPath instanceof FirestoreFieldPath)) {\n      throw new Error(\n        \"firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' expected type string or FieldPath.\",\n      );\n    }\n\n    let path;\n\n    if (isString(fieldPath)) {\n      try {\n        path = fromDotSeparatedString(fieldPath);\n      } catch (e) {\n        throw new Error(`firebase.firestore() DocumentSnapshot.get(*) 'fieldPath' ${e.message}.`);\n      }\n    } else {\n      // Is already field path\n      path = fieldPath;\n    }\n\n    return extractFieldPathData(this._data, path._segments);\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentSnapshot)) {\n      throw new Error(\n        \"firebase.firestore() DocumentSnapshot.isEqual(*) 'other' expected a DocumentSnapshot instance.\",\n      );\n    }\n\n    if (\n      this.exists !== other.exists ||\n      !this.metadata.isEqual(other.metadata) ||\n      !this.ref.isEqual(other.ref)\n    ) {\n      return false;\n    }\n\n    const thisData = JSON.stringify(this.data());\n    const otherData = JSON.stringify(other.data());\n\n    return thisData === otherData;\n  }\n}\n\n// To avoid React Native require cycle\nprovideDocumentSnapshotClass(FirestoreDocumentSnapshot);\n"],"mappings":"gIAiBA,OAASA,QAAQ,KAAQ,uCAAuC,CAChE,MAAOC,2BAA0B,EAC/BC,4BAA4B,oCAE9B,MAAOC,mBAAkB,EAAIC,sBAAsB,4BACnD,MAAOC,cAAa,uBACpB,MAAOC,0BAAyB,mCAChC,OAASC,oBAAoB,eAC7B,OAASC,cAAc,yBAA4B,GAE9BC,0BAAyB,YAC5C,mCAAYC,SAAS,CAAEC,UAAU,CAAE,iDACjC,IAAI,CAACC,KAAK,CAAGJ,cAAc,CAACE,SAAS,CAAEC,UAAU,CAACE,IAAI,CAAC,CACvD,IAAI,CAACC,SAAS,CAAG,GAAIR,0BAAyB,CAACK,UAAU,CAACI,QAAQ,CAAC,CACnE,IAAI,CAACC,IAAI,CAAG,GAAIf,2BAA0B,CAACS,SAAS,CAAEL,aAAa,CAACY,QAAQ,CAACN,UAAU,CAACO,IAAI,CAAC,CAAC,CAC9F,IAAI,CAACC,OAAO,CAAGR,UAAU,CAACS,MAAM,CAClC,CAAC,0DAED,cAAa,CACX,MAAO,KAAI,CAACD,OAAO,CACrB,CAAC,gBAED,cAAS,CACP,MAAO,KAAI,CAACH,IAAI,CAACK,EAAE,CACrB,CAAC,sBAED,cAAe,CACb,MAAO,KAAI,CAACP,SAAS,CACvB,CAAC,iBAED,cAAU,CACR,MAAO,KAAI,CAACE,IAAI,CAClB,CAAC,oBAED,eAAO,CAuBL,MAAO,KAAI,CAACJ,KAAK,CACnB,CAAC,mBAED,aAAIU,SAAS,CAAE,CAGb,GAAI,CAACtB,QAAQ,CAACsB,SAAS,CAAC,EAAI,EAAEA,SAAS,WAAYnB,mBAAkB,CAAC,CAAE,CACtE,KAAM,IAAIoB,MAAK,CACb,6FAA6F,CAC9F,CACH,CAEA,GAAIL,KAAI,CAER,GAAIlB,QAAQ,CAACsB,SAAS,CAAC,CAAE,CACvB,GAAI,CACFJ,IAAI,CAAGd,sBAAsB,CAACkB,SAAS,CAAC,CAC1C,CAAE,MAAOE,CAAC,CAAE,CACV,KAAM,IAAID,MAAK,6DAA6DC,CAAC,CAACC,OAAO,KAAI,CAC3F,CACF,CAAC,IAAM,CAELP,IAAI,CAAGI,SAAS,CAClB,CAEA,MAAOf,qBAAoB,CAAC,IAAI,CAACK,KAAK,CAAEM,IAAI,CAACQ,SAAS,CAAC,CACzD,CAAC,uBAED,iBAAQC,KAAK,CAAE,CACb,GAAI,EAAEA,KAAK,WAAYlB,0BAAyB,CAAC,CAAE,CACjD,KAAM,IAAIc,MAAK,CACb,gGAAgG,CACjG,CACH,CAEA,GACE,IAAI,CAACH,MAAM,GAAKO,KAAK,CAACP,MAAM,EAC5B,CAAC,IAAI,CAACL,QAAQ,CAACa,OAAO,CAACD,KAAK,CAACZ,QAAQ,CAAC,EACtC,CAAC,IAAI,CAACc,GAAG,CAACD,OAAO,CAACD,KAAK,CAACE,GAAG,CAAC,CAC5B,CACA,MAAO,MAAK,CACd,CAEA,GAAMC,SAAQ,CAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,IAAI,EAAE,CAAC,CAC5C,GAAMoB,UAAS,CAAGF,IAAI,CAACC,SAAS,CAACL,KAAK,CAACd,IAAI,EAAE,CAAC,CAE9C,MAAOiB,SAAQ,GAAKG,SAAS,CAC/B,CAAC,gDA9FkBxB,yBAAyB,aAkG9CP,4BAA4B,CAACO,yBAAyB,CAAC"},"metadata":{},"sourceType":"module"}