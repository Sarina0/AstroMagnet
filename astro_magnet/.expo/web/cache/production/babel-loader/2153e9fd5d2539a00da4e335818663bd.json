{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"dark\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\",\"elevation\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import AppbarContent from\"./AppbarContent\";import AppbarAction from\"./AppbarAction\";import AppbarBackAction from\"./AppbarBackAction\";import Surface from\"../Surface\";import{withTheme}from\"../../core/theming\";import{black,white}from\"../../styles/colors\";import overlay from\"../../styles/overlay\";export var DEFAULT_APPBAR_HEIGHT=56;var Appbar=function Appbar(_ref){var children=_ref.children,dark=_ref.dark,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode;var _ref2=StyleSheet.flatten(style)||{},customBackground=_ref2.backgroundColor,_ref2$elevation=_ref2.elevation,elevation=_ref2$elevation===void 0?4:_ref2$elevation,restStyle=_objectWithoutProperties(_ref2,_excluded2);var isDark;var backgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.primary;if(typeof dark==='boolean'){isDark=dark;}else{isDark=backgroundColor==='transparent'?false:typeof backgroundColor==='string'?!color(backgroundColor).isLight():true;}var shouldCenterContent=false;var shouldAddLeftSpacing=false;var shouldAddRightSpacing=false;if(Platform.OS==='ios'){var hasAppbarContent=false;var leftItemsCount=0;var rightItemsCount=0;React.Children.forEach(children,function(child){if(React.isValidElement(child)){if(child.type===AppbarContent){hasAppbarContent=true;}else if(hasAppbarContent){rightItemsCount++;}else{leftItemsCount++;}}});shouldCenterContent=hasAppbarContent&&leftItemsCount<2&&rightItemsCount<2;shouldAddLeftSpacing=shouldCenterContent&&leftItemsCount===0;shouldAddRightSpacing=shouldCenterContent&&rightItemsCount===0;}return React.createElement(Surface,_extends({style:[{backgroundColor:backgroundColor},styles.appbar,{elevation:elevation},restStyle]},rest),shouldAddLeftSpacing?React.createElement(View,{style:styles.spacing}):null,React.Children.toArray(children).filter(function(child){return child!=null&&typeof child!=='boolean';}).map(function(child,i){if(!React.isValidElement(child)||![AppbarContent,AppbarAction,AppbarBackAction].includes(child.type)){return child;}var props={color:typeof child.props.color!=='undefined'?child.props.color:isDark?white:black};if(child.type===AppbarContent){props.style=[i!==0&&{marginLeft:8},shouldCenterContent&&{alignItems:'center'},child.props.style];}return React.cloneElement(child,props);}),shouldAddRightSpacing?React.createElement(View,{style:styles.spacing}):null);};var styles=StyleSheet.create({appbar:{height:DEFAULT_APPBAR_HEIGHT,flexDirection:'row',alignItems:'center',paddingHorizontal:4,elevation:4},spacing:{width:48}});export default withTheme(Appbar);var AppbarWithTheme=withTheme(Appbar);export{AppbarWithTheme as Appbar};","map":{"version":3,"sources":["Appbar.tsx"],"names":["React","color","AppbarContent","AppbarAction","AppbarBackAction","Surface","withTheme","black","white","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","children","dark","style","theme","rest","colors","isDarkTheme","mode","backgroundColor","customBackground","elevation","restStyle","StyleSheet","flatten","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","styles","appbar","spacing","toArray","filter","map","i","includes","props","marginLeft","alignItems","cloneElement","create","height","flexDirection","paddingHorizontal","width","AppbarWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\n\nexport type Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nconst Appbar = ({ children, dark, style, theme, ...rest }: Props) => {\n  const { colors, dark: isDarkTheme, mode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  return (\n    <Surface\n      style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (\n            !React.isValidElement(child) ||\n            ![AppbarContent, AppbarAction, AppbarBackAction].includes(\n              // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n              child.type\n            )\n          ) {\n            return child;\n          }\n\n          const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n            color:\n              typeof child.props.color !== 'undefined'\n                ? child.props.color\n                : isDark\n                ? white\n                : black,\n          };\n\n          if (child.type === AppbarContent) {\n            props.style = [\n              // Since content is not first item, add extra left margin\n              i !== 0 && { marginLeft: 8 },\n              shouldCenterContent && { alignItems: 'center' },\n              child.props.style,\n            ];\n          }\n          return React.cloneElement(child, props);\n        })}\n      {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"]},"metadata":{},"sourceType":"module"}