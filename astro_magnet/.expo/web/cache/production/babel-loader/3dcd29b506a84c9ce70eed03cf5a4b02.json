{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"accessibilityLabel\",\"right\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"../Typography/Text\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../core/theming\";var DrawerItem=function DrawerItem(_ref){var icon=_ref.icon,label=_ref.label,active=_ref.active,theme=_ref.theme,style=_ref.style,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,right=_ref.right,rest=_objectWithoutProperties(_ref,_excluded);var colors=theme.colors,roundness=theme.roundness;var backgroundColor=active?color(colors.primary).alpha(0.12).rgb().string():'transparent';var contentColor=active?colors.primary:color(colors.text).alpha(0.68).rgb().string();var font=theme.fonts.medium;var labelMargin=icon?32:0;return React.createElement(View,rest,React.createElement(TouchableRipple,{borderless:true,delayPressIn:0,onPress:onPress,style:[styles.container,{backgroundColor:backgroundColor,borderRadius:roundness},style],accessibilityTraits:active?['button','selected']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{selected:active},accessibilityLabel:accessibilityLabel},React.createElement(View,{style:styles.wrapper},React.createElement(View,{style:styles.content},icon?React.createElement(Icon,{source:icon,size:24,color:contentColor}):null,React.createElement(Text,{selectable:false,numberOfLines:1,style:[styles.label,_objectSpread(_objectSpread({color:contentColor},font),{},{marginLeft:labelMargin})]},label)),right===null||right===void 0?void 0:right({color:contentColor}))));};DrawerItem.displayName='Drawer.Item';var styles=StyleSheet.create({container:{marginHorizontal:10,marginVertical:4},wrapper:{flexDirection:'row',alignItems:'center',padding:8},content:{flex:1,flexDirection:'row',alignItems:'center'},label:{marginRight:32}});export default withTheme(DrawerItem);","map":{"version":3,"sources":["DrawerItem.tsx"],"names":["color","React","Text","Icon","TouchableRipple","withTheme","DrawerItem","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","styles","container","borderRadius","selected","wrapper","content","marginLeft","displayName","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","flex","marginRight"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const { colors, roundness } = theme;\n  const backgroundColor = active\n    ? color(colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? colors.primary\n    : color(colors.text).alpha(0.68).rgb().string();\n  const font = theme.fonts.medium;\n  const labelMargin = icon ? 32 : 0;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius: roundness },\n          style,\n        ]}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n      >\n        <View style={styles.wrapper}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  ...font,\n                  marginLeft: labelMargin,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"module"}