{"ast":null,"code":"import{LABEL_PADDING_HORIZONTAL,ADORNMENT_OFFSET,ADORNMENT_SIZE,FLAT_INPUT_OFFSET}from\"./constants\";import{AdornmentType,AdornmentSide}from\"./Adornment/enums\";export var calculateLabelTopPosition=function calculateLabelTopPosition(labelHeight){var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var optionalPadding=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var customHeight=height>0?height:0;return Math.floor((customHeight-labelHeight)/2+optionalPadding);};export var calculateInputHeight=function calculateInputHeight(labelHeight){var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var minHeight=arguments.length>2?arguments[2]:undefined;var finalHeight=height>0?height:labelHeight;if(height>0)return height;return finalHeight<minHeight?minHeight:finalHeight;};export var calculatePadding=function calculatePadding(props){var height=props.height,_props$multiline=props.multiline,multiline=_props$multiline===void 0?false:_props$multiline;var result=0;if(multiline){if(height&&multiline){result=calculateTextAreaPadding(props);}else{result=calculateInputPadding(props);}}return Math.max(0,result);};var calculateTextAreaPadding=function calculateTextAreaPadding(props){var dense=props.dense;return dense?10:20;};var calculateInputPadding=function calculateInputPadding(_ref){var topPosition=_ref.topPosition,fontSize=_ref.fontSize,multiline=_ref.multiline,scale=_ref.scale,dense=_ref.dense,offset=_ref.offset,isAndroid=_ref.isAndroid;var refFontSize=scale*fontSize;var result=Math.floor(topPosition/2);result=result+Math.floor((refFontSize-fontSize)/2)-(scale<1?offset/2:0);if(multiline&&isAndroid)result=Math.min(dense?offset/2:offset,result);return result;};export var adjustPaddingOut=function adjustPaddingOut(_ref2){var pad=_ref2.pad,multiline=_ref2.multiline,label=_ref2.label,scale=_ref2.scale,height=_ref2.height,fontSize=_ref2.fontSize,lineHeight=_ref2.lineHeight,dense=_ref2.dense,offset=_ref2.offset,isAndroid=_ref2.isAndroid;var fontHeight=lineHeight!==null&&lineHeight!==void 0?lineHeight:fontSize;var refFontHeight=scale*fontSize;var result=pad;if(height&&!multiline){return{paddingTop:Math.max(0,(height-fontHeight)/2),paddingBottom:Math.max(0,(height-fontHeight)/2)};}if(!isAndroid&&multiline){if(dense){if(label){result+=scale<1?Math.min(offset,refFontHeight/2*scale):0;}else{result+=0;}}if(!dense){if(label){result+=scale<1?Math.min(offset,refFontHeight*scale):Math.min(offset/2,refFontHeight*scale);}else{result+=scale<1?Math.min(offset/2,refFontHeight*scale):0;}}result=Math.floor(result);}return{paddingTop:result,paddingBottom:result};};export var adjustPaddingFlat=function adjustPaddingFlat(_ref3){var pad=_ref3.pad,scale=_ref3.scale,multiline=_ref3.multiline,label=_ref3.label,height=_ref3.height,offset=_ref3.offset,dense=_ref3.dense,fontSize=_ref3.fontSize,isAndroid=_ref3.isAndroid,styles=_ref3.styles;var result=pad;var topResult=result;var bottomResult=result;var paddingTop=styles.paddingTop,paddingBottom=styles.paddingBottom;var refFontSize=scale*fontSize;if(!multiline){if(label){return{paddingTop:paddingTop,paddingBottom:paddingBottom};}return{paddingTop:result,paddingBottom:result};}if(label){topResult=paddingTop;bottomResult=paddingBottom;if(!isAndroid){if(dense){topResult+=scale<1?Math.min(result,refFontSize*scale)-result/2:Math.min(result,refFontSize*scale)-result/2;}if(!dense){topResult+=scale<1?Math.min(offset/2,refFontSize*scale):Math.min(result,refFontSize*scale)-offset/2;}}topResult=Math.floor(topResult);}else{if(height){return{paddingTop:Math.max(0,(height-fontSize)/2),paddingBottom:Math.max(0,(height-fontSize)/2)};}if(!isAndroid){if(dense){result+=scale<1?Math.min(offset/2,fontSize/2*scale):Math.min(offset/2,scale);}if(!dense){result+=scale<1?Math.min(offset,fontSize*scale):Math.min(fontSize,offset/2*scale);}result=Math.floor(result);topResult=result;bottomResult=result;}}return{paddingTop:Math.max(0,topResult),paddingBottom:Math.max(0,bottomResult)};};export var interpolatePlaceholder=function interpolatePlaceholder(labeled,hasActiveOutline){return labeled.interpolate({inputRange:[0,1],outputRange:[hasActiveOutline?0:1,1]});};export function calculateFlatAffixTopPosition(_ref4){var height=_ref4.height,paddingTop=_ref4.paddingTop,paddingBottom=_ref4.paddingBottom,affixHeight=_ref4.affixHeight;var inputHeightWithoutPadding=height-paddingTop-paddingBottom;var halfOfTheInputHeightDecreasedByAffixHeight=(inputHeightWithoutPadding-affixHeight)/2;return paddingTop+halfOfTheInputHeightDecreasedByAffixHeight;}export function calculateOutlinedIconAndAffixTopPosition(_ref5){var height=_ref5.height,affixHeight=_ref5.affixHeight,labelYOffset=_ref5.labelYOffset;return(height-affixHeight+labelYOffset)/2;}export var calculateFlatInputHorizontalPadding=function calculateFlatInputHorizontalPadding(_ref6){var adornmentConfig=_ref6.adornmentConfig;var paddingLeft=LABEL_PADDING_HORIZONTAL;var paddingRight=LABEL_PADDING_HORIZONTAL;adornmentConfig.forEach(function(_ref7){var type=_ref7.type,side=_ref7.side;if(type===AdornmentType.Icon&&side===AdornmentSide.Left){paddingLeft=ADORNMENT_SIZE+ADORNMENT_OFFSET+FLAT_INPUT_OFFSET;}else if(side===AdornmentSide.Right){if(type===AdornmentType.Affix){paddingRight=ADORNMENT_SIZE+ADORNMENT_OFFSET+FLAT_INPUT_OFFSET;}else if(type===AdornmentType.Icon){paddingRight=ADORNMENT_SIZE+ADORNMENT_OFFSET+FLAT_INPUT_OFFSET;}}});return{paddingLeft:paddingLeft,paddingRight:paddingRight};};","map":{"version":3,"sources":["helpers.tsx"],"names":["LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","AdornmentType","AdornmentSide","calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","paddingLeft","paddingRight","forEach","type","side","Icon","Left","Right","Affix"],"mappings":"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","sourcesContent":["import type { Animated } from 'react-native';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  LABEL_PADDING_HORIZONTAL,\n  ADORNMENT_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n}: {\n  adornmentConfig: AdornmentConfig[];\n}) => {\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n"]},"metadata":{},"sourceType":"module"}