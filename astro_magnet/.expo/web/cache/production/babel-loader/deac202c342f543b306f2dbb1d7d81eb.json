{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"source\",\"color\",\"size\",\"theme\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import{Consumer as SettingsConsumer}from\"../core/settings\";import{accessibilityProps}from\"./MaterialCommunityIcon\";import{withTheme}from\"../core/theming\";var isImageSource=function isImageSource(source){return typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'||typeof source==='number'||Platform.OS==='web'&&typeof source==='string'&&(source.startsWith('data:image')||/\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));};var getIconId=function getIconId(source){if(typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'){return source.uri;}return source;};export var isValidIcon=function isValidIcon(source){return typeof source==='string'||typeof source==='function'||isImageSource(source);};export var isEqualIcon=function isEqualIcon(a,b){return a===b||getIconId(a)===getIconId(b);};var Icon=function Icon(_ref){var source=_ref.source,color=_ref.color,size=_ref.size,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var direction=typeof source==='object'&&source.direction&&source.source?source.direction==='auto'?I18nManager.isRTL?'rtl':'ltr':source.direction:null;var s=typeof source==='object'&&source.direction&&source.source?source.source:source;var iconColor=color||theme.colors.text;if(isImageSource(s)){return React.createElement(Image,_extends({},rest,{source:s,style:[{transform:[{scaleX:direction==='rtl'?-1:1}]},{width:size,height:size,tintColor:color,resizeMode:'contain'}]},accessibilityProps));}else if(typeof s==='string'){return React.createElement(SettingsConsumer,null,function(_ref2){var icon=_ref2.icon;return icon({name:s,color:iconColor,size:size,direction:direction});});}else if(typeof s==='function'){return s({color:iconColor,size:size,direction:direction});}return null;};export default withTheme(Icon);","map":{"version":3,"sources":["Icon.tsx"],"names":["React","Consumer","SettingsConsumer","accessibilityProps","withTheme","isImageSource","source","Object","prototype","hasOwnProperty","call","uri","Platform","OS","startsWith","test","getIconId","isValidIcon","isEqualIcon","a","b","Icon","color","size","theme","rest","direction","I18nManager","isRTL","s","iconColor","colors","text","transform","scaleX","width","height","tintColor","resizeMode","icon","name"],"mappings":"4ZAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAAA,uLAOA,OAASC,QAAQ,GAAIC,iBAArB,wBACA,OAASC,kBAAT,+BACA,OAASC,SAAT,uBAuBA,GAAMC,cAAa,CAAIC,QAAjBD,cAAa,CAAIC,MAAD,QAEnB,OAAOA,OAAP,GAAkB,QAAlB,EACCA,MAAM,GAAK,IADZ,EAECC,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCD,MAArCC,CAA6C,KAA7CA,CAFD,EAGC,MAAOD,OAAM,CAACK,GAAd,GAAsB,QAHxB,EAKA,MAAOL,OAAP,GAAkB,QALlB,EAOCM,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,EACC,MAAON,OAAP,GAAkB,QADnBM,GAEEN,MAAM,CAACQ,UAAPR,CAAkB,YAAlBA,CAAAA,EACC,+BAAA,CAAgCS,IAAhC,CAAqCT,MAArC,CAHHM,CATH,GAcA,GAAMI,UAAS,CAAIV,QAAbU,UAAS,CAAIV,MAAD,CAAiB,CACjC,GACE,MAAOA,OAAP,GAAkB,QAAlB,EACAA,MAAM,GAAK,IADX,EAEAC,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCD,MAArCC,CAA6C,KAA7CA,CAFA,EAGA,MAAOD,OAAM,CAACK,GAAd,GAAsB,QAJxB,CAKE,CACA,MAAOL,OAAM,CAACK,GAAd,CACD,CAED,MAAOL,OAAP,CACD,CAXD,CAaA,MAAO,IAAMW,YAAW,CAAIX,QAAfW,YAAW,CAAIX,MAAD,QACzB,OAAOA,OAAP,GAAkB,QAAlB,EACA,MAAOA,OAAP,GAAkB,UADlB,EAEAD,aAAa,CAACC,MAAD,CAHR,GAKP,MAAO,IAAMY,YAAW,CAAG,QAAdA,YAAW,CAAIC,CAAD,CAASC,CAAT,QACzBD,EAAC,GAAKC,CAAND,EAAWH,SAAS,CAACG,CAAD,CAATH,GAAiBA,SAAS,CAACI,CAAD,CADhC,GAGP,GAAMC,KAAI,CAAG,QAAPA,KAAI,CAAG,IAAA,CAAoD,CAAnD,GAAEf,OAAF,CAAmD,IAAA,CAAjDA,MAAF,CAAUgB,KAAV,CAAmD,IAAA,CAAzCA,KAAV,CAAiBC,IAAjB,CAAmD,IAAA,CAAlCA,IAAjB,CAAuBC,KAAvB,CAAmD,IAAA,CAA5BA,KAAvB,CAAiCC,IAAAA,0BAAkB,IAAA,YAC/D,GAAMC,UAAS,CACb,MAAOpB,OAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACoB,SAArC,EAAkDpB,MAAM,CAACA,MAAzD,CACIA,MAAM,CAACoB,SAAPpB,GAAqB,MAArBA,CACEqB,WAAW,CAACC,KAAZD,CACE,KADFA,CAEE,KAHJrB,CAIEA,MAAM,CAACoB,SALb,CAMI,IAPN,CAQA,GAAMG,EAAC,CACL,MAAOvB,OAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACoB,SAArC,EAAkDpB,MAAM,CAACA,MAAzD,CACIA,MAAM,CAACA,MADX,CAEIA,MAHN,CAIA,GAAMwB,UAAS,CAAGR,KAAK,EAAIE,KAAK,CAACO,MAANP,CAAaQ,IAAxC,CAEA,GAAI3B,aAAa,CAACwB,CAAD,CAAjB,CAAsB,CACpB,MACE,MAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMJ,IADN,CAAA,CAEE,MAAM,CAAEI,CAFV,CAGE,KAAK,CAAE,CACL,CACEI,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAER,SAAS,GAAK,KAAdA,CAAsB,CAAC,CAAvBA,CAA2B,CAArC,CAAD,CADb,CADK,CAKL,CACES,KAAK,CAAEZ,IADT,CAEEa,MAAM,CAAEb,IAFV,CAGEc,SAAS,CAAEf,KAHb,CAIEgB,UAAU,CAAE,SAJd,CALK,CAHT,CAAA,CAeMnC,kBAfN,CAAA,CADF,CAmBD,CApBD,IAoBO,IAAI,MAAO0B,EAAP,GAAa,QAAjB,CAA2B,CAChC,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,IAAA,CACG,SAAA,KAAA,CAAc,CAAb,GAAEU,KAAAA,CAAW,KAAA,CAAXA,IAAAA,CACF,MAAOA,KAAI,CAAC,CACVC,IAAI,CAAEX,CADI,CAEVP,KAAK,CAAEQ,SAFG,CAGVP,IAHU,CAGVA,IAHU,CAIVG,SAAAA,CAAAA,SAJU,CAAD,CAAX,CAMD,CARH,CADF,CAYD,CAbM,IAaA,IAAI,MAAOG,EAAP,GAAa,UAAjB,CAA6B,CAClC,MAAOA,EAAC,CAAC,CAAEP,KAAK,CAAEQ,SAAT,CAAoBP,IAApB,CAAoBA,IAApB,CAA0BG,SAAAA,CAAAA,SAA1B,CAAD,CAAR,CACD,CAED,MAAO,KAAP,CACD,CArDD,CAuDA,cAAetB,UAAS,CAACiB,IAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]},"metadata":{},"sourceType":"module"}