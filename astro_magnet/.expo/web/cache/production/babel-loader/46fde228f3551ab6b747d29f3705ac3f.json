{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var PhoneMultiFactorGenerator=function(){function PhoneMultiFactorGenerator(){_classCallCheck(this,PhoneMultiFactorGenerator);throw new Error('`new PhoneMultiFactorGenerator()` is not supported on the native Firebase SDKs.');}_createClass(PhoneMultiFactorGenerator,null,[{key:\"assertion\",value:function assertion(credential){var token=credential.token,secret=credential.secret;return{token:token,secret:secret};}}]);return PhoneMultiFactorGenerator;}();PhoneMultiFactorGenerator.FACTOR_ID='phone';export{PhoneMultiFactorGenerator as default};","map":{"version":3,"names":["PhoneMultiFactorGenerator","Error","credential","token","secret","FACTOR_ID"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/auth/lib/PhoneMultiFactorGenerator.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class PhoneMultiFactorGenerator {\n  static FACTOR_ID = 'phone';\n\n  constructor() {\n    throw new Error(\n      '`new PhoneMultiFactorGenerator()` is not supported on the native Firebase SDKs.',\n    );\n  }\n\n  static assertion(credential) {\n    // There is no logic here, we mainly do this for API compatibility\n    // (following the Web API).\n    const { token, secret } = credential;\n    return { token, secret };\n  }\n}\n"],"mappings":"mIAiBqBA,0BAAyB,YAG5C,oCAAc,iDACZ,KAAM,IAAIC,MAAK,CACb,iFAAiF,CAClF,CACH,CAAC,oEAED,mBAAiBC,UAAU,CAAE,CAG3B,GAAQC,MAAK,CAAaD,UAAU,CAA5BC,KAAK,CAAEC,MAAM,CAAKF,UAAU,CAArBE,MAAM,CACrB,MAAO,CAAED,KAAK,CAALA,KAAK,CAAEC,MAAM,CAANA,MAAO,CAAC,CAC1B,CAAC,yCAdkBJ,yBAAyB,CACrCK,SAAS,CAAG,OAAO,QADPL,yBAAyB"},"metadata":{},"sourceType":"module"}