{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import Appearance from\"react-native-web/dist/exports/Appearance\";import{ThemeProvider}from\"./theming\";import{Provider as SettingsProvider}from\"./settings\";import MaterialCommunityIcon from\"../components/MaterialCommunityIcon\";import PortalHost from\"../components/Portal/PortalHost\";import DefaultTheme from\"../styles/DefaultTheme\";import DarkTheme from\"../styles/DarkTheme\";import{addEventListener}from\"../utils/addEventListener\";var Provider=function Provider(_ref){var props=Object.assign({},(_objectDestructuringEmpty(_ref),_ref));var colorSchemeName=!props.theme&&(Appearance===null||Appearance===void 0?void 0:Appearance.getColorScheme())||'light';var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),reduceMotionEnabled=_React$useState2[0],setReduceMotionEnabled=_React$useState2[1];var _React$useState3=React.useState(colorSchemeName),_React$useState4=_slicedToArray(_React$useState3,2),colorScheme=_React$useState4[0],setColorScheme=_React$useState4[1];var handleAppearanceChange=function handleAppearanceChange(preferences){var colorScheme=preferences.colorScheme;setColorScheme(colorScheme);};React.useEffect(function(){var subscription;if(!props.theme){subscription=addEventListener(AccessibilityInfo,'reduceMotionChanged',setReduceMotionEnabled);}return function(){if(!props.theme){var _subscription;(_subscription=subscription)===null||_subscription===void 0?void 0:_subscription.remove();}};},[props.theme]);React.useEffect(function(){var appearanceSubscription;if(!props.theme){appearanceSubscription=Appearance===null||Appearance===void 0?void 0:Appearance.addChangeListener(handleAppearanceChange);}return function(){if(!props.theme){if(appearanceSubscription){appearanceSubscription.remove();}else{Appearance===null||Appearance===void 0?void 0:Appearance.removeChangeListener(handleAppearanceChange);}}};},[props.theme]);var getTheme=function getTheme(){var providedTheme=props.theme;if(providedTheme){return providedTheme;}else{var theme=colorScheme==='dark'?DarkTheme:DefaultTheme;return _objectSpread(_objectSpread({},theme),{},{animation:_objectSpread(_objectSpread({},theme.animation),{},{scale:reduceMotionEnabled?0:1})});}};var children=props.children,settings=props.settings;return React.createElement(PortalHost,null,React.createElement(SettingsProvider,{value:settings||{icon:MaterialCommunityIcon}},React.createElement(ThemeProvider,{theme:getTheme()},children)));};export default Provider;","map":{"version":3,"sources":["Provider.tsx"],"names":["React","ThemeProvider","Provider","SettingsProvider","MaterialCommunityIcon","PortalHost","DefaultTheme","DarkTheme","addEventListener","props","colorSchemeName","theme","Appearance","getColorScheme","reduceMotionEnabled","setReduceMotionEnabled","useState","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","animation","scale","children","settings","icon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}