{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isArray,isNull,isObject,isString,isUndefined}from'@react-native-firebase/app/lib/common';import NativeError from'@react-native-firebase/app/lib/internal/NativeFirebaseError';import FirestoreDocumentSnapshot from\"./FirestoreDocumentSnapshot\";import FirestoreFieldPath,{fromDotSeparatedString}from\"./FirestoreFieldPath\";import FirestoreQuerySnapshot from\"./FirestoreQuerySnapshot\";import{FirestoreAggregateQuery}from\"./FirestoreAggregate\";import{parseSnapshotArgs}from\"./utils\";var _id=0;var FirestoreQuery=function(){function FirestoreQuery(firestore,collectionPath,modifiers,queryName){_classCallCheck(this,FirestoreQuery);this._firestore=firestore;this._collectionPath=collectionPath;this._modifiers=modifiers;this._queryName=queryName;}_createClass(FirestoreQuery,[{key:\"firestore\",get:function get(){return this._firestore;}},{key:\"_handleQueryCursor\",value:function _handleQueryCursor(cursor,docOrField,fields){var modifiers=this._modifiers._copy();if(isUndefined(docOrField)){throw new Error(\"firebase.firestore().collection().\"+cursor+\"(*) Expected a DocumentSnapshot or list of field values but got undefined.\");}if(docOrField instanceof FirestoreDocumentSnapshot){if(fields.length>0){throw new Error(\"firebase.firestore().collection().\"+cursor+\"(*) Too many arguments provided. Expected DocumentSnapshot or list of field values.\");}var documentSnapshot=docOrField;if(!documentSnapshot.exists){throw new Error(\"firebase.firestore().collection().\"+cursor+\"(*) Can't use a DocumentSnapshot that doesn't exist.\");}var currentOrders=modifiers.orders;var values=[];for(var i=0;i<currentOrders.length;i++){var order=currentOrders[i];if(order.fieldPath==='__name__'){continue;}var value=documentSnapshot.get(order.fieldPath);if(value===undefined){throw new Error(\"firebase.firestore().collection().\"+cursor+\"(*) You are trying to start or end a query using a document for which the field '\"+order.fieldPath+\"' (used as the orderBy) does not exist.\");}values.push(value);}if(modifiers._orders.length){var lastOrder=modifiers._orders[modifiers._orders.length-1];if(lastOrder.fieldPath!=='__name__'){modifiers._orders.push({fieldPath:'__name__',direction:lastOrder.direction});}}else{modifiers._orders.push({fieldPath:'__name__',direction:'ASCENDING'});}if(this._modifiers.isCollectionGroupQuery()){values.push(documentSnapshot.ref.path);}else{values.push(documentSnapshot.id);}return modifiers.setFieldsCursor(cursor,values);}var allFields=[docOrField].concat(fields);if(allFields.length>modifiers.orders.length){throw new Error(\"firebase.firestore().collection().\"+cursor+\"(*) Too many arguments provided. The number of arguments must be less than or equal to the number of orderBy() clauses.\");}return modifiers.setFieldsCursor(cursor,allFields);}},{key:\"count\",value:function count(){return new FirestoreAggregateQuery(this._firestore,this,this._collectionPath,this._modifiers);}},{key:\"countFromServer\",value:function countFromServer(){return this.count();}},{key:\"endAt\",value:function endAt(docOrField){for(var _len=arguments.length,fields=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){fields[_key-1]=arguments[_key];}return new FirestoreQuery(this._firestore,this._collectionPath,this._handleQueryCursor('endAt',docOrField,fields),this._queryName);}},{key:\"endBefore\",value:function endBefore(docOrField){for(var _len2=arguments.length,fields=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){fields[_key2-1]=arguments[_key2];}return new FirestoreQuery(this._firestore,this._collectionPath,this._handleQueryCursor('endBefore',docOrField,fields),this._queryName);}},{key:\"get\",value:function get(options){var _this=this;if(!isUndefined(options)&&!isObject(options)){throw new Error(\"firebase.firestore().collection().get(*) 'options' must be an object is provided.\");}if(options&&options.source&&options.source!=='default'&&options.source!=='server'&&options.source!=='cache'){throw new Error(\"firebase.firestore().collection().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\");}if(!isUndefined(this._queryName)){return this._firestore.native.namedQueryGet(this._queryName,this._modifiers.type,this._modifiers.filters,this._modifiers.orders,this._modifiers.options,options).then(function(data){return new FirestoreQuerySnapshot(_this._firestore,_this,data);});}this._modifiers.validatelimitToLast();return this._firestore.native.collectionGet(this._collectionPath.relativeName,this._modifiers.type,this._modifiers.filters,this._modifiers.orders,this._modifiers.options,options).then(function(data){return new FirestoreQuerySnapshot(_this._firestore,_this,data);});}},{key:\"isEqual\",value:function isEqual(other){if(!(other instanceof FirestoreQuery)){throw new Error(\"firebase.firestore().collection().isEqual(*) 'other' expected a Query instance.\");}if(this.firestore.app.name!==other.firestore.app.name||this._modifiers.type!==other._modifiers.type||this._modifiers.filters.length!==other._modifiers.filters.length||this._modifiers.orders.length!==other._modifiers.orders.length||this._collectionPath.relativeName!==other._collectionPath.relativeName||Object.keys(this._modifiers.options).length!==Object.keys(other._modifiers.options).length){return false;}if(JSON.stringify(this._modifiers.filters)!==JSON.stringify(other._modifiers.filters)||JSON.stringify(this._modifiers.orders)!==JSON.stringify(other._modifiers.orders)||JSON.stringify(this._modifiers.options)!==JSON.stringify(other._modifiers.options)){return false;}return true;}},{key:\"limit\",value:function limit(_limit){if(this._modifiers.isValidLimit(_limit)){throw new Error(\"firebase.firestore().collection().limit(*) 'limit' must be a positive integer value.\");}var modifiers=this._modifiers._copy().limit(_limit);return new FirestoreQuery(this._firestore,this._collectionPath,modifiers,this._queryName);}},{key:\"limitToLast\",value:function limitToLast(_limitToLast){if(this._modifiers.isValidLimitToLast(_limitToLast)){throw new Error(\"firebase.firestore().collection().limitToLast(*) 'limitToLast' must be a positive integer value.\");}var modifiers=this._modifiers._copy().limitToLast(_limitToLast);return new FirestoreQuery(this._firestore,this._collectionPath,modifiers,this._queryName);}},{key:\"onSnapshot\",value:function onSnapshot(){var _this2=this;var snapshotListenOptions;var callback;var onNext;var onError;this._modifiers.validatelimitToLast();try{for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}var options=parseSnapshotArgs(args);snapshotListenOptions=options.snapshotListenOptions;callback=options.callback;onNext=options.onNext;onError=options.onError;}catch(e){throw new Error(\"firebase.firestore().collection().onSnapshot(*) \"+e.message);}function handleSuccess(querySnapshot){callback(querySnapshot,null);onNext(querySnapshot);}function handleError(error){callback(null,error);onError(error);}var listenerId=_id++;var onSnapshotSubscription=this._firestore.emitter.addListener(this._firestore.eventNameForApp(\"firestore_collection_sync_event:\"+listenerId),function(event){if(event.body.error){handleError(NativeError.fromEvent(event.body.error,'firestore'));}else{var querySnapshot=new FirestoreQuerySnapshot(_this2._firestore,_this2,event.body.snapshot);handleSuccess(querySnapshot);}});var unsubscribe=function unsubscribe(){onSnapshotSubscription.remove();_this2._firestore.native.collectionOffSnapshot(listenerId);};if(!isUndefined(this._queryName)){this._firestore.native.namedQueryOnSnapshot(this._queryName,this._modifiers.type,this._modifiers.filters,this._modifiers.orders,this._modifiers.options,listenerId,snapshotListenOptions);}else{this._firestore.native.collectionOnSnapshot(this._collectionPath.relativeName,this._modifiers.type,this._modifiers.filters,this._modifiers.orders,this._modifiers.options,listenerId,snapshotListenOptions);}return unsubscribe;}},{key:\"orderBy\",value:function orderBy(fieldPath,directionStr){if(!isString(fieldPath)&&!(fieldPath instanceof FirestoreFieldPath)){throw new Error(\"firebase.firestore().collection().orderBy(*) 'fieldPath' must be a string or instance of FieldPath.\");}var path;if(isString(fieldPath)){try{path=fromDotSeparatedString(fieldPath);}catch(e){throw new Error(\"firebase.firestore().collection().orderBy(*) 'fieldPath' \"+e.message+\".\");}}else{path=fieldPath;}if(!isUndefined(directionStr)&&!this._modifiers.isValidDirection(directionStr)){throw new Error(\"firebase.firestore().collection().orderBy(_, *) 'directionStr' must be one of 'asc' or 'desc'.\");}if(this._modifiers.hasStart()){throw new Error('firebase.firestore().collection().orderBy() Invalid query. You must not call startAt() or startAfter() before calling orderBy().');}if(this._modifiers.hasEnd()){throw new Error('firebase.firestore().collection().orderBy() Invalid query. You must not call endAt() or endBefore() before calling orderBy().');}var modifiers=this._modifiers._copy().orderBy(path,directionStr);try{modifiers.validateOrderBy();}catch(e){throw new Error(\"firebase.firestore().collection().orderBy() \"+e.message);}return new FirestoreQuery(this._firestore,this._collectionPath,modifiers,this._queryName);}},{key:\"startAfter\",value:function startAfter(docOrField){for(var _len4=arguments.length,fields=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++){fields[_key4-1]=arguments[_key4];}return new FirestoreQuery(this._firestore,this._collectionPath,this._handleQueryCursor('startAfter',docOrField,fields),this._queryName);}},{key:\"startAt\",value:function startAt(docOrField){for(var _len5=arguments.length,fields=new Array(_len5>1?_len5-1:0),_key5=1;_key5<_len5;_key5++){fields[_key5-1]=arguments[_key5];}return new FirestoreQuery(this._firestore,this._collectionPath,this._handleQueryCursor('startAt',docOrField,fields),this._queryName);}},{key:\"where\",value:function where(fieldPath,opStr,value){if(!isString(fieldPath)&&!(fieldPath instanceof FirestoreFieldPath)){throw new Error(\"firebase.firestore().collection().where(*) 'fieldPath' must be a string or instance of FieldPath.\");}var path;if(isString(fieldPath)){try{path=fromDotSeparatedString(fieldPath);}catch(e){throw new Error(\"firebase.firestore().collection().where(*) 'fieldPath' \"+e.message+\".\");}}else{path=fieldPath;}if(!this._modifiers.isValidOperator(opStr)){throw new Error(\"firebase.firestore().collection().where(_, *) 'opStr' is invalid. Expected one of '==', '>', '>=', '<', '<=', '!=', 'array-contains', 'not-in', 'array-contains-any' or 'in'.\");}if(isUndefined(value)){throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' argument expected.\");}if(isNull(value)&&!this._modifiers.isEqualOperator(opStr)){throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. You can only perform equals comparisons on null\");}if(this._modifiers.isInOperator(opStr)){if(!isArray(value)||!value.length){throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. A non-empty array is required for '\"+opStr+\"' filters.\");}if(value.length>10){throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. '\"+opStr+\"' filters support a maximum of 10 elements in the value array.\");}}var modifiers=this._modifiers._copy().where(path,opStr,value);try{modifiers.validateWhere();}catch(e){throw new Error(\"firebase.firestore().collection().where() \"+e.message);}return new FirestoreQuery(this._firestore,this._collectionPath,modifiers,this._queryName);}}]);return FirestoreQuery;}();export{FirestoreQuery as default};","map":{"version":3,"names":["isArray","isNull","isObject","isString","isUndefined","NativeError","FirestoreDocumentSnapshot","FirestoreFieldPath","fromDotSeparatedString","FirestoreQuerySnapshot","FirestoreAggregateQuery","parseSnapshotArgs","_id","FirestoreQuery","firestore","collectionPath","modifiers","queryName","_firestore","_collectionPath","_modifiers","_queryName","cursor","docOrField","fields","_copy","Error","length","documentSnapshot","exists","currentOrders","orders","values","i","order","fieldPath","value","get","undefined","push","_orders","lastOrder","direction","isCollectionGroupQuery","ref","path","id","setFieldsCursor","allFields","concat","count","_handleQueryCursor","options","source","native","namedQueryGet","type","filters","then","data","validatelimitToLast","collectionGet","relativeName","other","app","name","Object","keys","JSON","stringify","limit","isValidLimit","limitToLast","isValidLimitToLast","snapshotListenOptions","callback","onNext","onError","args","e","message","handleSuccess","querySnapshot","handleError","error","listenerId","onSnapshotSubscription","emitter","addListener","eventNameForApp","event","body","fromEvent","snapshot","unsubscribe","remove","collectionOffSnapshot","namedQueryOnSnapshot","collectionOnSnapshot","directionStr","isValidDirection","hasStart","hasEnd","orderBy","validateOrderBy","opStr","isValidOperator","isEqualOperator","isInOperator","where","validateWhere"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreQuery.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isArray,\n  isNull,\n  isObject,\n  isString,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\nimport FirestoreFieldPath, { fromDotSeparatedString } from './FirestoreFieldPath';\nimport FirestoreQuerySnapshot from './FirestoreQuerySnapshot';\nimport { FirestoreAggregateQuery } from './FirestoreAggregate';\nimport { parseSnapshotArgs } from './utils';\n\nlet _id = 0;\n\nexport default class FirestoreQuery {\n  constructor(firestore, collectionPath, modifiers, queryName) {\n    this._firestore = firestore;\n    this._collectionPath = collectionPath;\n    this._modifiers = modifiers;\n    this._queryName = queryName;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  _handleQueryCursor(cursor, docOrField, fields) {\n    const modifiers = this._modifiers._copy();\n\n    if (isUndefined(docOrField)) {\n      throw new Error(\n        `firebase.firestore().collection().${cursor}(*) Expected a DocumentSnapshot or list of field values but got undefined.`,\n      );\n    }\n\n    // Handles cases where the first arg is a DocumentSnapshot\n    if (docOrField instanceof FirestoreDocumentSnapshot) {\n      if (fields.length > 0) {\n        throw new Error(\n          `firebase.firestore().collection().${cursor}(*) Too many arguments provided. Expected DocumentSnapshot or list of field values.`,\n        );\n      }\n\n      const documentSnapshot = docOrField;\n\n      if (!documentSnapshot.exists) {\n        throw new Error(\n          `firebase.firestore().collection().${cursor}(*) Can't use a DocumentSnapshot that doesn't exist.`,\n        );\n      }\n\n      const currentOrders = modifiers.orders;\n\n      const values = [];\n\n      for (let i = 0; i < currentOrders.length; i++) {\n        const order = currentOrders[i];\n        //skip if fieldPath is '__name__'\n        if (order.fieldPath === '__name__') {\n          continue;\n        }\n\n        const value = documentSnapshot.get(order.fieldPath);\n\n        if (value === undefined) {\n          throw new Error(\n            `firebase.firestore().collection().${cursor}(*) You are trying to start or end a query using a document for which the field '${order.fieldPath}' (used as the orderBy) does not exist.`,\n          );\n        }\n\n        values.push(value);\n      }\n\n      // Based on https://github.com/invertase/react-native-firebase/issues/2854#issuecomment-552986650\n      if (modifiers._orders.length) {\n        const lastOrder = modifiers._orders[modifiers._orders.length - 1];\n        //push '__name__' field only if not present already\n        if (lastOrder.fieldPath !== '__name__') {\n          modifiers._orders.push({\n            fieldPath: '__name__',\n            direction: lastOrder.direction,\n          });\n        }\n      } else {\n        modifiers._orders.push({\n          fieldPath: '__name__',\n          direction: 'ASCENDING',\n        });\n      }\n\n      if (this._modifiers.isCollectionGroupQuery()) {\n        values.push(documentSnapshot.ref.path);\n      } else {\n        values.push(documentSnapshot.id);\n      }\n\n      return modifiers.setFieldsCursor(cursor, values);\n    }\n\n    /**\n     * Assumes list of field values to query by. Orders must be of equal length.\n     */\n\n    const allFields = [docOrField].concat(fields);\n\n    if (allFields.length > modifiers.orders.length) {\n      throw new Error(\n        `firebase.firestore().collection().${cursor}(*) Too many arguments provided. The number of arguments must be less than or equal to the number of orderBy() clauses.`,\n      );\n    }\n\n    return modifiers.setFieldsCursor(cursor, allFields);\n  }\n\n  count() {\n    return new FirestoreAggregateQuery(\n      this._firestore,\n      this,\n      this._collectionPath,\n      this._modifiers,\n    );\n  }\n\n  countFromServer() {\n    return this.count();\n  }\n\n  endAt(docOrField, ...fields) {\n    return new FirestoreQuery(\n      this._firestore,\n      this._collectionPath,\n      this._handleQueryCursor('endAt', docOrField, fields),\n      this._queryName,\n    );\n  }\n\n  endBefore(docOrField, ...fields) {\n    return new FirestoreQuery(\n      this._firestore,\n      this._collectionPath,\n      this._handleQueryCursor('endBefore', docOrField, fields),\n      this._queryName,\n    );\n  }\n\n  get(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\n        \"firebase.firestore().collection().get(*) 'options' must be an object is provided.\",\n      );\n    }\n\n    if (\n      options &&\n      options.source &&\n      options.source !== 'default' &&\n      options.source !== 'server' &&\n      options.source !== 'cache'\n    ) {\n      throw new Error(\n        \"firebase.firestore().collection().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\",\n      );\n    }\n\n    if (!isUndefined(this._queryName)) {\n      return this._firestore.native\n        .namedQueryGet(\n          this._queryName,\n          this._modifiers.type,\n          this._modifiers.filters,\n          this._modifiers.orders,\n          this._modifiers.options,\n          options,\n        )\n        .then(data => new FirestoreQuerySnapshot(this._firestore, this, data));\n    }\n\n    this._modifiers.validatelimitToLast();\n\n    return this._firestore.native\n      .collectionGet(\n        this._collectionPath.relativeName,\n        this._modifiers.type,\n        this._modifiers.filters,\n        this._modifiers.orders,\n        this._modifiers.options,\n        options,\n      )\n      .then(data => new FirestoreQuerySnapshot(this._firestore, this, data));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreQuery)) {\n      throw new Error(\n        \"firebase.firestore().collection().isEqual(*) 'other' expected a Query instance.\",\n      );\n    }\n\n    // Carry out lightweight checks first\n    if (\n      this.firestore.app.name !== other.firestore.app.name ||\n      this._modifiers.type !== other._modifiers.type ||\n      this._modifiers.filters.length !== other._modifiers.filters.length ||\n      this._modifiers.orders.length !== other._modifiers.orders.length ||\n      this._collectionPath.relativeName !== other._collectionPath.relativeName ||\n      Object.keys(this._modifiers.options).length !== Object.keys(other._modifiers.options).length\n    ) {\n      return false;\n    }\n\n    // Carry out potentially expensive checks\n    // noinspection RedundantIfStatementJS\n    if (\n      JSON.stringify(this._modifiers.filters) !== JSON.stringify(other._modifiers.filters) ||\n      JSON.stringify(this._modifiers.orders) !== JSON.stringify(other._modifiers.orders) ||\n      JSON.stringify(this._modifiers.options) !== JSON.stringify(other._modifiers.options)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  limit(limit) {\n    if (this._modifiers.isValidLimit(limit)) {\n      throw new Error(\n        \"firebase.firestore().collection().limit(*) 'limit' must be a positive integer value.\",\n      );\n    }\n\n    const modifiers = this._modifiers._copy().limit(limit);\n\n    return new FirestoreQuery(this._firestore, this._collectionPath, modifiers, this._queryName);\n  }\n\n  limitToLast(limitToLast) {\n    if (this._modifiers.isValidLimitToLast(limitToLast)) {\n      throw new Error(\n        \"firebase.firestore().collection().limitToLast(*) 'limitToLast' must be a positive integer value.\",\n      );\n    }\n\n    const modifiers = this._modifiers._copy().limitToLast(limitToLast);\n\n    return new FirestoreQuery(this._firestore, this._collectionPath, modifiers, this._queryName);\n  }\n\n  onSnapshot(...args) {\n    let snapshotListenOptions;\n    let callback;\n    let onNext;\n    let onError;\n\n    this._modifiers.validatelimitToLast();\n\n    try {\n      const options = parseSnapshotArgs(args);\n      snapshotListenOptions = options.snapshotListenOptions;\n      callback = options.callback;\n      onNext = options.onNext;\n      onError = options.onError;\n    } catch (e) {\n      throw new Error(`firebase.firestore().collection().onSnapshot(*) ${e.message}`);\n    }\n\n    function handleSuccess(querySnapshot) {\n      callback(querySnapshot, null);\n      onNext(querySnapshot);\n    }\n\n    function handleError(error) {\n      callback(null, error);\n      onError(error);\n    }\n\n    const listenerId = _id++;\n\n    const onSnapshotSubscription = this._firestore.emitter.addListener(\n      this._firestore.eventNameForApp(`firestore_collection_sync_event:${listenerId}`),\n      event => {\n        if (event.body.error) {\n          handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n        } else {\n          const querySnapshot = new FirestoreQuerySnapshot(\n            this._firestore,\n            this,\n            event.body.snapshot,\n          );\n          handleSuccess(querySnapshot);\n        }\n      },\n    );\n\n    const unsubscribe = () => {\n      onSnapshotSubscription.remove();\n      this._firestore.native.collectionOffSnapshot(listenerId);\n    };\n\n    if (!isUndefined(this._queryName)) {\n      this._firestore.native.namedQueryOnSnapshot(\n        this._queryName,\n        this._modifiers.type,\n        this._modifiers.filters,\n        this._modifiers.orders,\n        this._modifiers.options,\n        listenerId,\n        snapshotListenOptions,\n      );\n    } else {\n      this._firestore.native.collectionOnSnapshot(\n        this._collectionPath.relativeName,\n        this._modifiers.type,\n        this._modifiers.filters,\n        this._modifiers.orders,\n        this._modifiers.options,\n        listenerId,\n        snapshotListenOptions,\n      );\n    }\n\n    return unsubscribe;\n  }\n\n  orderBy(fieldPath, directionStr) {\n    if (!isString(fieldPath) && !(fieldPath instanceof FirestoreFieldPath)) {\n      throw new Error(\n        \"firebase.firestore().collection().orderBy(*) 'fieldPath' must be a string or instance of FieldPath.\",\n      );\n    }\n\n    let path;\n\n    if (isString(fieldPath)) {\n      try {\n        path = fromDotSeparatedString(fieldPath);\n      } catch (e) {\n        throw new Error(`firebase.firestore().collection().orderBy(*) 'fieldPath' ${e.message}.`);\n      }\n    } else {\n      path = fieldPath;\n    }\n\n    if (!isUndefined(directionStr) && !this._modifiers.isValidDirection(directionStr)) {\n      throw new Error(\n        \"firebase.firestore().collection().orderBy(_, *) 'directionStr' must be one of 'asc' or 'desc'.\",\n      );\n    }\n\n    if (this._modifiers.hasStart()) {\n      throw new Error(\n        'firebase.firestore().collection().orderBy() Invalid query. You must not call startAt() or startAfter() before calling orderBy().',\n      );\n    }\n\n    if (this._modifiers.hasEnd()) {\n      throw new Error(\n        'firebase.firestore().collection().orderBy() Invalid query. You must not call endAt() or endBefore() before calling orderBy().',\n      );\n    }\n\n    const modifiers = this._modifiers._copy().orderBy(path, directionStr);\n\n    try {\n      modifiers.validateOrderBy();\n    } catch (e) {\n      throw new Error(`firebase.firestore().collection().orderBy() ${e.message}`);\n    }\n\n    return new FirestoreQuery(this._firestore, this._collectionPath, modifiers, this._queryName);\n  }\n\n  startAfter(docOrField, ...fields) {\n    return new FirestoreQuery(\n      this._firestore,\n      this._collectionPath,\n      this._handleQueryCursor('startAfter', docOrField, fields),\n      this._queryName,\n    );\n  }\n\n  startAt(docOrField, ...fields) {\n    return new FirestoreQuery(\n      this._firestore,\n      this._collectionPath,\n      this._handleQueryCursor('startAt', docOrField, fields),\n      this._queryName,\n    );\n  }\n\n  where(fieldPath, opStr, value) {\n    if (!isString(fieldPath) && !(fieldPath instanceof FirestoreFieldPath)) {\n      throw new Error(\n        \"firebase.firestore().collection().where(*) 'fieldPath' must be a string or instance of FieldPath.\",\n      );\n    }\n\n    let path;\n\n    if (isString(fieldPath)) {\n      try {\n        path = fromDotSeparatedString(fieldPath);\n      } catch (e) {\n        throw new Error(`firebase.firestore().collection().where(*) 'fieldPath' ${e.message}.`);\n      }\n    } else {\n      path = fieldPath;\n    }\n\n    if (!this._modifiers.isValidOperator(opStr)) {\n      throw new Error(\n        \"firebase.firestore().collection().where(_, *) 'opStr' is invalid. Expected one of '==', '>', '>=', '<', '<=', '!=', 'array-contains', 'not-in', 'array-contains-any' or 'in'.\",\n      );\n    }\n\n    if (isUndefined(value)) {\n      throw new Error(\n        \"firebase.firestore().collection().where(_, _, *) 'value' argument expected.\",\n      );\n    }\n\n    if (isNull(value) && !this._modifiers.isEqualOperator(opStr)) {\n      throw new Error(\n        \"firebase.firestore().collection().where(_, _, *) 'value' is invalid. You can only perform equals comparisons on null\",\n      );\n    }\n\n    if (this._modifiers.isInOperator(opStr)) {\n      if (!isArray(value) || !value.length) {\n        throw new Error(\n          `firebase.firestore().collection().where(_, _, *) 'value' is invalid. A non-empty array is required for '${opStr}' filters.`,\n        );\n      }\n\n      if (value.length > 10) {\n        throw new Error(\n          `firebase.firestore().collection().where(_, _, *) 'value' is invalid. '${opStr}' filters support a maximum of 10 elements in the value array.`,\n        );\n      }\n    }\n\n    const modifiers = this._modifiers._copy().where(path, opStr, value);\n\n    try {\n      modifiers.validateWhere();\n    } catch (e) {\n      throw new Error(`firebase.firestore().collection().where() ${e.message}`);\n    }\n\n    return new FirestoreQuery(this._firestore, this._collectionPath, modifiers, this._queryName);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}