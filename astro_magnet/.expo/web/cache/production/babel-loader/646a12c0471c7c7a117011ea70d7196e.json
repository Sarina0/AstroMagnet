{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isFinite,isNumber,isUndefined}from'@react-native-firebase/app/lib/common';var FirestoreGeoPoint=function(){function FirestoreGeoPoint(latitude,longitude){_classCallCheck(this,FirestoreGeoPoint);if(isUndefined(latitude)||isUndefined(longitude)){throw new Error('firebase.firestore.GeoPoint constructor expected latitude and longitude values.');}if(!isNumber(latitude)){throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");}if(!isNumber(longitude)){throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");}if(!isFinite(latitude)||latitude<-90||latitude>90){throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: \"+latitude+\".\");}if(!isFinite(longitude)||longitude<-180||longitude>180){throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: \"+longitude+\".\");}this._latitude=latitude;this._longitude=longitude;}_createClass(FirestoreGeoPoint,[{key:\"latitude\",get:function get(){return this._latitude;}},{key:\"longitude\",get:function get(){return this._longitude;}},{key:\"isEqual\",value:function isEqual(other){if(!(other instanceof FirestoreGeoPoint)){throw new Error(\"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\");}return this._latitude===other._latitude&&this._longitude===other._longitude;}},{key:\"toJSON\",value:function toJSON(){return{latitude:this._latitude,longitude:this._longitude};}}]);return FirestoreGeoPoint;}();export{FirestoreGeoPoint as default};","map":{"version":3,"names":["isFinite","isNumber","isUndefined","FirestoreGeoPoint","latitude","longitude","Error","_latitude","_longitude","other"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreGeoPoint.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error(\n        'firebase.firestore.GeoPoint constructor expected latitude and longitude values.',\n      );\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`,\n      );\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`,\n      );\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\n        \"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\",\n      );\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n\n  toJSON() {\n    return {\n      latitude: this._latitude,\n      longitude: this._longitude,\n    };\n  }\n}\n"],"mappings":"gIAiBA,OAASA,QAAQ,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,uCAAuC,CAAC,GAEnEC,kBAAiB,YACpC,2BAAYC,QAAQ,CAAEC,SAAS,CAAE,yCAC/B,GAAIH,WAAW,CAACE,QAAQ,CAAC,EAAIF,WAAW,CAACG,SAAS,CAAC,CAAE,CACnD,KAAM,IAAIC,MAAK,CACb,iFAAiF,CAClF,CACH,CAEA,GAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,CAAE,CACvB,KAAM,IAAIE,MAAK,CAAC,gEAAgE,CAAC,CACnF,CAEA,GAAI,CAACL,QAAQ,CAACI,SAAS,CAAC,CAAE,CACxB,KAAM,IAAIC,MAAK,CAAC,iEAAiE,CAAC,CACpF,CAEA,GAAI,CAACN,QAAQ,CAACI,QAAQ,CAAC,EAAIA,QAAQ,CAAG,CAAC,EAAE,EAAIA,QAAQ,CAAG,EAAE,CAAE,CAC1D,KAAM,IAAIE,MAAK,yFAC2EF,QAAQ,KACjG,CACH,CAEA,GAAI,CAACJ,QAAQ,CAACK,SAAS,CAAC,EAAIA,SAAS,CAAG,CAAC,GAAG,EAAIA,SAAS,CAAG,GAAG,CAAE,CAC/D,KAAM,IAAIC,MAAK,4FAC8ED,SAAS,KACrG,CACH,CAEA,IAAI,CAACE,SAAS,CAAGH,QAAQ,CACzB,IAAI,CAACI,UAAU,CAAGH,SAAS,CAC7B,CAAC,oDAED,cAAe,CACb,MAAO,KAAI,CAACE,SAAS,CACvB,CAAC,uBAED,cAAgB,CACd,MAAO,KAAI,CAACC,UAAU,CACxB,CAAC,uBAED,iBAAQC,KAAK,CAAE,CACb,GAAI,EAAEA,KAAK,WAAYN,kBAAiB,CAAC,CAAE,CACzC,KAAM,IAAIG,MAAK,CACb,kFAAkF,CACnF,CACH,CAEA,MAAO,KAAI,CAACC,SAAS,GAAKE,KAAK,CAACF,SAAS,EAAI,IAAI,CAACC,UAAU,GAAKC,KAAK,CAACD,UAAU,CACnF,CAAC,sBAED,iBAAS,CACP,MAAO,CACLJ,QAAQ,CAAE,IAAI,CAACG,SAAS,CACxBF,SAAS,CAAE,IAAI,CAACG,UAClB,CAAC,CACH,CAAC,wCAvDkBL,iBAAiB"},"metadata":{},"sourceType":"module"}