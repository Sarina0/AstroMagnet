{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mode\",\"dense\",\"disabled\",\"error\",\"multiline\",\"editable\",\"render\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import TextInputOutlined from\"./TextInputOutlined\";import TextInputFlat from\"./TextInputFlat\";import TextInputIcon from\"./Adornment/TextInputIcon\";import TextInputAffix from\"./Adornment/TextInputAffix\";import{withTheme}from\"../../core/theming\";var BLUR_ANIMATION_DURATION=180;var FOCUS_ANIMATION_DURATION=150;var TextInput=React.forwardRef(function(_ref,ref){var _ref$mode=_ref.mode,mode=_ref$mode===void 0?'flat':_ref$mode,_ref$dense=_ref.dense,dense=_ref$dense===void 0?false:_ref$dense,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$error=_ref.error,errorProp=_ref$error===void 0?false:_ref$error,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,_ref$editable=_ref.editable,editable=_ref$editable===void 0?true:_ref$editable,_ref$render=_ref.render,render=_ref$render===void 0?function(props){return React.createElement(NativeTextInput,props);}:_ref$render,rest=_objectWithoutProperties(_ref,_excluded);var isControlled=rest.value!==undefined;var validInputValue=isControlled?rest.value:rest.defaultValue;var _React$useRef=React.useRef(new Animated.Value(validInputValue?0:1)),labeled=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(errorProp?1:0)),error=_React$useRef2.current;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),focused=_React$useState2[0],setFocused=_React$useState2[1];var _React$useState3=React.useState(' '),_React$useState4=_slicedToArray(_React$useState3,2),placeholder=_React$useState4[0],setPlaceholder=_React$useState4[1];var _React$useState5=React.useState(validInputValue),_React$useState6=_slicedToArray(_React$useState5,2),uncontrolledValue=_React$useState6[0],setUncontrolledValue=_React$useState6[1];var value=isControlled?rest.value:uncontrolledValue;var _React$useState7=React.useState({measured:false,width:0,height:0}),_React$useState8=_slicedToArray(_React$useState7,2),labelLayout=_React$useState8[0],setLabelLayout=_React$useState8[1];var _React$useState9=React.useState({width:null,height:null}),_React$useState10=_slicedToArray(_React$useState9,2),leftLayout=_React$useState10[0],setLeftLayout=_React$useState10[1];var _React$useState11=React.useState({width:null,height:null}),_React$useState12=_slicedToArray(_React$useState11,2),rightLayout=_React$useState12[0],setRightLayout=_React$useState12[1];var timer=React.useRef();var root=React.useRef();var scale=rest.theme.animation.scale;React.useImperativeHandle(ref,function(){return{focus:function focus(){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.focus();},clear:function clear(){var _root$current2;return(_root$current2=root.current)===null||_root$current2===void 0?void 0:_root$current2.clear();},setNativeProps:function setNativeProps(args){var _root$current3;return(_root$current3=root.current)===null||_root$current3===void 0?void 0:_root$current3.setNativeProps(args);},isFocused:function isFocused(){var _root$current4;return((_root$current4=root.current)===null||_root$current4===void 0?void 0:_root$current4.isFocused())||false;},blur:function blur(){var _root$current5;return(_root$current5=root.current)===null||_root$current5===void 0?void 0:_root$current5.blur();},forceFocus:function forceFocus(){var _root$current6;return(_root$current6=root.current)===null||_root$current6===void 0?void 0:_root$current6.focus();}};});React.useEffect(function(){if(errorProp){Animated.timing(error,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(error,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[errorProp,scale,error]);React.useEffect(function(){if(focused||!rest.label){timer.current=setTimeout(function(){return setPlaceholder(rest.placeholder);},50);}else{setPlaceholder(' ');}return function(){if(timer.current){clearTimeout(timer.current);}};},[focused,rest.label,rest.placeholder]);React.useEffect(function(){if(value||focused){Animated.timing(labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[focused,value,labeled,scale]);var onLeftAffixLayoutChange=function onLeftAffixLayoutChange(event){setLeftLayout({height:event.nativeEvent.layout.height,width:event.nativeEvent.layout.width});};var onRightAffixLayoutChange=function onRightAffixLayoutChange(event){setRightLayout({width:event.nativeEvent.layout.width,height:event.nativeEvent.layout.height});};var handleFocus=function handleFocus(args){var _rest$onFocus;if(disabled||!editable){return;}setFocused(true);(_rest$onFocus=rest.onFocus)===null||_rest$onFocus===void 0?void 0:_rest$onFocus.call(rest,args);};var handleBlur=function handleBlur(args){var _rest$onBlur;if(!editable){return;}setFocused(false);(_rest$onBlur=rest.onBlur)===null||_rest$onBlur===void 0?void 0:_rest$onBlur.call(rest,args);};var handleChangeText=function handleChangeText(value){var _rest$onChangeText;if(!editable||disabled){return;}if(!isControlled){setUncontrolledValue(value);}(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,value);};var handleLayoutAnimatedText=function handleLayoutAnimatedText(e){setLabelLayout({width:e.nativeEvent.layout.width,height:e.nativeEvent.layout.height,measured:true});};var forceFocus=function forceFocus(){var _root$current7;return(_root$current7=root.current)===null||_root$current7===void 0?void 0:_root$current7.focus();};var _rest$maxFontSizeMult=rest.maxFontSizeMultiplier,maxFontSizeMultiplier=_rest$maxFontSizeMult===void 0?1.5:_rest$maxFontSizeMult;if(mode==='outlined'){return React.createElement(TextInputOutlined,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));}return React.createElement(TextInputFlat,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));});TextInput.Icon=TextInputIcon;TextInput.Affix=TextInputAffix;export default withTheme(TextInput);","map":{"version":3,"sources":["TextInput.tsx"],"names":["React","TextInputOutlined","TextInputFlat","TextInputIcon","TextInputAffix","withTheme","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","forwardRef","mode","dense","disabled","error","errorProp","multiline","editable","render","props","rest","ref","isControlled","value","undefined","validInputValue","defaultValue","current","labeled","useRef","Animated","Value","focused","setFocused","useState","placeholder","setPlaceholder","uncontrolledValue","setUncontrolledValue","labelLayout","setLabelLayout","measured","width","height","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","clear","setNativeProps","args","isFocused","blur","forceFocus","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","onFocus","handleBlur","onBlur","handleChangeText","onChangeText","handleLayoutAnimatedText","e","maxFontSizeMultiplier","Icon","Affix"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextInput as NativeTextInput,\n  LayoutChangeEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TextInputOutlined from './TextInputOutlined';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport { withTheme } from '../../core/theming';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ' '\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // Set the placeholder in a delay to offset the label animation\n        // If we show it immediately, they'll overlap and look ugly\n        timer.current = setTimeout(\n          () => setPlaceholder(rest.placeholder),\n          50\n        ) as unknown as NodeJS.Timeout;\n      } else {\n        // hidePlaceholder\n\n        // Issue: https://github.com/callstack/react-native-paper/issues/3138\n        // Description:   Changing the placeholder text value dynamically,\n        //                within multiline input on iOS, doesn't work properly –\n        //                the placeholder is not displayed initially.\n        // Root cause:    Placeholder initial value, which has length 0.\n        // More context:  The issue was also reproduced in react-native, using its own TextInput.\n        // Workaround:    Set an empty space character in the default value.\n        setPlaceholder(' ');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withTheme(TextInput);\n"]},"metadata":{},"sourceType":"module"}