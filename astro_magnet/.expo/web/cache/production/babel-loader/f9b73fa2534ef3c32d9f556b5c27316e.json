{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import{NativeWindStyleSheet as _NativeWindStyleSheet}from\"nativewind\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{NavigationContainer,DefaultTheme}from'@react-navigation/native';import{MaterialCommunityIcons}from'@expo/vector-icons';import ChatScreen from\"./chat\";import ProfileScreen from\"../screens/profile\";import{createMaterialBottomTabNavigator}from'@react-navigation/material-bottom-tabs';import{ColorPalette}from\"../../theme/colors\";import{colorWithOpacity}from\"../../shared/actions/colors\";import{useState}from\"react\";import LikedScreen from\"../screens/home/LikedScreen\";import LookingScreen from\"../screens/home/LookingScreen\";import{MenuContext}from\"../../context/menu\";import{SafeAreaProvider}from'react-native-safe-area-context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tab=createMaterialBottomTabNavigator();var tabTheme=_objectSpread(_objectSpread({},DefaultTheme),{},{colors:_objectSpread(_objectSpread({},DefaultTheme.colors),{},{background:\"transparent\"})});export default function MainNavigation(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isMenuVisible=_useState2[0],setMenuVisible=_useState2[1];return _jsx(MenuContext.Provider,{value:{isMenuVisible:isMenuVisible,setMenuVisible:setMenuVisible},children:_jsx(SafeAreaProvider,{children:_jsx(NavigationContainer,{theme:tabTheme,children:_jsxs(Tab.Navigator,{initialRouteName:\"Search\",activeColor:ColorPalette.SOFT_MAGENTA,inactiveColor:colorWithOpacity(ColorPalette.SOFT_MAGENTA,95),barStyle:navStyle(isMenuVisible),shifting:true,children:[_jsx(Tab.Screen,{name:\"Chat\",options:{tabBarLabel:'Chat',tabBarIcon:function tabBarIcon(_ref){var color=_ref.color;return _jsx(MaterialCommunityIcons,{name:\"chat\",color:color,size:26});}},component:ChatScreen}),_jsx(Tab.Screen,{name:\"Search\",component:LookingScreen,options:{tabBarLabel:'Search',tabBarIcon:function tabBarIcon(_ref2){var color=_ref2.color;return _jsx(MaterialCommunityIcons,{name:\"magnify\",color:color,size:26});}}}),_jsx(Tab.Screen,{name:\"Like\",options:{tabBarLabel:'Like',tabBarIcon:function tabBarIcon(_ref3){var color=_ref3.color;return _jsx(MaterialCommunityIcons,{name:\"heart\",color:color,size:26});}},children:function children(){return _jsx(LikedScreen,{});}}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen,options:{tabBarLabel:'Profile',tabBarIcon:function tabBarIcon(_ref4){var color=_ref4.color;return _jsx(MaterialCommunityIcons,{name:\"account\",color:color,size:26});}}})]})})})});}var navStyle=function navStyle(isVisible){return{display:isVisible?'flex':'none',borderTopLeftRadius:20,borderTopRightRadius:20,backgroundColor:colorWithOpacity(ColorPalette.DARK_VIOLET_2,80),overflow:\"hidden\"};};_NativeWindStyleSheet.create({styles:{\"flex\":{\"display\":\"flex\"},\"hidden\":{\"display\":\"none\"}}});","map":{"version":3,"names":["NavigationContainer","DefaultTheme","MaterialCommunityIcons","ChatScreen","ProfileScreen","createMaterialBottomTabNavigator","ColorPalette","colorWithOpacity","useState","LikedScreen","LookingScreen","MenuContext","SafeAreaProvider","Tab","tabTheme","colors","background","MainNavigation","isMenuVisible","setMenuVisible","SOFT_MAGENTA","navStyle","tabBarLabel","tabBarIcon","color","isVisible","display","borderTopLeftRadius","borderTopRightRadius","backgroundColor","DARK_VIOLET_2","overflow"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/navigation/main.tsx"],"sourcesContent":["import { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\nimport ChatScreen from '@app/frontend/navigation/chat';\nimport ProfileScreen from '@app/frontend/screens/profile';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\nimport { ColorPalette } from '@app/theme/colors';\nimport { colorWithOpacity } from '@app/shared/actions/colors';\nimport { useState } from \"react\";\nimport { ViewStyle } from 'react-native';\nimport LikedScreen from '../screens/home/LikedScreen';\nimport LookingScreen from '../screens/home/LookingScreen';\nimport { NavigatorScreenParams } from '@react-navigation/native';\nimport { ChatStackParamList } from '@app/frontend/navigation/chat';\nimport { MenuContext } from '@app/context/menu';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport type RootStackParamList = {\n    Chat: NavigatorScreenParams<ChatStackParamList>\n    Profile: undefined;\n    Search: undefined;\n    Like: undefined;\n}\n\nconst Tab = createMaterialBottomTabNavigator<RootStackParamList>();\nconst tabTheme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        background: \"transparent\"\n    }\n}\n\nexport default function MainNavigation() {\n    const [isMenuVisible, setMenuVisible] = useState(true);\n\n    return (\n        <MenuContext.Provider value={{isMenuVisible, setMenuVisible}}>\n            <SafeAreaProvider>\n                <NavigationContainer theme={tabTheme}>\n                        <Tab.Navigator\n                            initialRouteName=\"Search\"\n                            activeColor={ ColorPalette.SOFT_MAGENTA }\n                            inactiveColor={ colorWithOpacity(ColorPalette.SOFT_MAGENTA, 95) }\n                            barStyle={navStyle(isMenuVisible)}\n                            shifting\n                        >\n                            <Tab.Screen\n                                name=\"Chat\"\n                                options = {{\n                                    tabBarLabel: 'Chat',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"chat\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                                component={ChatScreen}\n                            />\n                            <Tab.Screen\n                                name=\"Search\"\n                                component={LookingScreen}\n                                options = {{\n                                    tabBarLabel: 'Search',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"magnify\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                            />\n                            <Tab.Screen\n                                name=\"Like\"\n                                options = {{\n                                    tabBarLabel: 'Like',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"heart\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                                children={\n                                    () => <LikedScreen />\n                                }\n                            />\n                            <Tab.Screen\n                                name=\"Profile\"\n                                component={ProfileScreen}\n                                options = {{\n                                    tabBarLabel: 'Profile',\n                                    tabBarIcon: ({ color }) => (\n                                        <MaterialCommunityIcons \n                                            name=\"account\" \n                                            color={color} \n                                            size={26} \n                                        />\n                                    ),\n                                }}\n                            />\n                        </Tab.Navigator>\n                </NavigationContainer>\n            </SafeAreaProvider>\n        </MenuContext.Provider>\n    )\n}\n\nconst navStyle = (isVisible: boolean): ViewStyle => {\n    return ({\n        display: isVisible ? 'flex' : 'none', \n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        backgroundColor: colorWithOpacity(ColorPalette.DARK_VIOLET_2, 80),\n        overflow: \"hidden\"\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}