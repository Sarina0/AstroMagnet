{"ast":null,"code":"import MultiFactorResolver from\"./MultiFactorResolver.js\";export function getMultiFactorResolver(auth,error){if(error.hasOwnProperty('userInfo')&&error.userInfo.hasOwnProperty('resolver')&&error.userInfo.resolver){return new MultiFactorResolver(auth,error.userInfo.resolver);}return null;}","map":{"version":3,"names":["MultiFactorResolver","getMultiFactorResolver","auth","error","hasOwnProperty","userInfo","resolver"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/auth/lib/getMultiFactorResolver.js"],"sourcesContent":["import MultiFactorResolver from './MultiFactorResolver.js';\n\n/**\n * Create a new resolver based on an auth instance and error\n * object.\n *\n * Returns null if no resolver object can be found on the error.\n */\nexport function getMultiFactorResolver(auth, error) {\n  if (\n    error.hasOwnProperty('userInfo') &&\n    error.userInfo.hasOwnProperty('resolver') &&\n    error.userInfo.resolver\n  ) {\n    return new MultiFactorResolver(auth, error.userInfo.resolver);\n  }\n\n  return null;\n}\n"],"mappings":"AAAA,MAAOA,oBAAmB,gCAQ1B,MAAO,SAASC,uBAAsB,CAACC,IAAI,CAAEC,KAAK,CAAE,CAClD,GACEA,KAAK,CAACC,cAAc,CAAC,UAAU,CAAC,EAChCD,KAAK,CAACE,QAAQ,CAACD,cAAc,CAAC,UAAU,CAAC,EACzCD,KAAK,CAACE,QAAQ,CAACC,QAAQ,CACvB,CACA,MAAO,IAAIN,oBAAmB,CAACE,IAAI,CAAEC,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAAC,CAC/D,CAEA,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module"}