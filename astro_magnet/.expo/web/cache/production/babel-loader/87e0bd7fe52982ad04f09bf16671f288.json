{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isObject}from'@react-native-firebase/app/lib/common';import FirestoreDocumentReference from\"./FirestoreDocumentReference\";import{parseSetOptions,parseUpdateArgs}from\"./utils\";import{buildNativeMap}from\"./utils/serialize\";var FirestoreWriteBatch=function(){function FirestoreWriteBatch(firestore){_classCallCheck(this,FirestoreWriteBatch);this._firestore=firestore;this._writes=[];this._committed=false;}_createClass(FirestoreWriteBatch,[{key:\"_verifyNotCommitted\",value:function _verifyNotCommitted(method){if(this._committed){throw new Error(\"firebase.firestore.batch().\"+method+\"(*) A write batch can no longer be used after commit() has been called.\");}}},{key:\"commit\",value:function commit(){this._verifyNotCommitted('commit');this._committed=true;if(this._writes.length===0){return Promise.resolve();}return this._firestore.native.documentBatch(this._writes);}},{key:\"delete\",value:function _delete(documentRef){this._verifyNotCommitted('delete');if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore.batch().delete(*) 'documentRef' expected instance of a DocumentReference.\");}if(documentRef.firestore.app!==this._firestore.app){throw new Error(\"firebase.firestore.batch().delete(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\");}this._writes.push({path:documentRef.path,type:'DELETE'});return this;}},{key:\"set\",value:function set(documentRef,data,options){this._verifyNotCommitted('set');if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore.batch().set(*) 'documentRef' expected instance of a DocumentReference.\");}if(documentRef.firestore.app!==this._firestore.app){throw new Error(\"firebase.firestore.batch().set(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\");}if(!isObject(data)){throw new Error(\"firebase.firestore.batch().set(_, *) 'data' must be an object.\");}var setOptions;try{setOptions=parseSetOptions(options);}catch(e){throw new Error(\"firebase.firestore().doc().set(_, *) \"+e.message+\".\");}this._writes.push({path:documentRef.path,type:'SET',data:buildNativeMap(data,this._firestore._settings.ignoreUndefinedProperties),options:setOptions});return this;}},{key:\"update\",value:function update(documentRef){this._verifyNotCommitted('update');if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore.batch().update(*) 'documentRef' expected instance of a DocumentReference.\");}if(documentRef.firestore.app!==this._firestore.app){throw new Error(\"firebase.firestore.batch().update(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\");}for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(args.length===0){throw new Error('firebase.firestore.batch().update(_, *) Invalid arguments. Expected update object or list of key/value pairs.');}var data;try{data=parseUpdateArgs(args);}catch(e){throw new Error(\"firebase.firestore().batch().update(_, *) \"+e.message);}this._writes.push({path:documentRef.path,type:'UPDATE',data:buildNativeMap(data,this._firestore._settings.ignoreUndefinedProperties)});return this;}}]);return FirestoreWriteBatch;}();export{FirestoreWriteBatch as default};","map":{"version":3,"names":["isObject","FirestoreDocumentReference","parseSetOptions","parseUpdateArgs","buildNativeMap","FirestoreWriteBatch","firestore","_firestore","_writes","_committed","method","Error","_verifyNotCommitted","length","Promise","resolve","native","documentBatch","documentRef","app","push","path","type","data","options","setOptions","e","message","_settings","ignoreUndefinedProperties","args"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreWriteBatch.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference from './FirestoreDocumentReference';\nimport { parseSetOptions, parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\n\nexport default class FirestoreWriteBatch {\n  constructor(firestore) {\n    this._firestore = firestore;\n    this._writes = [];\n    this._committed = false;\n  }\n\n  _verifyNotCommitted(method) {\n    if (this._committed) {\n      throw new Error(\n        `firebase.firestore.batch().${method}(*) A write batch can no longer be used after commit() has been called.`,\n      );\n    }\n  }\n\n  commit() {\n    this._verifyNotCommitted('commit');\n    this._committed = true;\n    if (this._writes.length === 0) {\n      return Promise.resolve();\n    }\n    return this._firestore.native.documentBatch(this._writes);\n  }\n\n  delete(documentRef) {\n    this._verifyNotCommitted('delete');\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore.batch().delete(*) 'documentRef' expected instance of a DocumentReference.\",\n      );\n    }\n\n    if (documentRef.firestore.app !== this._firestore.app) {\n      throw new Error(\n        \"firebase.firestore.batch().delete(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\",\n      );\n    }\n\n    this._writes.push({\n      path: documentRef.path,\n      type: 'DELETE',\n    });\n\n    return this;\n  }\n\n  set(documentRef, data, options) {\n    this._verifyNotCommitted('set');\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore.batch().set(*) 'documentRef' expected instance of a DocumentReference.\",\n      );\n    }\n\n    if (documentRef.firestore.app !== this._firestore.app) {\n      throw new Error(\n        \"firebase.firestore.batch().set(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\",\n      );\n    }\n\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore.batch().set(_, *) 'data' must be an object.\");\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().set(_, *) ${e.message}.`);\n    }\n\n    this._writes.push({\n      path: documentRef.path,\n      type: 'SET',\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      options: setOptions,\n    });\n\n    return this;\n  }\n\n  update(documentRef, ...args) {\n    this._verifyNotCommitted('update');\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore.batch().update(*) 'documentRef' expected instance of a DocumentReference.\",\n      );\n    }\n\n    if (documentRef.firestore.app !== this._firestore.app) {\n      throw new Error(\n        \"firebase.firestore.batch().update(*) 'documentRef' provided DocumentReference is from a different Firestore instance.\",\n      );\n    }\n\n    if (args.length === 0) {\n      throw new Error(\n        'firebase.firestore.batch().update(_, *) Invalid arguments. Expected update object or list of key/value pairs.',\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(`firebase.firestore().batch().update(_, *) ${e.message}`);\n    }\n\n    this._writes.push({\n      path: documentRef.path,\n      type: 'UPDATE',\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    });\n\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}