{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"title\",\"theme\",\"style\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"../Typography/Text\";import Divider from\"../Divider\";import{withTheme}from\"../../core/theming\";var DrawerSection=function DrawerSection(_ref){var children=_ref.children,title=_ref.title,theme=_ref.theme,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);var colors=theme.colors,fonts=theme.fonts;var titleColor=color(colors.text).alpha(0.54).rgb().string();var font=fonts.medium;return React.createElement(View,_extends({style:[styles.container,style]},rest),title&&React.createElement(View,{style:styles.titleContainer},React.createElement(Text,{numberOfLines:1,style:[_objectSpread({color:titleColor},font),styles.title]},title)),children,React.createElement(Divider,{style:styles.divider}));};DrawerSection.displayName='Drawer.Section';var styles=StyleSheet.create({container:{marginBottom:4},titleContainer:{height:40,justifyContent:'center'},title:{marginLeft:16},divider:{marginTop:4}});export default withTheme(DrawerSection);","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["color","React","Text","Divider","withTheme","DrawerSection","children","title","theme","style","rest","colors","fonts","titleColor","text","alpha","rgb","string","font","medium","styles","container","titleContainer","divider","displayName","create","marginBottom","height","justifyContent","marginLeft","marginTop"],"mappings":"uuCAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,CAAA,sHAEA,MAAOC,KAAP,0BACA,MAAOC,QAAP,kBACA,OAASC,SAAT,0BAuDA,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAG,IAAA,CAAuD,CAAtD,GAAEC,SAAF,CAAsD,IAAA,CAApDA,QAAF,CAAYC,KAAZ,CAAsD,IAAA,CAA1CA,KAAZ,CAAmBC,KAAnB,CAAsD,IAAA,CAAnCA,KAAnB,CAA0BC,KAA1B,CAAsD,IAAA,CAA5BA,KAA1B,CAAoCC,IAAAA,0BAAkB,IAAA,YAC3E,GAAQC,OAAF,CAAoBH,KAA1B,CAAQG,MAAF,CAAUC,KAAAA,CAAUJ,KAA1B,CAAgBI,KAAAA,CAChB,GAAMC,WAAU,CAAGb,KAAK,CAACW,MAAM,CAACG,IAAR,CAALd,CAAmBe,KAAnBf,CAAyB,IAAzBA,CAAAA,CAA+BgB,GAA/BhB,EAAAA,CAAqCiB,MAArCjB,EAAnB,CACA,GAAMkB,KAAI,CAAGN,KAAK,CAACO,MAAnB,CAEA,MACE,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,QAAA,CAAA,CAAM,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBZ,KAAnB,CAAb,CAAA,CAA4CC,IAA5C,CAAA,CACGH,KAAK,EACJ,KAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CAAM,KAAK,CAAEa,MAAM,CAACE,cAApB,CAAA,CACE,KAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CACE,aAAa,CAAE,CADjB,CAEE,KAAK,CAAE,gBAAGtB,KAAK,CAAEa,UAAT,EAAwBK,IAAAA,EAAQE,MAAM,CAACb,KAAxC,CAFT,CAAA,CAIGA,KAJH,CADF,CAFJ,CAWGD,QAXH,CAYE,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,CAAS,KAAK,CAAEc,MAAM,CAACG,OAAvB,CAAA,CAZF,CADF,CAgBD,CArBD,CAuBAlB,aAAa,CAACmB,WAAdnB,CAA4B,gBAA5BA,CAEA,GAAMe,OAAM,CAAG,UAAU,CAACK,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,YAAY,CAAE,CADL,CADoB,CAI/BJ,cAAc,CAAE,CACdK,MAAM,CAAE,EADM,CAEdC,cAAc,CAAE,QAFF,CAJe,CAQ/BrB,KAAK,CAAE,CACLsB,UAAU,CAAE,EADP,CARwB,CAW/BN,OAAO,CAAE,CACPO,SAAS,CAAE,CADJ,CAXsB,CAAlB,CAAf,CAgBA,cAAe1B,UAAS,CAACC,aAAD,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={[{ color: titleColor, ...font }, styles.title]}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  title: {\n    marginLeft: 16,\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}