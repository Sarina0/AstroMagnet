{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{PermissionStatus}from'expo-modules-core';import{LocationAccuracy}from\"./Location.types\";import{LocationEventEmitter}from\"./LocationEventEmitter\";var GeocoderError=function(_Error){_inherits(GeocoderError,_Error);var _super=_createSuper(GeocoderError);function GeocoderError(){var _this;_classCallCheck(this,GeocoderError);_this=_super.call(this,'Geocoder service is not available for this device.');_this.code='E_NO_GEOCODER';return _this;}return _createClass(GeocoderError);}(_wrapNativeSuper(Error));function geolocationPositionToJSON(position){var coords=position.coords,timestamp=position.timestamp;return{coords:{latitude:coords.latitude,longitude:coords.longitude,altitude:coords.altitude,accuracy:coords.accuracy,altitudeAccuracy:coords.altitudeAccuracy,heading:coords.heading,speed:coords.speed},timestamp:timestamp};}function isLocationValid(location,options){var _location$coords$accu;var maxAge=typeof options.maxAge==='number'?options.maxAge:Infinity;var requiredAccuracy=typeof options.requiredAccuracy==='number'?options.requiredAccuracy:Infinity;var locationAccuracy=(_location$coords$accu=location.coords.accuracy)!=null?_location$coords$accu:Infinity;return Date.now()-location.timestamp<=maxAge&&locationAccuracy<=requiredAccuracy;}function getPermissionsAsync(){return _getPermissionsAsync.apply(this,arguments);}function _getPermissionsAsync(){_getPermissionsAsync=_asyncToGenerator(function*(){return new Promise(function(resolve){var resolveWithStatus=function resolveWithStatus(status){return resolve({status:status,granted:status===PermissionStatus.GRANTED,canAskAgain:true,expires:0});};navigator.geolocation.getCurrentPosition(function(){return resolveWithStatus(PermissionStatus.GRANTED);},function(_ref){var code=_ref.code;if(code===1){resolveWithStatus(PermissionStatus.DENIED);}else{resolveWithStatus(PermissionStatus.UNDETERMINED);}},{enableHighAccuracy:false,maximumAge:Infinity});});});return _getPermissionsAsync.apply(this,arguments);}var lastKnownPosition=null;export default{get name(){return'ExpoLocation';},getProviderStatusAsync:function(){var _getProviderStatusAsync=_asyncToGenerator(function*(){return{locationServicesEnabled:'geolocation'in navigator};});function getProviderStatusAsync(){return _getProviderStatusAsync.apply(this,arguments);}return getProviderStatusAsync;}(),getLastKnownPositionAsync:function(){var _getLastKnownPositionAsync=_asyncToGenerator(function*(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(lastKnownPosition&&isLocationValid(lastKnownPosition,options)){return lastKnownPosition;}return null;});function getLastKnownPositionAsync(){return _getLastKnownPositionAsync.apply(this,arguments);}return getLastKnownPositionAsync;}(),getCurrentPositionAsync:function(){var _getCurrentPositionAsync=_asyncToGenerator(function*(options){return new Promise(function(resolve,reject){var _options$accuracy;var resolver=function resolver(position){lastKnownPosition=geolocationPositionToJSON(position);resolve(lastKnownPosition);};navigator.geolocation.getCurrentPosition(resolver,reject,_objectSpread({maximumAge:Infinity,enableHighAccuracy:((_options$accuracy=options.accuracy)!=null?_options$accuracy:0)>LocationAccuracy.Balanced},options));});});function getCurrentPositionAsync(_x){return _getCurrentPositionAsync.apply(this,arguments);}return getCurrentPositionAsync;}(),removeWatchAsync:function(){var _removeWatchAsync=_asyncToGenerator(function*(watchId){navigator.geolocation.clearWatch(watchId);});function removeWatchAsync(_x2){return _removeWatchAsync.apply(this,arguments);}return removeWatchAsync;}(),watchDeviceHeading:function(){var _watchDeviceHeading=_asyncToGenerator(function*(headingId){console.warn('Location.watchDeviceHeading: is not supported on web');});function watchDeviceHeading(_x3){return _watchDeviceHeading.apply(this,arguments);}return watchDeviceHeading;}(),hasServicesEnabledAsync:function(){var _hasServicesEnabledAsync=_asyncToGenerator(function*(){return'geolocation'in navigator;});function hasServicesEnabledAsync(){return _hasServicesEnabledAsync.apply(this,arguments);}return hasServicesEnabledAsync;}(),geocodeAsync:function(){var _geocodeAsync=_asyncToGenerator(function*(){throw new GeocoderError();});function geocodeAsync(){return _geocodeAsync.apply(this,arguments);}return geocodeAsync;}(),reverseGeocodeAsync:function(){var _reverseGeocodeAsync=_asyncToGenerator(function*(){throw new GeocoderError();});function reverseGeocodeAsync(){return _reverseGeocodeAsync.apply(this,arguments);}return reverseGeocodeAsync;}(),watchPositionImplAsync:function(){var _watchPositionImplAsync=_asyncToGenerator(function*(watchId,options){return new Promise(function(resolve){watchId=global.navigator.geolocation.watchPosition(function(position){lastKnownPosition=geolocationPositionToJSON(position);LocationEventEmitter.emit('Expo.locationChanged',{watchId:watchId,location:lastKnownPosition});},undefined,options);resolve(watchId);});});function watchPositionImplAsync(_x4,_x5){return _watchPositionImplAsync.apply(this,arguments);}return watchPositionImplAsync;}(),getPermissionsAsync:getPermissionsAsync,requestPermissionsAsync:function(){var _requestPermissionsAsync=_asyncToGenerator(function*(){return getPermissionsAsync();});function requestPermissionsAsync(){return _requestPermissionsAsync.apply(this,arguments);}return requestPermissionsAsync;}(),requestForegroundPermissionsAsync:function(){var _requestForegroundPermissionsAsync=_asyncToGenerator(function*(){return getPermissionsAsync();});function requestForegroundPermissionsAsync(){return _requestForegroundPermissionsAsync.apply(this,arguments);}return requestForegroundPermissionsAsync;}(),requestBackgroundPermissionsAsync:function(){var _requestBackgroundPermissionsAsync=_asyncToGenerator(function*(){return getPermissionsAsync();});function requestBackgroundPermissionsAsync(){return _requestBackgroundPermissionsAsync.apply(this,arguments);}return requestBackgroundPermissionsAsync;}(),getForegroundPermissionsAsync:function(){var _getForegroundPermissionsAsync=_asyncToGenerator(function*(){return getPermissionsAsync();});function getForegroundPermissionsAsync(){return _getForegroundPermissionsAsync.apply(this,arguments);}return getForegroundPermissionsAsync;}(),getBackgroundPermissionsAsync:function(){var _getBackgroundPermissionsAsync=_asyncToGenerator(function*(){return getPermissionsAsync();});function getBackgroundPermissionsAsync(){return _getBackgroundPermissionsAsync.apply(this,arguments);}return getBackgroundPermissionsAsync;}(),startObserving:function startObserving(){},stopObserving:function stopObserving(){}};","map":{"version":3,"sources":["../src/ExpoLocation.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  LocationLastKnownOptions,\n  LocationObject,\n  LocationOptions,\n  LocationAccuracy,\n} from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\nclass GeocoderError extends Error {\n  code: string;\n\n  constructor() {\n    super('Geocoder service is not available for this device.');\n    this.code = 'E_NO_GEOCODER';\n  }\n}\n\n/**\n * Converts `GeolocationPosition` to JavaScript object.\n */\nfunction geolocationPositionToJSON(position: LocationObject): LocationObject {\n  const { coords, timestamp } = position;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed,\n    },\n    timestamp,\n  };\n}\n\n/**\n * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n */\nfunction isLocationValid(location: LocationObject, options: LocationLastKnownOptions): boolean {\n  const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  const requiredAccuracy =\n    typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  const locationAccuracy = location.coords.accuracy ?? Infinity;\n\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\n/**\n * Gets the permission details. The implementation is not very good as it actually requests\n * for the current location, but there is no better way on web so far :(\n */\nasync function getPermissionsAsync(): Promise<PermissionResponse> {\n  return new Promise<PermissionResponse>((resolve) => {\n    const resolveWithStatus = (status) =>\n      resolve({\n        status,\n        granted: status === PermissionStatus.GRANTED,\n        canAskAgain: true,\n        expires: 0,\n      });\n\n    navigator.geolocation.getCurrentPosition(\n      () => resolveWithStatus(PermissionStatus.GRANTED),\n      ({ code }) => {\n        if (code === 1 /* PERMISSION_DENIED */) {\n          resolveWithStatus(PermissionStatus.DENIED);\n        } else {\n          resolveWithStatus(PermissionStatus.UNDETERMINED);\n        }\n      },\n      { enableHighAccuracy: false, maximumAge: Infinity }\n    );\n  });\n}\n\nlet lastKnownPosition: LocationObject | null = null;\n\nexport default {\n  get name(): string {\n    return 'ExpoLocation';\n  },\n  async getProviderStatusAsync(): Promise<{ locationServicesEnabled: boolean }> {\n    return {\n      locationServicesEnabled: 'geolocation' in navigator,\n    };\n  },\n  async getLastKnownPositionAsync(\n    options: LocationLastKnownOptions = {}\n  ): Promise<LocationObject | null> {\n    if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n      return lastKnownPosition;\n    }\n    return null;\n  },\n  async getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject> {\n    return new Promise<LocationObject>((resolve, reject) => {\n      const resolver = (position) => {\n        lastKnownPosition = geolocationPositionToJSON(position);\n        resolve(lastKnownPosition);\n      };\n      navigator.geolocation.getCurrentPosition(resolver, reject, {\n        maximumAge: Infinity,\n        enableHighAccuracy: (options.accuracy ?? 0) > LocationAccuracy.Balanced,\n        ...options,\n      });\n    });\n  },\n  async removeWatchAsync(watchId): Promise<void> {\n    navigator.geolocation.clearWatch(watchId);\n  },\n  async watchDeviceHeading(headingId): Promise<void> {\n    console.warn('Location.watchDeviceHeading: is not supported on web');\n  },\n  async hasServicesEnabledAsync(): Promise<boolean> {\n    return 'geolocation' in navigator;\n  },\n  async geocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async reverseGeocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async watchPositionImplAsync(watchId: string, options: LocationOptions): Promise<string> {\n    return new Promise<string>((resolve) => {\n      // @ts-ignore: the types here need to be fixed\n      watchId = global.navigator.geolocation.watchPosition(\n        (position) => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition,\n          });\n        },\n        undefined,\n        // @ts-ignore: the options object needs to be fixed\n        options\n      );\n      resolve(watchId);\n    });\n  },\n\n  getPermissionsAsync,\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n\n  // no-op\n  startObserving() {},\n  stopObserving() {},\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}