{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{isAndroid,isNumber,isString}from'@react-native-firebase/app/lib/common';import{createModuleNamespace,FirebaseModule,getFirebaseRoot}from'@react-native-firebase/app/lib/internal';import StorageReference from\"./StorageReference\";import StorageStatics from\"./StorageStatics\";import{getGsUrlParts,getHttpUrlParts,handleStorageEvent}from\"./utils\";import version from\"./version\";var namespace='storage';var nativeEvents=['storage_event'];var nativeModuleName='RNFBStorageModule';var FirebaseStorageModule=function(_FirebaseModule){_inherits(FirebaseStorageModule,_FirebaseModule);var _super=_createSuper(FirebaseStorageModule);function FirebaseStorageModule(app,config,bucketUrl){var _this;_classCallCheck(this,FirebaseStorageModule);_this=_super.call(this,app,config,bucketUrl);if(bucketUrl===undefined){_this._customUrlOrRegion=\"gs://\"+app.options.storageBucket;}else if(!isString(bucketUrl)||!bucketUrl.startsWith('gs://')){throw new Error(\"firebase.app().storage(*) bucket url must be a string and begin with 'gs://'\");}_this.emitter.addListener(_this.eventNameForApp(nativeEvents[0]),handleStorageEvent.bind(null,_assertThisInitialized(_this)));_this.emulatorHost=undefined;_this.emulatorPort=0;_this._maxUploadRetryTime=_this.native.maxUploadRetryTime||0;_this._maxDownloadRetryTime=_this.native.maxDownloadRetryTime||0;_this._maxOperationRetryTime=_this.native.maxOperationRetryTime||0;return _this;}_createClass(FirebaseStorageModule,[{key:\"maxUploadRetryTime\",get:function get(){return this._maxUploadRetryTime;}},{key:\"maxDownloadRetryTime\",get:function get(){return this._maxDownloadRetryTime;}},{key:\"maxOperationRetryTime\",get:function get(){return this._maxOperationRetryTime;}},{key:\"ref\",value:function ref(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'/';if(!isString(path)){throw new Error(\"firebase.storage().ref(*) 'path' must be a string value.\");}return new StorageReference(this,path);}},{key:\"refFromURL\",value:function refFromURL(url){if(!isString(url)||!url.startsWith('gs://')&&!url.startsWith('http')){throw new Error(\"firebase.storage().refFromURL(*) 'url' must be a string value and begin with 'gs://' or 'https://'.\");}var path;var bucket;if(url.startsWith('http')){var parts=getHttpUrlParts(url);if(!parts){throw new Error(\"firebase.storage().refFromURL(*) unable to parse 'url', ensure it's a valid storage url'.\");}bucket=parts.bucket;path=parts.path;}else{var _getGsUrlParts=getGsUrlParts(url);bucket=_getGsUrlParts.bucket;path=_getGsUrlParts.path;}var storageInstance=this.app.storage(bucket);return new StorageReference(storageInstance,path);}},{key:\"setMaxOperationRetryTime\",value:function setMaxOperationRetryTime(time){if(!isNumber(time)){throw new Error(\"firebase.storage().setMaxOperationRetryTime(*) 'time' must be a number value.\");}this._maxOperationRetryTime=time;return this.native.setMaxOperationRetryTime(time);}},{key:\"setMaxUploadRetryTime\",value:function setMaxUploadRetryTime(time){if(!isNumber(time)){throw new Error(\"firebase.storage().setMaxUploadRetryTime(*) 'time' must be a number value.\");}this._maxUploadRetryTime=time;return this.native.setMaxUploadRetryTime(time);}},{key:\"setMaxDownloadRetryTime\",value:function setMaxDownloadRetryTime(time){if(!isNumber(time)){throw new Error(\"firebase.storage().setMaxDownloadRetryTime(*) 'time' must be a number value.\");}this._maxDownloadRetryTime=time;return this.native.setMaxDownloadRetryTime(time);}},{key:\"useEmulator\",value:function useEmulator(host,port){if(!host||!isString(host)||!port||!isNumber(port)){throw new Error('firebase.storage().useEmulator() takes a non-empty host and port');}var _host=host;if(isAndroid&&_host){if(_host==='localhost'||_host==='127.0.0.1'){_host='10.0.2.2';console.log('Mapping storage host to \"10.0.2.2\" for android emulators. Use real IP on real devices.');}}this.emulatorHost=host;this.emulatorPort=port;this.native.useEmulator(_host,port);return[_host,port];}}]);return FirebaseStorageModule;}(FirebaseModule);export var SDK_VERSION=version;export var STATICS=StorageStatics;export default createModuleNamespace({statics:StorageStatics,version:version,namespace:namespace,nativeEvents:nativeEvents,nativeModuleName:nativeModuleName,hasMultiAppSupport:true,hasCustomUrlOrRegionSupport:true,disablePrependCustomUrlOrRegion:true,ModuleClass:FirebaseStorageModule});export var firebase=getFirebaseRoot();","map":{"version":3,"names":["isAndroid","isNumber","isString","createModuleNamespace","FirebaseModule","getFirebaseRoot","StorageReference","StorageStatics","getGsUrlParts","getHttpUrlParts","handleStorageEvent","version","namespace","nativeEvents","nativeModuleName","FirebaseStorageModule","app","config","bucketUrl","undefined","_customUrlOrRegion","options","storageBucket","startsWith","Error","emitter","addListener","eventNameForApp","bind","emulatorHost","emulatorPort","_maxUploadRetryTime","native","maxUploadRetryTime","_maxDownloadRetryTime","maxDownloadRetryTime","_maxOperationRetryTime","maxOperationRetryTime","path","url","bucket","parts","storageInstance","storage","time","setMaxOperationRetryTime","setMaxUploadRetryTime","setMaxDownloadRetryTime","host","port","_host","console","log","useEmulator","SDK_VERSION","STATICS","statics","hasMultiAppSupport","hasCustomUrlOrRegionSupport","disablePrependCustomUrlOrRegion","ModuleClass","firebase"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/storage/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isNumber, isString } from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport StorageReference from './StorageReference';\nimport StorageStatics from './StorageStatics';\nimport { getGsUrlParts, getHttpUrlParts, handleStorageEvent } from './utils';\nimport version from './version';\n\nconst namespace = 'storage';\nconst nativeEvents = ['storage_event'];\nconst nativeModuleName = 'RNFBStorageModule';\n\nclass FirebaseStorageModule extends FirebaseModule {\n  constructor(app, config, bucketUrl) {\n    super(app, config, bucketUrl);\n    if (bucketUrl === undefined) {\n      this._customUrlOrRegion = `gs://${app.options.storageBucket}`;\n    } else if (!isString(bucketUrl) || !bucketUrl.startsWith('gs://')) {\n      throw new Error(\n        \"firebase.app().storage(*) bucket url must be a string and begin with 'gs://'\",\n      );\n    }\n\n    this.emitter.addListener(\n      this.eventNameForApp(nativeEvents[0]),\n      handleStorageEvent.bind(null, this),\n    );\n\n    // Emulator instance vars needed to send through on iOS, iOS does not persist emulator state between calls\n    this.emulatorHost = undefined;\n    this.emulatorPort = 0;\n    this._maxUploadRetryTime = this.native.maxUploadRetryTime || 0;\n    this._maxDownloadRetryTime = this.native.maxDownloadRetryTime || 0;\n    this._maxOperationRetryTime = this.native.maxOperationRetryTime || 0;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setmaxuploadretrytime\n   */\n  get maxUploadRetryTime() {\n    return this._maxUploadRetryTime;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setmaxdownloadretrytime\n   */\n  get maxDownloadRetryTime() {\n    return this._maxDownloadRetryTime;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#maxoperationretrytime\n   */\n  get maxOperationRetryTime() {\n    return this._maxOperationRetryTime;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#ref\n   */\n  ref(path = '/') {\n    if (!isString(path)) {\n      throw new Error(\"firebase.storage().ref(*) 'path' must be a string value.\");\n    }\n\n    return new StorageReference(this, path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#refFromURL\n   */\n  refFromURL(url) {\n    if (!isString(url) || (!url.startsWith('gs://') && !url.startsWith('http'))) {\n      throw new Error(\n        \"firebase.storage().refFromURL(*) 'url' must be a string value and begin with 'gs://' or 'https://'.\",\n      );\n    }\n\n    let path;\n    let bucket;\n\n    if (url.startsWith('http')) {\n      const parts = getHttpUrlParts(url);\n      if (!parts) {\n        throw new Error(\n          \"firebase.storage().refFromURL(*) unable to parse 'url', ensure it's a valid storage url'.\",\n        );\n      }\n      ({ bucket, path } = parts);\n    } else {\n      ({ bucket, path } = getGsUrlParts(url));\n    }\n\n    const storageInstance = this.app.storage(bucket);\n    return new StorageReference(storageInstance, path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxOperationRetryTime\n   */\n  setMaxOperationRetryTime(time) {\n    if (!isNumber(time)) {\n      throw new Error(\n        \"firebase.storage().setMaxOperationRetryTime(*) 'time' must be a number value.\",\n      );\n    }\n\n    this._maxOperationRetryTime = time;\n    return this.native.setMaxOperationRetryTime(time);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxUploadRetryTime\n   */\n  setMaxUploadRetryTime(time) {\n    if (!isNumber(time)) {\n      throw new Error(\"firebase.storage().setMaxUploadRetryTime(*) 'time' must be a number value.\");\n    }\n\n    this._maxUploadRetryTime = time;\n    return this.native.setMaxUploadRetryTime(time);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxDownloadRetryTime\n   */\n  setMaxDownloadRetryTime(time) {\n    if (!isNumber(time)) {\n      throw new Error(\n        \"firebase.storage().setMaxDownloadRetryTime(*) 'time' must be a number value.\",\n      );\n    }\n\n    this._maxDownloadRetryTime = time;\n    return this.native.setMaxDownloadRetryTime(time);\n  }\n\n  useEmulator(host, port) {\n    if (!host || !isString(host) || !port || !isNumber(port)) {\n      throw new Error('firebase.storage().useEmulator() takes a non-empty host and port');\n    }\n    let _host = host;\n    if (isAndroid && _host) {\n      if (_host === 'localhost' || _host === '127.0.0.1') {\n        _host = '10.0.2.2';\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping storage host to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n        );\n      }\n    }\n    this.emulatorHost = host;\n    this.emulatorPort = port;\n    this.native.useEmulator(_host, port);\n    return [_host, port]; // undocumented return, just used to unit test android host remapping\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/storage';\nexport const SDK_VERSION = version;\n\n// import { STATICS } from '@react-native-firebase/storage';\nexport const STATICS = StorageStatics;\n\n// import storage from '@react-native-firebase/storage';\n// storage().X(...);\nexport default createModuleNamespace({\n  statics: StorageStatics,\n  version,\n  namespace,\n  nativeEvents,\n  nativeModuleName,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: true,\n  disablePrependCustomUrlOrRegion: true,\n  ModuleClass: FirebaseStorageModule,\n});\n\n// import storage, { firebase } from '@react-native-firebase/storage';\n// storage().X(...);\n// firebase.storage().X(...);\nexport const firebase = getFirebaseRoot();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}