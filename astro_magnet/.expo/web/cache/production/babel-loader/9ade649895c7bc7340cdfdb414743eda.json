{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"left\",\"right\",\"title\",\"description\",\"onPress\",\"theme\",\"style\",\"titleStyle\",\"titleNumberOfLines\",\"descriptionNumberOfLines\",\"titleEllipsizeMode\",\"descriptionEllipsizeMode\",\"descriptionStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import color from'color';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";var ListItem=function ListItem(_ref){var left=_ref.left,right=_ref.right,title=_ref.title,description=_ref.description,onPress=_ref.onPress,theme=_ref.theme,style=_ref.style,titleStyle=_ref.titleStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$descriptionNumbe=_ref.descriptionNumberOfLines,descriptionNumberOfLines=_ref$descriptionNumbe===void 0?2:_ref$descriptionNumbe,titleEllipsizeMode=_ref.titleEllipsizeMode,descriptionEllipsizeMode=_ref.descriptionEllipsizeMode,descriptionStyle=_ref.descriptionStyle,rest=_objectWithoutProperties(_ref,_excluded);var renderDescription=function renderDescription(descriptionColor,description){return typeof description==='function'?description({selectable:false,ellipsizeMode:descriptionEllipsizeMode,color:descriptionColor,fontSize:styles.description.fontSize}):React.createElement(Text,{selectable:false,numberOfLines:descriptionNumberOfLines,ellipsizeMode:descriptionEllipsizeMode,style:[styles.description,{color:descriptionColor},descriptionStyle]},description);};var renderTitle=function renderTitle(){var titleColor=color(theme.colors.text).alpha(0.87).rgb().string();return typeof title==='function'?title({selectable:false,ellipsizeMode:titleEllipsizeMode,color:titleColor,fontSize:styles.title.fontSize}):React.createElement(Text,{selectable:false,ellipsizeMode:titleEllipsizeMode,numberOfLines:titleNumberOfLines,style:[styles.title,{color:titleColor},titleStyle]},title);};var descriptionColor=color(theme.colors.text).alpha(0.54).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{style:[styles.container,style],onPress:onPress}),React.createElement(View,{style:styles.row},left?left({color:descriptionColor,style:description?styles.iconMarginLeft:_objectSpread(_objectSpread({},styles.iconMarginLeft),styles.marginVerticalNone)}):null,React.createElement(View,{style:[styles.item,styles.content]},renderTitle(),description?renderDescription(descriptionColor,description):null),right?right({color:descriptionColor,style:description?styles.iconMarginRight:_objectSpread(_objectSpread({},styles.iconMarginRight),styles.marginVerticalNone)}):null));};ListItem.displayName='List.Item';var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row'},title:{fontSize:16},description:{fontSize:14},marginVerticalNone:{marginVertical:0},iconMarginLeft:{marginLeft:0,marginRight:16},iconMarginRight:{marginRight:0},item:{marginVertical:6,paddingLeft:8},content:{flex:1,justifyContent:'center'}});export default withTheme(ListItem);","map":{"version":3,"sources":["ListItem.tsx"],"names":["color","React","TouchableRipple","Text","withTheme","ListItem","left","right","title","description","onPress","theme","style","titleStyle","titleNumberOfLines","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","renderDescription","descriptionColor","selectable","ellipsizeMode","fontSize","styles","renderTitle","titleColor","colors","text","alpha","rgb","string","container","row","iconMarginLeft","marginVerticalNone","item","content","iconMarginRight","displayName","create","padding","flexDirection","marginVertical","marginLeft","marginRight","paddingLeft","flex","justifyContent"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren, EllipsizeProp } from '../../types';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: {\n    color: string;\n    style: {\n      marginLeft: number;\n      marginRight: number;\n      marginVertical?: number;\n    };\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: {\n    color: string;\n    style?: {\n      marginRight: number;\n      marginVertical?: number;\n    };\n  }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst ListItem = ({\n  left,\n  right,\n  title,\n  description,\n  onPress,\n  theme,\n  style,\n  titleStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  titleEllipsizeMode,\n  descriptionEllipsizeMode,\n  descriptionStyle,\n  ...rest\n}: Props) => {\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      style={[styles.container, style]}\n      onPress={onPress}\n    >\n      <View style={styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: description\n                ? styles.iconMarginLeft\n                : {\n                    ...styles.iconMarginLeft,\n                    ...styles.marginVerticalNone,\n                  },\n            })\n          : null}\n        <View style={[styles.item, styles.content]}>\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: description\n                ? styles.iconMarginRight\n                : {\n                    ...styles.iconMarginRight,\n                    ...styles.marginVerticalNone,\n                  },\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  marginVerticalNone: { marginVertical: 0 },\n  iconMarginLeft: { marginLeft: 0, marginRight: 16 },\n  iconMarginRight: { marginRight: 0 },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(ListItem);\n"]},"metadata":{},"sourceType":"module"}