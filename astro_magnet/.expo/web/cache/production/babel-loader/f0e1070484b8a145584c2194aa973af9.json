{"ast":null,"code":"import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import RNSectionList from\"react-native-web/dist/exports/SectionList\";import{usePropsResolution}from\"../../../hooks\";import{makeStyledComponent}from\"../../../utils/styled\";import{useHasResponsiveProps}from\"../../../hooks/useHasResponsiveProps\";var StyledSectionList=makeStyledComponent(RNSectionList);var SectionListComponent=function SectionListComponent(props,ref){var _usePropsResolution=usePropsResolution('SectionList',props),resolvedProps=Object.assign({},(_objectDestructuringEmpty(_usePropsResolution),_usePropsResolution));if(useHasResponsiveProps(props)){return null;}return React.createElement(StyledSectionList,_extends({},resolvedProps,{ref:ref}));};export var SectionList=forwardRef(SectionListComponent);","map":{"version":3,"sources":["SectionList.tsx"],"names":["React","forwardRef","usePropsResolution","makeStyledComponent","useHasResponsiveProps","StyledSectionList","RNSectionList","SectionListComponent","props","ref","resolvedProps","SectionList"],"mappings":"8WAAA,MAAOA,MAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAAA,qEAEA,OAASC,kBAAT,sBACA,OAASC,mBAAT,6BAEA,OAASC,qBAAT,4CAEA,GAAMC,kBAAsB,CAAGF,mBAAmB,CAACG,aAAD,CAAlD,CAEA,GAAMC,qBAAoB,CAAG,QAAvBA,qBAAoB,CACxBC,KAD2B,CAE3BC,GAF2B,CAGxB,CACH,wBAA6BP,kBAAkB,CAAC,aAAD,CAAgBM,KAAhB,CAD5C,CACQE,aAAAA,wFAEX,GAAIN,qBAAqB,CAACI,KAAD,CAAzB,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MAAO,MAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAAuBE,aAAvB,CAAA,CAAsC,GAAG,CAAED,GAA3C,CAAA,CAAA,CAAP,CACD,CAXD,CAaA,MAAO,IAAME,YAAW,CAAGV,UAAU,CAACM,oBAAD,CAA9B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = <ItemT extends any, sectionT extends any>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n};\n\nexport const SectionList = forwardRef(SectionListComponent) as <\n  ItemT,\n  sectionT\n>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}