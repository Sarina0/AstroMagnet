{"ast":null,"code":"import moment from\"moment\";export var getAge=function getAge(date){var birthYear=date.getFullYear();var curYear=new Date().getFullYear();return curYear-birthYear;};export var formatDateTime=function formatDateTime(date){if(!date)return\"\";return moment(date).format(\"YYYY-MMM-DD HH:mm:ss\");};export var formatChatTime=function formatChatTime(date){if(moment(date).isSame(new Date(),\"day\")){return\"today \"+moment(date).format(\"HH:mm\");}if(moment(date).isSame(moment(new Date()).subtract(1,\"days\"),\"day\")){return\"yesterday \"+moment(date).format(\"HH:mm\");}return moment(date).format(\"YYYY/MM/DD HH:mm:ss\");};export var getAstrologicalSign=function getAstrologicalSign(date){if(!date)return\"\";var month=date.getMonth();var day=date.getDate();var sign=\"\";switch(month){case 0:sign=day<20?\"Capricorn\":\"Aquarius\";break;case 1:sign=day<19?\"Aquarius\":\"Pisces\";break;case 2:sign=day<21?\"Pisces\":\"Aries\";break;case 3:sign=day<20?\"Aries\":\"Taurus\";break;case 4:sign=day<21?\"Taurus\":\"Gemini\";break;case 5:sign=day<21?\"Gemini\":\"Cancer\";break;case 6:sign=day<23?\"Cancer\":\"Leo\";break;case 7:sign=day<23?\"Leo\":\"Virgo\";break;case 8:sign=day<23?\"Virgo\":\"Libra\";break;case 9:sign=day<23?\"Libra\":\"Scorpio\";break;case 10:sign=day<22?\"Scorpio\":\"Sagittarius\";break;case 11:sign=day<22?\"Sagittarius\":\"Capricorn\";break;}return sign;};","map":{"version":3,"names":["moment","getAge","date","birthYear","getFullYear","curYear","Date","formatDateTime","format","formatChatTime","isSame","subtract","getAstrologicalSign","month","getMonth","day","getDate","sign"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/shared/actions/time.ts"],"sourcesContent":["import moment from \"moment\";\n\nexport const getAge = (date: Date) => {\n    const birthYear = date.getFullYear();\n    const curYear= new Date().getFullYear();\n    return curYear - birthYear;\n}\n\nexport const formatDateTime = (date: Date): string => {\n    if (!date) return \"\";\n    return moment(date).format(\"YYYY-MMM-DD HH:mm:ss\");\n}\n\nexport const formatChatTime = (date: Date): string => {\n\n    //format date today\n    if (moment(date).isSame(new Date(), \"day\")) {\n        return \"today \" + moment(date).format(\"HH:mm\");\n    }\n\n    //format date from yesterday\n    if (moment(date).isSame(moment(new Date()).subtract(1, \"days\"), \"day\")) {\n        return \"yesterday \" + moment(date).format(\"HH:mm\");\n    }\n\n    //format date\n    return moment(date).format(\"YYYY/MM/DD HH:mm:ss\");\n}\n\nexport const getAstrologicalSign = (date: Date): string => {\n    if (!date) return \"\";\n    const month = date.getMonth();\n    const day = date.getDate();\n    let sign = \"\";\n    switch (month) {\n        case 0:\n            sign = (day < 20) ? \"Capricorn\" : \"Aquarius\";\n            break;\n        case 1:\n            sign = (day < 19) ? \"Aquarius\" : \"Pisces\";\n            break;\n        case 2:\n            sign = (day < 21) ? \"Pisces\" : \"Aries\";\n            break;\n        case 3:\n            sign = (day < 20) ? \"Aries\" : \"Taurus\";\n            break;\n        case 4:\n            sign = (day < 21) ? \"Taurus\" : \"Gemini\";\n            break;\n        case 5:\n            sign = (day < 21) ? \"Gemini\" : \"Cancer\";\n            break;\n        case 6:\n            sign = (day < 23) ? \"Cancer\" : \"Leo\";\n            break;\n        case 7:\n            sign = (day < 23) ? \"Leo\" : \"Virgo\";\n            break;\n        case 8:\n            sign = (day < 23) ? \"Virgo\" : \"Libra\";\n            break;\n        case 9:\n            sign = (day < 23) ? \"Libra\" : \"Scorpio\";\n            break;\n        case 10:\n            sign = (day < 22) ? \"Scorpio\" : \"Sagittarius\";\n            break;\n        case 11:\n            sign = (day < 22) ? \"Sagittarius\" : \"Capricorn\";\n            break;\n    }\n    return sign;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}