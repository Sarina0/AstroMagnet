{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useControlledState as $bOkae$useControlledState}from\"@react-stately/utils\";function $3017fa7ffdddec74$export$8042c6c013fd5226(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var isReadOnly=props.isReadOnly;var _$bOkae$useControlled=$bOkae$useControlledState(props.isSelected,props.defaultSelected||false,props.onChange),_$bOkae$useControlled2=_slicedToArray(_$bOkae$useControlled,2),isSelected=_$bOkae$useControlled2[0],setSelected=_$bOkae$useControlled2[1];function updateSelected(value){if(!isReadOnly)setSelected(value);}function toggleState(){if(!isReadOnly)setSelected(!isSelected);}return{isSelected:isSelected,setSelected:updateSelected,toggle:toggleState};}export{$3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState};","map":{"version":3,"sources":["packages/@react-stately/toggle/src/useToggleState.ts"],"names":[],"mappings":"2JA6BgB,0CAAc,EAAuC,IAAtC,MAAkB,2DAAG,CAAC,CAAC,CACpD,GAAK,WAAU,CAAI,KAAK,CAAnB,UAAA,CAIL,0BAAgC,yBAAkB,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAC,eAAe,EAAI,KAAK,CAAE,KAAK,CAAC,QAAQ,CAAA,gEAA9G,UAAU,2BAAE,WAAW,2B,QAEnB,eAAc,CAAC,KAAK,CAAE,CAC7B,GAAE,CAAG,UAAU,CACb,WAAW,CAAC,KAAK,CAAA,CAErB,C,QAES,YAAW,EAAG,CACrB,GAAE,CAAG,UAAU,CACb,WAAW,CAAA,CAAE,UAAU,CAAA,CAE3B,CAEA,MAAO,C,WACL,UAAU,CACV,WAAW,CAAE,cAAc,CAC3B,MAAM,CAAE,WACV,CAAC,CACH,C","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ToggleProps} from '@react-types/checkbox';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface ToggleState {\n  /** Whether the toggle is selected. */\n  readonly isSelected: boolean,\n\n  /** Updates selection state. */\n  setSelected(isSelected: boolean): void,\n\n  /** Toggle the selection state. */\n  toggle(): void\n}\n\n/**\n * Provides state management for toggle components like checkboxes and switches.\n */\nexport function useToggleState(props: ToggleProps = {}): ToggleState {\n  let {isReadOnly} = props;\n\n  // have to provide an empty function so useControlledState doesn't throw a fit\n  // can't use useControlledState's prop calling because we need the event object from the change\n  let [isSelected, setSelected] = useControlledState(props.isSelected, props.defaultSelected || false, props.onChange);\n\n  function updateSelected(value) {\n    if (!isReadOnly) {\n      setSelected(value);\n    }\n  }\n\n  function toggleState() {\n    if (!isReadOnly) {\n      setSelected(!isSelected);\n    }\n  }\n\n  return {\n    isSelected,\n    setSelected: updateSelected,\n    toggle: toggleState\n  };\n}\n"]},"metadata":{},"sourceType":"module"}