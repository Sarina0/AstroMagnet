{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{NativeWindStyleSheet as _NativeWindStyleSheet}from\"nativewind\";import{StyledComponent as _StyledComponent}from\"nativewind\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useToast,Fab,ArrowDownIcon}from\"native-base\";import{useContext,useEffect,useState,useRef}from\"react\";import{MenuContext}from\"../../../context/menu\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import useMessage from\"../../../hooks/useMessage\";import ToastDialog from\"../../components/global/toast\";import Input from\"../../components/chat/chatInput\";import Dialog from\"../../components/chat/dialog\";import LoadingOverlay from\"../../components/LoadingOverlay\";import{sendMessage}from\"../../../controller/message\";import{UserContext}from\"../../../context/user\";import firestore from\"@react-native-firebase/firestore\";import{AutoScrollFlatList}from\"react-native-autoscroll-flatlist\";import useKeyboardHeight from\"../../../hooks/useKeyboardHeight\";import useKeyboard from\"../../../hooks/useKeyboard\";import{ColorPalette}from\"../../../theme/colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Room(props){var toast=useToast();var listRef=useRef(null);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useMessage=useMessage(props.route.params.id,page,function(error){toast.show({render:function render(){return _jsx(ToastDialog,{message:error});}});}),messages=_useMessage.messages,loading=_useMessage.loading;var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useContext=useContext(UserContext),profile=_useContext.profile;var _useContext2=useContext(MenuContext),setMenuVisible=_useContext2.setMenuVisible;useEffect(function(){setMenuVisible(false);return function(){setMenuVisible(true);setPage(1);};},[]);var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),firstLoad=_useState6[0],setFirstLoad=_useState6[1];useEffect(function(){if(firstLoad&&!loading){setFirstLoad(false);}},[firstLoad,loading]);var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isKeyboardShow=_useState8[0],setIsKeyboardShow=_useState8[1];var keyboardHeight=useKeyboardHeight();useKeyboard(function(isKeyboardShow){setIsKeyboardShow(isKeyboardShow);});function onMessageTopScroll(){if(!firstLoad&&!loading){setPage(page+1);}}function onSendMessage(){return _onSendMessage.apply(this,arguments);}function _onSendMessage(){_onSendMessage=_asyncToGenerator(function*(){if(!profile)return;if(message.length>0){var newMessage={chatRoomId:props.route.params.id,sendBy:{id:profile.id,name:profile.name,profilePicture:profile.profilePicture,email:profile.email},content:message,timestamp:new Date(),createdAt:firestore.Timestamp.now(),seen:false};yield sendMessage(newMessage,function(error){toast.show({render:function render(){return _jsx(ToastDialog,{message:error});}});});setMessage(\"\");}return;});return _onSendMessage.apply(this,arguments);}return _jsxs(_StyledComponent,{className:\"flex-1\",component:SafeAreaView,children:[loading&&_jsx(LoadingOverlay,{}),_jsx(AutoScrollFlatList,{data:messages,ref:listRef,initialNumToRender:10,renderItem:function renderItem(_ref){var item=_ref.item;return _jsx(Dialog,_objectSpread({},item));},contentContainerStyle:{flexDirection:\"column-reverse\",paddingTop:10},threshold:20,newItemAlertMessage:function newItemAlertMessage(newItem){return\"New message: +\"+newItem;},newItemAlertContainerStyle:{backgroundColor:ColorPalette.DARK_VIOLET_2},newItemAlertTextStyle:{color:ColorPalette.SOFT_MAGENTA},indicatorComponent:_jsx(Fab,{position:\"absolute\",bottom:100,right:30,size:\"md\",icon:_jsx(ArrowDownIcon,{size:\"sm\",color:\"onSecondary\"}),backgroundColor:\"secondary\",onPress:function onPress(){var _listRef$current;return(_listRef$current=listRef.current)==null?void 0:_listRef$current.scrollToEnd();}}),onScroll:function onScroll(e){if(e.nativeEvent.contentOffset.y==0){onMessageTopScroll();}},showNewItemAlert:false}),_jsx(Input,{value:message,onChangeText:setMessage,placeholder:\"Type a message\",onSend:onSendMessage,style:{marginBottom:isKeyboardShow?keyboardHeight+0.5:5,paddingHorizontal:isKeyboardShow?0:10,borderRadius:isKeyboardShow?0:10,width:\"100%\"}})]});}_NativeWindStyleSheet.create({styles:{\"absolute\":{\"position\":\"absolute\"},\"flex-1\":{\"flexGrow\":1,\"flexShrink\":1,\"flexBasis\":\"0%\"}}});","map":{"version":3,"names":["useToast","Fab","ArrowDownIcon","useContext","useEffect","useState","useRef","MenuContext","useMessage","ToastDialog","Input","Dialog","LoadingOverlay","sendMessage","UserContext","firestore","AutoScrollFlatList","useKeyboardHeight","useKeyboard","ColorPalette","Room","props","toast","listRef","page","setPage","route","params","id","error","show","render","messages","loading","message","setMessage","profile","setMenuVisible","firstLoad","setFirstLoad","isKeyboardShow","setIsKeyboardShow","keyboardHeight","onMessageTopScroll","onSendMessage","length","newMessage","chatRoomId","sendBy","name","profilePicture","email","content","timestamp","Date","createdAt","Timestamp","now","seen","item","flexDirection","paddingTop","newItem","backgroundColor","DARK_VIOLET_2","color","SOFT_MAGENTA","current","scrollToEnd","e","nativeEvent","contentOffset","y","marginBottom","paddingHorizontal","borderRadius","width"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/frontend/screens/chat/room.tsx"],"sourcesContent":["import { Text, useToast, Box, Fab, ArrowDownIcon } from \"native-base\";\nimport {useContext, useEffect, useState, useRef } from \"react\";\nimport { MenuContext } from \"@app/context/menu\";\nimport { SafeAreaView } from \"react-native\";\nimport useMessage from \"@app/hooks/useMessage\";\nimport ToastDialog from '@app/frontend/components/global/toast';\nimport Input from \"@app/frontend/components/chat/chatInput\";\nimport Dialog from \"@app/frontend/components/chat/dialog\";\nimport LoadingOverlay from \"@app/frontend/components/LoadingOverlay\";\nimport { sendMessage } from \"@app/controller/message\";\nimport type { Message } from \"@app/shared/interfaces/message\";\nimport { UserContext } from \"@app/context/user\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport {AutoScrollFlatList} from \"react-native-autoscroll-flatlist\";\nimport useKeyboardHeight from \"@app/hooks/useKeyboardHeight\";\nimport useKeyboard from \"@app/hooks/useKeyboard\";\nimport { ColorPalette } from \"@app/theme/colors\";\n\nexport default function Room(props: {route: {params: {id: string}}}) {\n    const toast = useToast();\n    const listRef = useRef<AutoScrollFlatList<Message>>(null);\n    const [page, setPage] = useState(1);\n    const { messages, loading } = useMessage(\n        props.route.params.id,\n        page,\n        (error) => {\n            toast.show({\n                render: () => <ToastDialog message={error} />,\n            });\n        } \n    );\n    const [message, setMessage] = useState(\"\");\n    const { profile } = useContext(UserContext);\n\n    const { setMenuVisible } = useContext(MenuContext);\n    useEffect(()=>{\n\n        //set navigation bar to be invisible when enter room\n        setMenuVisible(false);\n\n        //set navigation bar to be visible when leave room\n        return (\n            () => {\n                setMenuVisible(true);\n                setPage(1);\n            }\n        )\n    }, []);\n\n    //hooks to detect message loaded the first time\n    const [firstLoad, setFirstLoad] = useState(true);\n    useEffect(() => {\n        if (firstLoad && !loading) {\n            setFirstLoad(false);\n        }\n    }, [firstLoad, loading]);\n\n\n    //keep track of keyboard height\n    const [isKeyboardShow, setIsKeyboardShow] = useState<boolean>(false);\n    const keyboardHeight = useKeyboardHeight();\n\n    //keep track of keyboard show/hide\n    useKeyboard((isKeyboardShow) => {\n        setIsKeyboardShow(isKeyboardShow);\n    })\n\n    function onMessageTopScroll() {\n        if (!firstLoad && !loading) {\n            setPage(page + 1);\n        }\n    }\n\n\n    async function onSendMessage() {\n        if (!profile) return;\n        if (message.length > 0) {\n            const newMessage: Message = {\n                chatRoomId: props.route.params.id,\n                sendBy: {\n                    id: profile.id!,\n                    name: profile.name!,\n                    profilePicture: profile.profilePicture!,\n                    email: profile.email!,\n                },\n                content: message,\n                timestamp: new Date(),\n                createdAt: firestore.Timestamp.now(),\n                seen: false\n            }\n            await sendMessage(newMessage, (error) => {\n                toast.show({\n                    render: () => <ToastDialog message={error} />,\n                });\n            });\n            setMessage(\"\");\n        } \n        return;\n    }\n\n    return (\n        <SafeAreaView className=\"flex-1\">\n            {loading && <LoadingOverlay/>}\n            <AutoScrollFlatList\n                data={messages}\n                ref={listRef}\n                initialNumToRender={10}\n                renderItem={({item}) => \n                    <Dialog\n                        {...item}\n                    />\n                }\n                contentContainerStyle={{\n                    flexDirection: \"column-reverse\",\n                    paddingTop: 10,\n                }}\n                threshold={20}\n                newItemAlertMessage={(newItem) => `New message: +${newItem}`}\n                newItemAlertContainerStyle={{\n                    backgroundColor: ColorPalette.DARK_VIOLET_2,\n                }}\n                newItemAlertTextStyle={{\n                    color: ColorPalette.SOFT_MAGENTA,\n                }}\n                indicatorComponent={\n                    <Fab\n                        position=\"absolute\"\n                        bottom={100}\n                        right={30}\n                        size=\"md\"\n                        icon={<ArrowDownIcon size=\"sm\" color=\"onSecondary\" />}\n                        backgroundColor=\"secondary\"\n                        onPress={()=>listRef.current?.scrollToEnd()}\n                    />\n                }\n                onScroll={(e)=>{\n                    //check if top is reached\n                    if (e.nativeEvent.contentOffset.y == 0) {\n                        onMessageTopScroll();\n                    }\n                }}\n                showNewItemAlert={false}\n            />\n            <Input \n                value={message}\n                onChangeText={setMessage}\n                placeholder=\"Type a message\"\n                onSend={onSendMessage}\n                style={{\n                    marginBottom: isKeyboardShow? keyboardHeight + 0.5 : 5,\n                    paddingHorizontal: isKeyboardShow? 0 : 10,\n                    borderRadius: isKeyboardShow? 0 : 10,\n                    width: \"100%\",\n                }}\n            />\n        </SafeAreaView>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}