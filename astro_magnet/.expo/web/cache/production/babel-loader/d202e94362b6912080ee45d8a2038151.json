{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';export default function useLayout(){var _React$useState=React.useState({height:0,width:0,measured:false}),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var onLayout=React.useCallback(function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;if(height===layout.height&&width===layout.width){return;}setLayout({height:height,width:width,measured:true});},[layout.height,layout.width]);return[layout,onLayout];}","map":{"version":3,"sources":["useLayout.tsx"],"names":["React","useLayout","layout","setLayout","useState","height","width","measured","onLayout","useCallback","e","nativeEvent"],"mappings":"iEAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAGA,cAAe,SAASC,UAAT,EAAqB,CAClC,oBAA4B,KAAK,CAACG,QAAN,CAIzB,CAAEC,MAAM,CAAE,CAAV,CAAaC,KAAK,CAAE,CAApB,CAAuBC,QAAQ,CAAE,KAAjC,CAJyB,CAA5B,oDAAOL,MAAD,qBAASC,SAAT,qBAMN,GAAMK,SAAQ,CAAG,KAAK,CAACC,WAAN,CACdC,SAAAA,CAAD,CAA0B,CACxB,0BAA0BA,CAAC,CAACC,WAAFD,CAAcR,MAAxC,CAAQG,MAAF,uBAAEA,MAAF,CAAUC,KAAAA,uBAAAA,KAAAA,CAEhB,GAAID,MAAM,GAAKH,MAAM,CAACG,MAAlBA,EAA4BC,KAAK,GAAKJ,MAAM,CAACI,KAAjD,CAAwD,CACtD,OACD,CAEDH,SAAS,CAAC,CACRE,MADQ,CACRA,MADQ,CAERC,KAFQ,CAERA,KAFQ,CAGRC,QAAQ,CAAE,IAHF,CAAD,CAATJ,CAKD,CAbc,CAcf,CAACD,MAAM,CAACG,MAAR,CAAgBH,MAAM,CAACI,KAAvB,CAde,CAAjB,CAiBA,MAAO,CAACJ,MAAD,CAASM,QAAT,CAAP,CACD","sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n}\n"]},"metadata":{},"sourceType":"module"}