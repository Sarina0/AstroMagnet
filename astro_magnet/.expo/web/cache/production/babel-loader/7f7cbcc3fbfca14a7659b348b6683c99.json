{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"],_excluded2=[\"component\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{getBottomSpace}from'react-native-iphone-x-helper';import color from'color';import overlay from\"../../styles/overlay\";import Icon from\"../Icon\";import Surface from\"../Surface\";import Badge from\"../Badge\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";import useAnimatedValue from\"../../utils/useAnimatedValue\";import useAnimatedValueArray from\"../../utils/useAnimatedValueArray\";import useLayout from\"../../utils/useLayout\";import useIsKeyboardShown from\"../../utils/useIsKeyboardShown\";import BottomNavigationRouteScreen from\"./BottomNavigationRouteScreen\";var MIN_RIPPLE_SCALE=0.001;var MIN_TAB_WIDTH=96;var MAX_TAB_WIDTH=168;var BAR_HEIGHT=56;var BOTTOM_INSET=getBottomSpace();var FAR_FAR_AWAY=Platform.OS==='web'?0:9999;var Touchable=function Touchable(_ref){var _0=_ref.route,style=_ref.style,children=_ref.children,borderless=_ref.borderless,centered=_ref.centered,rippleColor=_ref.rippleColor,rest=_objectWithoutProperties(_ref,_excluded);return TouchableRipple.supported?React.createElement(TouchableRipple,_extends({},rest,{disabled:rest.disabled||undefined,borderless:borderless,centered:centered,rippleColor:rippleColor,style:style}),children):React.createElement(TouchableWithoutFeedback,rest,React.createElement(View,{style:style},children));};var SceneComponent=React.memo(function(_ref2){var component=_ref2.component,rest=_objectWithoutProperties(_ref2,_excluded2);return React.createElement(component,rest);});var BottomNavigation=function BottomNavigation(_ref3){var _safeAreaInsets$left,_safeAreaInsets$right,_safeAreaInsets$botto;var navigationState=_ref3.navigationState,renderScene=_ref3.renderScene,renderIcon=_ref3.renderIcon,renderLabel=_ref3.renderLabel,_ref3$renderTouchable=_ref3.renderTouchable,renderTouchable=_ref3$renderTouchable===void 0?function(props){return React.createElement(Touchable,props);}:_ref3$renderTouchable,_ref3$getLabelText=_ref3.getLabelText,getLabelText=_ref3$getLabelText===void 0?function(_ref4){var route=_ref4.route;return route.title;}:_ref3$getLabelText,_ref3$getBadge=_ref3.getBadge,getBadge=_ref3$getBadge===void 0?function(_ref5){var route=_ref5.route;return route.badge;}:_ref3$getBadge,_ref3$getColor=_ref3.getColor,getColor=_ref3$getColor===void 0?function(_ref6){var route=_ref6.route;return route.color;}:_ref3$getColor,_ref3$getAccessibilit=_ref3.getAccessibilityLabel,getAccessibilityLabel=_ref3$getAccessibilit===void 0?function(_ref7){var route=_ref7.route;return route.accessibilityLabel;}:_ref3$getAccessibilit,_ref3$getTestID=_ref3.getTestID,getTestID=_ref3$getTestID===void 0?function(_ref8){var route=_ref8.route;return route.testID;}:_ref3$getTestID,activeColor=_ref3.activeColor,inactiveColor=_ref3.inactiveColor,_ref3$keyboardHidesNa=_ref3.keyboardHidesNavigationBar,keyboardHidesNavigationBar=_ref3$keyboardHidesNa===void 0?true:_ref3$keyboardHidesNa,barStyle=_ref3.barStyle,_ref3$labeled=_ref3.labeled,labeled=_ref3$labeled===void 0?true:_ref3$labeled,style=_ref3.style,theme=_ref3.theme,_ref3$sceneAnimationE=_ref3.sceneAnimationEnabled,sceneAnimationEnabled=_ref3$sceneAnimationE===void 0?false:_ref3$sceneAnimationE,onTabPress=_ref3.onTabPress,onIndexChange=_ref3.onIndexChange,_ref3$shifting=_ref3.shifting,shifting=_ref3$shifting===void 0?navigationState.routes.length>3:_ref3$shifting,safeAreaInsets=_ref3.safeAreaInsets,_ref3$labelMaxFontSiz=_ref3.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref3$labelMaxFontSiz===void 0?1:_ref3$labelMaxFontSiz;var scale=theme.animation.scale;var focusedKey=navigationState.routes[navigationState.index].key;var visibleAnim=useAnimatedValue(1);var tabsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?1:0;}));var offsetsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?0:1;}));var indexAnim=useAnimatedValue(navigationState.index);var rippleAnim=useAnimatedValue(MIN_RIPPLE_SCALE);var _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],onLayout=_useLayout2[1];var _React$useState=React.useState([focusedKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedKey)){setLoaded(function(loaded){return[].concat(_toConsumableArray(loaded),[focusedKey]);});}var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),keyboardVisible=_React$useState4[0],setKeyboardVisible=_React$useState4[1];var handleKeyboardShow=React.useCallback(function(){setKeyboardVisible(true);Animated.timing(visibleAnim,{toValue:0,duration:150*scale,useNativeDriver:true}).start();},[scale,visibleAnim]);var handleKeyboardHide=React.useCallback(function(){Animated.timing(visibleAnim,{toValue:1,duration:100*scale,useNativeDriver:true}).start(function(){setKeyboardVisible(false);});},[scale,visibleAnim]);var animateToIndex=React.useCallback(function(index){rippleAnim.setValue(MIN_RIPPLE_SCALE);Animated.parallel([Animated.timing(rippleAnim,{toValue:1,duration:shifting?400*scale:0,useNativeDriver:true})].concat(_toConsumableArray(navigationState.routes.map(function(_,i){return Animated.timing(tabsAnims[i],{toValue:i===index?1:0,duration:shifting?150*scale:0,useNativeDriver:true});})))).start(function(_ref9){var finished=_ref9.finished;tabsAnims.map(function(tab,i){return tab.setValue(i===index?1:0);});indexAnim.setValue(index);rippleAnim.setValue(MIN_RIPPLE_SCALE);if(finished){offsetsAnims.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});},[indexAnim,shifting,navigationState.routes,offsetsAnims,rippleAnim,scale,tabsAnims]);React.useEffect(function(){animateToIndex(navigationState.index);},[]);useIsKeyboardShown({onShow:handleKeyboardShow,onHide:handleKeyboardHide});var prevNavigationState=React.useRef();React.useEffect(function(){offsetsAnims.forEach(function(offset,i){var _prevNavigationState$;if(i===navigationState.index||i===((_prevNavigationState$=prevNavigationState.current)===null||_prevNavigationState$===void 0?void 0:_prevNavigationState$.index)){offset.setValue(0);}});animateToIndex(navigationState.index);},[navigationState.index,animateToIndex,offsetsAnims]);var handleTabPress=function handleTabPress(index){var event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}if(index!==navigationState.index){onIndexChange(index);}};var jumpTo=React.useCallback(function(key){var index=navigationState.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);},[navigationState.routes,onIndexChange]);var routes=navigationState.routes;var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode;var _ref11=StyleSheet.flatten(barStyle)||{},customBackground=_ref11.backgroundColor,_ref11$elevation=_ref11.elevation,elevation=_ref11$elevation===void 0?4:_ref11$elevation;var approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.primary;var backgroundColor=shifting?indexAnim.interpolate({inputRange:routes.map(function(_,i){return i;}),outputRange:routes.map(function(route){return getColor({route:route})||approxBackgroundColor;})}):approxBackgroundColor;var isDark=typeof approxBackgroundColor==='string'?!color(approxBackgroundColor).isLight():true;var textColor=isDark?white:black;var activeTintColor=typeof activeColor!=='undefined'?activeColor:textColor;var inactiveTintColor=typeof inactiveColor!=='undefined'?inactiveColor:color(textColor).alpha(0.5).rgb().string();var touchColor=color(activeColor||activeTintColor).alpha(0.12).rgb().string();var maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;var maxTabBarWidth=maxTabWidth*routes.length;var tabBarWidth=Math.min(layout.width,maxTabBarWidth);var tabWidth=tabBarWidth/routes.length;var rippleSize=layout.width/4;var insets={left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:0,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:0,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:BOTTOM_INSET};return React.createElement(View,{style:[styles.container,style]},React.createElement(View,{style:[styles.content,{backgroundColor:colors.background}]},routes.map(function(route,index){if(!loaded.includes(route.key)){return null;}var focused=navigationState.index===index;var opacity=sceneAnimationEnabled?tabsAnims[index]:focused?1:0;var top=sceneAnimationEnabled?offsetsAnims[index].interpolate({inputRange:[0,1],outputRange:[0,FAR_FAR_AWAY]}):focused?0:FAR_FAR_AWAY;return React.createElement(BottomNavigationRouteScreen,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',index:index,visibility:opacity,style:[StyleSheet.absoluteFill,{opacity:opacity}],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?navigationState.index!==index:true},React.createElement(Animated.View,{style:[styles.content,{top:top}]},renderScene({route:route,jumpTo:jumpTo})));})),React.createElement(Surface,{style:[styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visibleAnim.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboardVisible?'absolute':null}:null,barStyle],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboardVisible?'none':'auto':'none',onLayout:onLayout},React.createElement(Animated.View,{style:[styles.barContent,{backgroundColor:backgroundColor}]},React.createElement(View,{style:[styles.items,{marginBottom:insets.bottom,marginHorizontal:Math.max(insets.left,insets.right),maxWidth:maxTabBarWidth}],accessibilityRole:'tablist'},shifting?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:tabWidth*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:rippleAnim.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:rippleAnim.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}]}):null,routes.map(function(route,index){var focused=navigationState.index===index;var active=tabsAnims[index];var scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;var translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;var activeOpacity=active;var inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});var badge=getBadge({route:route});return renderTouchable({key:route.key,route:route,borderless:true,centered:true,rippleColor:touchColor,onPress:function onPress(){return handleTabPress(index);},testID:getTestID({route:route}),accessibilityLabel:getAccessibilityLabel({route:route}),accessibilityTraits:focused?['button','selected']:'button',accessibilityComponentType:'button',accessibilityRole:Platform.OS==='ios'?'button':'tab',accessibilityState:{selected:focused},style:styles.item,children:React.createElement(View,{pointerEvents:\"none\"},React.createElement(Animated.View,{style:[styles.iconContainer,{transform:[{translateY:translateY}]}]},React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:activeOpacity}]},renderIcon?renderIcon({route:route,focused:true,color:activeTintColor}):React.createElement(Icon,{source:route.icon,color:activeTintColor,size:24})),React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:inactiveOpacity}]},renderIcon?renderIcon({route:route,focused:false,color:inactiveTintColor}):React.createElement(Icon,{source:route.icon,color:inactiveTintColor,size:24})),React.createElement(View,{style:[styles.badgeContainer,{right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-2}]},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:8}):React.createElement(Badge,{visible:badge!=null,size:16},badge))),labeled?React.createElement(Animated.View,{style:[styles.labelContainer,{transform:[{scale:scale}]}]},React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:activeOpacity}]},renderLabel?renderLabel({route:route,focused:true,color:activeTintColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,style:[styles.label,{color:activeTintColor}]},getLabelText({route:route}))),shifting?null:React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}]},renderLabel?renderLabel({route:route,focused:false,color:inactiveTintColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,selectable:false,style:[styles.label,{color:inactiveTintColor}]},getLabelText({route:route})))):React.createElement(View,{style:styles.labelContainer}))});})))));};BottomNavigation.SceneMap=function(scenes){return function(_ref10){var route=_ref10.route,jumpTo=_ref10.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo});};};export default withTheme(BottomNavigation);var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1},bar:{left:0,right:0,bottom:0,elevation:4},barContent:{alignItems:'center',overflow:'hidden'},items:_objectSpread({flexDirection:'row'},Platform.OS==='web'?{width:'100%'}:null),item:{flex:1,paddingVertical:6},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},iconWrapper:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{alignItems:'center'}),labelContainer:{height:16,paddingBottom:2},labelWrapper:_objectSpread({},StyleSheet.absoluteFillObject),label:_objectSpread({fontSize:12,height:BAR_HEIGHT,textAlign:'center',backgroundColor:'transparent'},Platform.OS==='web'?{whiteSpace:'nowrap',alignSelf:'center'}:null),badgeContainer:{position:'absolute',left:0,top:-2}});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["React","getBottomSpace","color","overlay","Icon","Surface","Badge","TouchableRipple","Text","black","white","withTheme","useAnimatedValue","useAnimatedValueArray","useLayout","useIsKeyboardShown","BottomNavigationRouteScreen","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","BOTTOM_INSET","FAR_FAR_AWAY","Platform","OS","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","supported","disabled","undefined","SceneComponent","memo","component","createElement","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","sceneAnimationEnabled","onTabPress","onIndexChange","shifting","routes","length","safeAreaInsets","labelMaxFontSizeMultiplier","scale","animation","focusedKey","index","key","visibleAnim","tabsAnims","map","_","i","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","loaded","setLoaded","useState","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","finished","tab","forEach","offset","useEffect","onShow","onHide","prevNavigationState","useRef","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","StyleSheet","flatten","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","left","right","bottom","styles","container","content","background","focused","opacity","top","absoluteFill","bar","transform","translateY","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","ripple","borderRadius","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","item","iconContainer","iconWrapper","icon","badgeContainer","String","labelContainer","labelWrapper","label","SceneMap","scenes","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  ViewStyle,\n} from 'react-native';\nimport { getBottomSpace } from 'react-native-iphone-x-helper';\nimport color from 'color';\nimport overlay from '../../styles/overlay';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport Badge from '../Badge';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useLayout from '../../utils/useLayout';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\nexport type Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst BOTTOM_INSET = getBottomSpace();\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Music', icon: 'queue-music' },\n *     { key: 'albums', title: 'Albums', icon: 'album' },\n *     { key: 'recents', title: 'Recents', icon: 'history' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = true,\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  onTabPress,\n  onIndexChange,\n  shifting = navigationState.routes.length > 3,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n}: Props) => {\n  const { scale } = theme.animation;\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  const backgroundColor = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n  const activeTintColor =\n    typeof activeColor !== 'undefined' ? activeColor : textColor;\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? 0,\n    right: safeAreaInsets?.right ?? 0,\n    bottom: safeAreaInsets?.bottom ?? BOTTOM_INSET,\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.content, { backgroundColor: colors.background }]}>\n        {routes.map((route, index) => {\n          if (!loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsAnims[index]\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { opacity }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View style={[styles.content, { top }]}>\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <Surface\n        style={\n          [\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View style={[styles.barContent, { backgroundColor }]}>\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const badge = getBadge({ route });\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits: focused\n                  ? ['button', 'selected']\n                  : 'button',\n                accessibilityComponentType: 'button',\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: styles.item,\n                children: (\n                  <View pointerEvents=\"none\">\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        { transform: [{ translateY }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[styles.iconWrapper, { opacity: activeOpacity }]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          { opacity: inactiveOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View\n                        style={[\n                          styles.badgeContainer,\n                          {\n                            right:\n                              (badge != null && typeof badge !== 'boolean'\n                                ? String(badge).length * -2\n                                : 0) - 2,\n                          },\n                        ]}\n                      >\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              style={[styles.label, { color: activeTintColor }]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveTintColor,\n                              })\n                            ) : (\n                              <Text\n                                maxFontSizeMultiplier={\n                                  labelMaxFontSizeMultiplier\n                                }\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  { color: inactiveTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}