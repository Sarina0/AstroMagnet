{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPress\",\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect}from'react';import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Platform from\"react-native-web/dist/exports/Platform\";import DeviceEventEmitter from\"react-native-web/dist/exports/DeviceEventEmitter\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{RNGoogleSigninButton}from\"./RNGoogleSiginButton\";var RNGoogleSignin=NativeModules.RNGoogleSignin;export var GoogleSigninButton=function GoogleSigninButton(_ref){var onPress=_ref.onPress,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);useEffect(function(){if(Platform.OS==='ios'){return;}var clickListener=DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked',function(){onPress===null||onPress===void 0?void 0:onPress();});return function(){clickListener.remove();};},[onPress]);var recommendedSize=function(){switch(rest.size){case RNGoogleSignin.BUTTON_SIZE_ICON:return styles.iconSize;case RNGoogleSignin.BUTTON_SIZE_WIDE:return styles.wideSize;default:return styles.standardSize;}}();return React.createElement(RNGoogleSigninButton,_extends({},rest,{onPress:onPress,style:[recommendedSize,style]}));};GoogleSigninButton.Size={Icon:RNGoogleSignin.BUTTON_SIZE_ICON,Standard:RNGoogleSignin.BUTTON_SIZE_STANDARD,Wide:RNGoogleSignin.BUTTON_SIZE_WIDE};GoogleSigninButton.Color={Dark:RNGoogleSignin.BUTTON_COLOR_DARK,Light:RNGoogleSignin.BUTTON_COLOR_LIGHT};var styles=StyleSheet.create({iconSize:{width:48,height:48},standardSize:{width:230,height:48},wideSize:{width:312,height:48}});","map":{"version":3,"sources":["GoogleSigninButton.tsx"],"names":["React","useEffect","RNGoogleSigninButton","RNGoogleSignin","NativeModules","GoogleSigninButton","onPress","style","rest","Platform","OS","clickListener","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","create","width","height"],"mappings":"8YAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAAA,sRAGA,OAASC,oBAAT,6BAUA,GAAMC,eAAuC,CAAGC,aAAa,CAACD,cAA9D,CAEA,MAAO,IAAME,mBAAkB,CAAG,QAArBA,mBAAkB,MAA6D,IAAvDC,QAAF,MAAEA,OAAF,CAAWC,KAAX,MAAWA,KAAX,CAAqBC,IAAAA,0CACtDP,SAAS,CAAC,UAAM,CACd,GAAIQ,QAAQ,CAACC,EAATD,GAAgB,KAApB,CAA2B,CACzB,OACD,CACD,GAAME,cAAa,CAAG,kBAAkB,CAACC,WAAnB,CAA+B,6BAA/B,CAA8D,UAAM,CACxFN,OAAO,GAAA,IAAPA,EAAAA,OAAO,GAAA,IAAA,EAAPA,CAAAA,IAAAA,EAAAA,CAAAA,OAAO,EAAA,CACR,CAFqB,CAAtB,CAGA,MAAO,WAAM,CACXK,aAAa,CAACE,MAAdF,EAAAA,CACD,CAFD,CAGD,CAVQ,CAUN,CAACL,OAAD,CAVM,CAATL,CAYA,GAAMa,gBAAe,CAAI,UAAM,CAC7B,OAAQN,IAAI,CAACO,IAAb,EACE,IAAKZ,eAAc,CAACa,gBAApB,CACE,MAAOC,OAAM,CAACC,QAAd,CACF,IAAKf,eAAc,CAACgB,gBAApB,CACE,MAAOF,OAAM,CAACG,QAAd,CACF,QACE,MAAOH,OAAM,CAACI,YAAd,CAAA,CAEL,CATuB,EAbkE,CAyB1F,MAAO,MAAA,CAAA,aAAA,CAAC,oBAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CAA0Bb,IAA1B,CAAA,CAAgC,OAAO,CAAEF,OAAzC,CAAkD,KAAK,CAAE,CAACQ,eAAD,CAAkBP,KAAlB,CAAzD,CAAA,CAAA,CAAP,CACD,CA1BM,CA4BPF,kBAAkB,CAACiB,IAAnBjB,CAA0B,CACxBkB,IAAI,CAAEpB,cAAc,CAACa,gBADG,CAExBQ,QAAQ,CAAErB,cAAc,CAACsB,oBAFD,CAGxBC,IAAI,CAAEvB,cAAc,CAACgB,gBAHG,CAA1Bd,CAMAA,kBAAkB,CAACsB,KAAnBtB,CAA2B,CACzBuB,IAAI,CAAEzB,cAAc,CAAC0B,iBADI,CAEzBC,KAAK,CAAE3B,cAAc,CAAC4B,kBAFG,CAA3B1B,CAMA,GAAMY,OAAM,CAAG,UAAU,CAACe,MAAX,CAAkB,CAC/Bd,QAAQ,CAAE,CACRe,KAAK,CAAE,EADC,CAERC,MAAM,CAAE,EAFA,CADqB,CAK/Bb,YAAY,CAAE,CAAEY,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,EAAtB,CALiB,CAM/Bd,QAAQ,CAAE,CAAEa,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,EAAtB,CANqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]},"metadata":{},"sourceType":"module"}