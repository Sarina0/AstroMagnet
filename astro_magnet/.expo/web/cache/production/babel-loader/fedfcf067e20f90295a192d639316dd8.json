{"ast":null,"code":"export var handlePress=function handlePress(_ref){var onPress=_ref.onPress,value=_ref.value,onValueChange=_ref.onValueChange;if(onPress&&onValueChange){console.warn(\"onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead\");}onValueChange?onValueChange(value):onPress===null||onPress===void 0?void 0:onPress();};export var isChecked=function isChecked(_ref2){var value=_ref2.value,status=_ref2.status,contextValue=_ref2.contextValue;if(contextValue!==undefined&&contextValue!==null){return contextValue===value?'checked':'unchecked';}else{return status;}};","map":{"version":3,"sources":["utils.ts"],"names":["handlePress","onPress","value","onValueChange","console","warn","isChecked","status","contextValue","undefined"],"mappings":"AAAA,MAAO,IAAMA,YAAW,CAAG,QAAdA,YAAW,CAAG,IAAA,CAQrB,CARsB,GAC1BC,QAD0B,CAQtB,IAAA,CAPJA,OAD0B,CAE1BC,KAF0B,CAQtB,IAAA,CANJA,KAF0B,CAG1BC,aAAAA,CAKI,IAAA,CALJA,aAAAA,CAMA,GAAIF,OAAO,EAAIE,aAAf,CAA8B,CAC5BC,OAAO,CAACC,IAARD,4FAAAA,CAGD,CAEDD,aAAa,CAAGA,aAAa,CAACD,KAAD,CAAhB,CAA0BD,OAA1B,GAAA,IAAA,EAA0BA,OAA1B,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA0BA,OAAO,EAA9CE,CACD,CAhBM,CAkBP,MAAO,IAAMG,UAAS,CAAG,QAAZA,UAAS,CAAG,KAAA,CAQnB,CARoB,GACxBJ,MADwB,CAQpB,KAAA,CAPJA,KADwB,CAExBK,MAFwB,CAQpB,KAAA,CANJA,MAFwB,CAGxBC,YAAAA,CAKI,KAAA,CALJA,YAAAA,CAMA,GAAIA,YAAY,GAAKC,SAAjBD,EAA8BA,YAAY,GAAK,IAAnD,CAAyD,CACvD,MAAOA,aAAY,GAAKN,KAAjBM,CAAyB,SAAzBA,CAAqC,WAA5C,CACD,CAFD,IAEO,CACL,MAAOD,OAAP,CACD,CACF,CAdM","sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}