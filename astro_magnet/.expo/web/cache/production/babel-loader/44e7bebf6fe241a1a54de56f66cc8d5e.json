{"ast":null,"code":"var sexes=[\"male\",\"female\",\"other\"];export var validateUser=function validateUser(user,onError,validateEmail){if(isEmptyFieldExist(user)){onError&&onError(\"please fill in all fields\");return false;}if(validateEmail&&!isEmailValid(user.email)){onError&&onError(\"invalid email\");return false;}if(!isNameValid(user.name)){onError&&onError(\"invalid name\");return false;}if(!isAgeValid(user.dateAndTimeOfBirth)){onError&&onError(\"invalid age, you must be 18 years old or older\");return false;}if(!isSexValid(user.sex)){onError&&onError(\"invalid sex\");}if(!isInterestedTypeValid(user.interestedType)){onError&&onError(\"invalid interested\");return false;}return true;};export var isEmptyFieldExist=function isEmptyFieldExist(user){return!user.name||!user.dateAndTimeOfBirth||!user.placeOfBirth||!user.sex||!user.interestedType;};export var isNameValid=function isNameValid(name){if(name.length<3||name.length>30){return false;}return true;};export var isEmailValid=function isEmailValid(email){var emailRegex=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return emailRegex.test(email);};export var isAgeValid=function isAgeValid(dateofbirth){var age=new Date().getFullYear()-dateofbirth.getFullYear();return age>=18;};export var isSexValid=function isSexValid(sex){return sexes.includes(sex);};export var isInterestedTypeValid=function isInterestedTypeValid(interestedType){return interestedType.every(function(sex){return sexes.includes(sex);});};","map":{"version":3,"names":["sexes","validateUser","user","onError","validateEmail","isEmptyFieldExist","isEmailValid","email","isNameValid","name","isAgeValid","dateAndTimeOfBirth","isSexValid","sex","isInterestedTypeValid","interestedType","placeOfBirth","length","emailRegex","test","dateofbirth","age","Date","getFullYear","includes","every"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/shared/actions/validation.ts"],"sourcesContent":["import {User} from \"../interfaces/user\";\n\nconst sexes = [\"male\", \"female\", \"other\"];\n\nexport const validateUser = (\n    user: Partial<User>, \n    onError?: (message: string)=> void,\n    validateEmail?: boolean,\n    \n) => {\n\n    //guard against empty fields\n    if (isEmptyFieldExist(user)) {\n        onError && onError(\"please fill in all fields\");\n        return false;\n    }\n\n    //guard against invalid email\n    if ( validateEmail && !isEmailValid(user.email!)) {\n        onError && onError(\"invalid email\");\n        return false;\n    }\n\n    //guard against invalid name\n    if (!isNameValid(user.name!)) {\n        onError && onError(\"invalid name\");\n        return false;\n    }\n\n    //guard against invalid age\n    if (!isAgeValid(user.dateAndTimeOfBirth!)) {\n        onError && onError(\"invalid age, you must be 18 years old or older\");\n        return false;\n    }\n\n    //guard against invalid sex\n    if (!isSexValid(user.sex!)) {\n        onError && onError(\"invalid sex\");\n    }\n\n    //guard against invalid interests\n    if (!isInterestedTypeValid(user.interestedType!)) {\n        onError && onError(\"invalid interested\");\n        return false;\n    }\n    return true;\n}\n\n/**\n * check if user has empty fields\n * @param user - user date to check\n * @returns {boolean} - true if user has empty fields false otherwise\n */\nexport const isEmptyFieldExist = (user: Partial<User>) => {\n    return (!user.name||\n        !user.dateAndTimeOfBirth||\n        !user.placeOfBirth||\n        !user.sex||\n        !user.interestedType);\n} \n\n/**\n * check if user name is valid\n * valid name is a string with length between 2 to 50\n * @param name - name to check\n * @returns {boolean} - true if name is valid false otherwise\n */\nexport const isNameValid = (name: string) => {\n    if (name.length < 3 || name.length > 30) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * check if user email is valide\n * @param email - email to check\n * @returns {boolean} - true if email is valid false otherwise\n */\nexport const isEmailValid = (email: string) => {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailRegex.test(email);\n}\n\n/**\n * check if user is old enough(18 years old up)\n * @param dateofbirth - date of birth to check\n * @returns {boolean} - true if user is old enough false otherwise\n */\nexport const isAgeValid = (dateofbirth: Date) => {\n    const age = new Date().getFullYear() - dateofbirth.getFullYear();\n    return age >= 18;\n}\n\n/**\n * validate user sex\n * @param sex - user sex to check\n * @returns {boolean} - true if sex is valid false otherwise\n */\nexport const isSexValid = (sex: string) => {\n    return sexes.includes(sex);\n}\n\n/**\n * validate user interested type\n * @param interestedType - interested type to check\n * @returns {boolean} - true if interested type is valid false otherwise\n */\nexport const isInterestedTypeValid = (interestedType: string[]) => { \n    return interestedType.every((sex)=>{\n        return sexes.includes(sex);\n    })\n}"],"mappings":"AAEA,GAAMA,MAAK,CAAG,CAAC,MAAM,CAAE,QAAQ,CAAE,OAAO,CAAC,CAEzC,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CACrBC,IAAmB,CACnBC,OAAkC,CAClCC,aAAuB,CAEtB,CAGD,GAAIC,iBAAiB,CAACH,IAAI,CAAC,CAAE,CACzBC,OAAO,EAAIA,OAAO,CAAC,2BAA2B,CAAC,CAC/C,MAAO,MAAK,CAChB,CAGA,GAAKC,aAAa,EAAI,CAACE,YAAY,CAACJ,IAAI,CAACK,KAAK,CAAE,CAAE,CAC9CJ,OAAO,EAAIA,OAAO,CAAC,eAAe,CAAC,CACnC,MAAO,MAAK,CAChB,CAGA,GAAI,CAACK,WAAW,CAACN,IAAI,CAACO,IAAI,CAAE,CAAE,CAC1BN,OAAO,EAAIA,OAAO,CAAC,cAAc,CAAC,CAClC,MAAO,MAAK,CAChB,CAGA,GAAI,CAACO,UAAU,CAACR,IAAI,CAACS,kBAAkB,CAAE,CAAE,CACvCR,OAAO,EAAIA,OAAO,CAAC,gDAAgD,CAAC,CACpE,MAAO,MAAK,CAChB,CAGA,GAAI,CAACS,UAAU,CAACV,IAAI,CAACW,GAAG,CAAE,CAAE,CACxBV,OAAO,EAAIA,OAAO,CAAC,aAAa,CAAC,CACrC,CAGA,GAAI,CAACW,qBAAqB,CAACZ,IAAI,CAACa,cAAc,CAAE,CAAE,CAC9CZ,OAAO,EAAIA,OAAO,CAAC,oBAAoB,CAAC,CACxC,MAAO,MAAK,CAChB,CACA,MAAO,KAAI,CACf,CAAC,CAOD,MAAO,IAAME,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIH,IAAmB,CAAK,CACtD,MAAQ,CAACA,IAAI,CAACO,IAAI,EACd,CAACP,IAAI,CAACS,kBAAkB,EACxB,CAACT,IAAI,CAACc,YAAY,EAClB,CAACd,IAAI,CAACW,GAAG,EACT,CAACX,IAAI,CAACa,cAAc,CAC5B,CAAC,CAQD,MAAO,IAAMP,YAAW,CAAG,QAAdA,YAAW,CAAIC,IAAY,CAAK,CACzC,GAAIA,IAAI,CAACQ,MAAM,CAAG,CAAC,EAAIR,IAAI,CAACQ,MAAM,CAAG,EAAE,CAAE,CACrC,MAAO,MAAK,CAChB,CAEA,MAAO,KAAI,CACf,CAAC,CAOD,MAAO,IAAMX,aAAY,CAAG,QAAfA,aAAY,CAAIC,KAAa,CAAK,CAC3C,GAAMW,WAAU,CAAG,uJAAuJ,CAC1K,MAAOA,WAAU,CAACC,IAAI,CAACZ,KAAK,CAAC,CACjC,CAAC,CAOD,MAAO,IAAMG,WAAU,CAAG,QAAbA,WAAU,CAAIU,WAAiB,CAAK,CAC7C,GAAMC,IAAG,CAAG,GAAIC,KAAI,EAAE,CAACC,WAAW,EAAE,CAAGH,WAAW,CAACG,WAAW,EAAE,CAChE,MAAOF,IAAG,EAAI,EAAE,CACpB,CAAC,CAOD,MAAO,IAAMT,WAAU,CAAG,QAAbA,WAAU,CAAIC,GAAW,CAAK,CACvC,MAAOb,MAAK,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAC9B,CAAC,CAOD,MAAO,IAAMC,sBAAqB,CAAG,QAAxBA,sBAAqB,CAAIC,cAAwB,CAAK,CAC/D,MAAOA,eAAc,CAACU,KAAK,CAAC,SAACZ,GAAG,CAAG,CAC/B,MAAOb,MAAK,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAC9B,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module"}