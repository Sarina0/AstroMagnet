{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isObject}from'@react-native-firebase/app/lib/common';import FirestoreDocumentReference from\"./FirestoreDocumentReference\";import FirestoreDocumentSnapshot from\"./FirestoreDocumentSnapshot\";import{parseSetOptions,parseUpdateArgs}from\"./utils\";import{buildNativeMap}from\"./utils/serialize\";var FirestoreTransaction=function(){function FirestoreTransaction(firestore,meta){_classCallCheck(this,FirestoreTransaction);this._firestore=firestore;this._meta=meta;}_createClass(FirestoreTransaction,[{key:\"_prepare\",value:function _prepare(){this._calledGetCount=0;this._commandBuffer=[];this._pendingResult=undefined;}},{key:\"get\",value:function get(documentRef){var _this=this;if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore().runTransaction() Transaction.get(*) 'documentRef' expected a DocumentReference.\");}this._calledGetCount++;return this._firestore.native.transactionGetDocument(this._meta.id,documentRef.path).then(function(data){return new FirestoreDocumentSnapshot(_this._firestore,data);});}},{key:\"set\",value:function set(documentRef,data,options){if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore().runTransaction() Transaction.set(*) 'documentRef' expected a DocumentReference.\");}if(!isObject(data)){throw new Error(\"firebase.firestore().runTransaction() Transaction.set(_, *) 'data' must be an object..\");}var setOptions;try{setOptions=parseSetOptions(options);}catch(e){throw new Error(\"firebase.firestore().runTransaction() Transaction.set(_, _, *) \"+e.message+\".\");}this._commandBuffer.push({type:'SET',path:documentRef.path,data:buildNativeMap(data,this._firestore._settings.ignoreUndefinedProperties),options:setOptions});return this;}},{key:\"update\",value:function update(documentRef){if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore().runTransaction() Transaction.update(*) 'documentRef' expected a DocumentReference.\");}var data;try{for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}data=parseUpdateArgs(args);}catch(e){throw new Error(\"firebase.firestore().runTransaction() Transaction.update(_, *) \"+e.message);}this._commandBuffer.push({type:'UPDATE',path:documentRef.path,data:buildNativeMap(data,this._firestore._settings.ignoreUndefinedProperties)});return this;}},{key:\"delete\",value:function _delete(documentRef){if(!(documentRef instanceof FirestoreDocumentReference)){throw new Error(\"firebase.firestore().runTransaction() Transaction.delete(*) 'documentRef' expected a DocumentReference.\");}this._commandBuffer.push({type:'DELETE',path:documentRef.path});return this;}}]);return FirestoreTransaction;}();export{FirestoreTransaction as default};","map":{"version":3,"names":["isObject","FirestoreDocumentReference","FirestoreDocumentSnapshot","parseSetOptions","parseUpdateArgs","buildNativeMap","FirestoreTransaction","firestore","meta","_firestore","_meta","_calledGetCount","_commandBuffer","_pendingResult","undefined","documentRef","Error","native","transactionGetDocument","id","path","then","data","options","setOptions","e","message","push","type","_settings","ignoreUndefinedProperties","args"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreTransaction.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference from './FirestoreDocumentReference';\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\nimport { parseSetOptions, parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\n\nexport default class FirestoreTransaction {\n  constructor(firestore, meta) {\n    this._firestore = firestore;\n    this._meta = meta;\n  }\n\n  /**\n   * Clears the command buffer and any pending result in prep for\n   * the next transaction iteration attempt.\n   *\n   * @private\n   */\n  _prepare() {\n    this._calledGetCount = 0;\n    this._commandBuffer = [];\n    this._pendingResult = undefined;\n  }\n\n  /**\n   * Reads the document referenced by the provided DocumentReference.\n   */\n  get(documentRef) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.get(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    this._calledGetCount++;\n    return this._firestore.native\n      .transactionGetDocument(this._meta.id, documentRef.path)\n      .then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n\n  /**\n   * Writes to the document referred to by the provided DocumentReference.\n   * If the document does not exist yet, it will be created. If you pass options,\n   * the provided data can be merged into the existing document.\n   */\n  set(documentRef, data, options) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.set(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    if (!isObject(data)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.set(_, *) 'data' must be an object..\",\n      );\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore().runTransaction() Transaction.set(_, _, *) ${e.message}.`,\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'SET',\n      path: documentRef.path,\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      options: setOptions,\n    });\n\n    return this;\n  }\n\n  update(documentRef, ...args) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.update(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore().runTransaction() Transaction.update(_, *) ${e.message}`,\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'UPDATE',\n      path: documentRef.path,\n      data: buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    });\n\n    return this;\n  }\n\n  delete(documentRef) {\n    if (!(documentRef instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().runTransaction() Transaction.delete(*) 'documentRef' expected a DocumentReference.\",\n      );\n    }\n\n    this._commandBuffer.push({\n      type: 'DELETE',\n      path: documentRef.path,\n    });\n\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}