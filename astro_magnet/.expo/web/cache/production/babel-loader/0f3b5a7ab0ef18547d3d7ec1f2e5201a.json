{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{isBoolean,isFunction,isNumber,isObject,isString,isUndefined,isAndroid}from'@react-native-firebase/app/lib/common';import{createModuleNamespace,FirebaseModule,getFirebaseRoot}from'@react-native-firebase/app/lib/internal';import FirestoreCollectionReference from\"./FirestoreCollectionReference\";import FirestoreDocumentReference from\"./FirestoreDocumentReference\";import FirestorePath from\"./FirestorePath\";import FirestoreQuery from\"./FirestoreQuery\";import FirestoreQueryModifiers from\"./FirestoreQueryModifiers\";import FirestoreStatics from\"./FirestoreStatics\";import FirestoreTransactionHandler from\"./FirestoreTransactionHandler\";import FirestoreWriteBatch from\"./FirestoreWriteBatch\";import version from\"./version\";var namespace='firestore';var nativeModuleName=['RNFBFirestoreModule','RNFBFirestoreCollectionModule','RNFBFirestoreDocumentModule','RNFBFirestoreTransactionModule'];var nativeEvents=['firestore_collection_sync_event','firestore_document_sync_event','firestore_transaction_event'];var FirebaseFirestoreModule=function(_FirebaseModule){_inherits(FirebaseFirestoreModule,_FirebaseModule);var _super=_createSuper(FirebaseFirestoreModule);function FirebaseFirestoreModule(app,config){var _this;_classCallCheck(this,FirebaseFirestoreModule);_this=_super.call(this,app,config);_this._referencePath=new FirestorePath();_this._transactionHandler=new FirestoreTransactionHandler(_assertThisInitialized(_this));_this.emitter.addListener(_this.eventNameForApp('firestore_collection_sync_event'),function(event){_this.emitter.emit(_this.eventNameForApp(\"firestore_collection_sync_event:\"+event.listenerId),event);});_this.emitter.addListener(_this.eventNameForApp('firestore_document_sync_event'),function(event){_this.emitter.emit(_this.eventNameForApp(\"firestore_document_sync_event:\"+event.listenerId),event);});_this._settings={ignoreUndefinedProperties:false};return _this;}_createClass(FirebaseFirestoreModule,[{key:\"batch\",value:function batch(){return new FirestoreWriteBatch(this);}},{key:\"loadBundle\",value:function loadBundle(bundle){if(!isString(bundle)){throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a string value.\");}if(bundle===''){throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a non-empty string.\");}return this.native.loadBundle(bundle);}},{key:\"namedQuery\",value:function namedQuery(queryName){if(!isString(queryName)){throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a string value.\");}if(queryName===''){throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a non-empty string.\");}return new FirestoreQuery(this,this._referencePath,new FirestoreQueryModifiers(),queryName);}},{key:\"clearPersistence\",value:function(){var _clearPersistence=_asyncToGenerator(function*(){yield this.native.clearPersistence();});function clearPersistence(){return _clearPersistence.apply(this,arguments);}return clearPersistence;}()},{key:\"waitForPendingWrites\",value:function(){var _waitForPendingWrites=_asyncToGenerator(function*(){yield this.native.waitForPendingWrites();});function waitForPendingWrites(){return _waitForPendingWrites.apply(this,arguments);}return waitForPendingWrites;}()},{key:\"terminate\",value:function(){var _terminate=_asyncToGenerator(function*(){yield this.native.terminate();});function terminate(){return _terminate.apply(this,arguments);}return terminate;}()},{key:\"useEmulator\",value:function useEmulator(host,port){if(!host||!isString(host)||!port||!isNumber(port)){throw new Error('firebase.firestore().useEmulator() takes a non-empty host and port');}var _host=host;var androidBypassEmulatorUrlRemap=typeof this.firebaseJson.android_bypass_emulator_url_remap==='boolean'&&this.firebaseJson.android_bypass_emulator_url_remap;if(!androidBypassEmulatorUrlRemap&&isAndroid&&_host){if(_host==='localhost'||_host==='127.0.0.1'){_host='10.0.2.2';console.log('Mapping firestore host to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.');}}this.native.useEmulator(_host,port);return[_host,port];}},{key:\"collection\",value:function collection(collectionPath){if(!isString(collectionPath)){throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must be a string value.\");}if(collectionPath===''){throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must be a non-empty string.\");}var path=this._referencePath.child(collectionPath);if(!path.isCollection){throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must point to a collection.\");}return new FirestoreCollectionReference(this,path);}},{key:\"collectionGroup\",value:function collectionGroup(collectionId){if(!isString(collectionId)){throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must be a string value.\");}if(collectionId===''){throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must be a non-empty string.\");}if(collectionId.indexOf('/')>=0){throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must not contain '/'.\");}return new FirestoreQuery(this,this._referencePath.child(collectionId),new FirestoreQueryModifiers().asCollectionGroupQuery(),undefined);}},{key:\"disableNetwork\",value:function(){var _disableNetwork=_asyncToGenerator(function*(){yield this.native.disableNetwork();});function disableNetwork(){return _disableNetwork.apply(this,arguments);}return disableNetwork;}()},{key:\"doc\",value:function doc(documentPath){if(!isString(documentPath)){throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a string value.\");}if(documentPath===''){throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a non-empty string.\");}var path=this._referencePath.child(documentPath);if(!path.isDocument){throw new Error(\"firebase.firestore().doc(*) 'documentPath' must point to a document.\");}return new FirestoreDocumentReference(this,path);}},{key:\"enableNetwork\",value:function(){var _enableNetwork=_asyncToGenerator(function*(){yield this.native.enableNetwork();});function enableNetwork(){return _enableNetwork.apply(this,arguments);}return enableNetwork;}()},{key:\"runTransaction\",value:function runTransaction(updateFunction){if(!isFunction(updateFunction)){return Promise.reject(new Error(\"firebase.firestore().runTransaction(*) 'updateFunction' must be a function.\"));}return this._transactionHandler._add(updateFunction);}},{key:\"settings\",value:function settings(_settings){if(!isObject(_settings)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings' must be an object.\"));}var keys=Object.keys(_settings);var opts=['cacheSizeBytes','host','persistence','ssl','ignoreUndefinedProperties','serverTimestampBehavior'];for(var i=0;i<keys.length;i++){var key=keys[i];if(!opts.includes(key)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.\"+key+\"' is not a valid settings field.\"));}}if(!isUndefined(_settings.cacheSizeBytes)){if(!isNumber(_settings.cacheSizeBytes)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.cacheSizeBytes' must be a number value.\"));}if(_settings.cacheSizeBytes!==FirestoreStatics.CACHE_SIZE_UNLIMITED&&_settings.cacheSizeBytes<1048576){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.cacheSizeBytes' the minimum cache size is 1048576 bytes (1MB).\"));}}if(!isUndefined(_settings.host)){console.warn('host in settings to connect with firestore emulator is deprecated. Use useEmulator instead.');if(!isString(_settings.host)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.host' must be a string value.\"));}if(_settings.host===''){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.host' must not be an empty string.\"));}if(isAndroid){if(_settings.host.startsWith('localhost')){_settings.host=_settings.host.replace('localhost','10.0.2.2');console.log('Mapping firestore host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');}if(_settings.host.startsWith('127.0.0.1')){_settings.host=_settings.host.replace('127.0.0.1','10.0.2.2');console.log('Mapping firestore host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');}}}if(!isUndefined(_settings.persistence)&&!isBoolean(_settings.persistence)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.persistence' must be a boolean value.\"));}if(!isUndefined(_settings.ssl)&&!isBoolean(_settings.ssl)){throw new Error(\"firebase.firestore().settings(*) 'settings.ssl' must be a boolean value.\");}if(!isUndefined(_settings.serverTimestampBehavior)&&!['estimate','previous','none'].includes(_settings.serverTimestampBehavior)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.serverTimestampBehavior' must be one of 'estimate', 'previous', 'none'.\"));}if(!isUndefined(_settings.ignoreUndefinedProperties)){if(!isBoolean(_settings.ignoreUndefinedProperties)){return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.ignoreUndefinedProperties' must be a boolean value.\"));}else{this._settings.ignoreUndefinedProperties=_settings.ignoreUndefinedProperties;}delete _settings.ignoreUndefinedProperties;}return this.native.settings(_settings);}}]);return FirebaseFirestoreModule;}(FirebaseModule);export var SDK_VERSION=version;export default createModuleNamespace({statics:FirestoreStatics,version:version,namespace:namespace,nativeModuleName:nativeModuleName,nativeEvents:nativeEvents,hasMultiAppSupport:true,hasCustomUrlOrRegionSupport:false,ModuleClass:FirebaseFirestoreModule});export var firebase=getFirebaseRoot();","map":{"version":3,"names":["isBoolean","isFunction","isNumber","isObject","isString","isUndefined","isAndroid","createModuleNamespace","FirebaseModule","getFirebaseRoot","FirestoreCollectionReference","FirestoreDocumentReference","FirestorePath","FirestoreQuery","FirestoreQueryModifiers","FirestoreStatics","FirestoreTransactionHandler","FirestoreWriteBatch","version","namespace","nativeModuleName","nativeEvents","FirebaseFirestoreModule","app","config","_referencePath","_transactionHandler","emitter","addListener","eventNameForApp","event","emit","listenerId","_settings","ignoreUndefinedProperties","bundle","Error","native","loadBundle","queryName","clearPersistence","waitForPendingWrites","terminate","host","port","_host","androidBypassEmulatorUrlRemap","firebaseJson","android_bypass_emulator_url_remap","console","log","useEmulator","collectionPath","path","child","isCollection","collectionId","indexOf","asCollectionGroupQuery","undefined","disableNetwork","documentPath","isDocument","enableNetwork","updateFunction","Promise","reject","_add","settings","keys","Object","opts","i","length","key","includes","cacheSizeBytes","CACHE_SIZE_UNLIMITED","warn","startsWith","replace","persistence","ssl","serverTimestampBehavior","SDK_VERSION","statics","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  isAndroid,\n} from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport FirestoreCollectionReference from './FirestoreCollectionReference';\nimport FirestoreDocumentReference from './FirestoreDocumentReference';\nimport FirestorePath from './FirestorePath';\nimport FirestoreQuery from './FirestoreQuery';\nimport FirestoreQueryModifiers from './FirestoreQueryModifiers';\nimport FirestoreStatics from './FirestoreStatics';\nimport FirestoreTransactionHandler from './FirestoreTransactionHandler';\nimport FirestoreWriteBatch from './FirestoreWriteBatch';\nimport version from './version';\n\nconst namespace = 'firestore';\n\nconst nativeModuleName = [\n  'RNFBFirestoreModule',\n  'RNFBFirestoreCollectionModule',\n  'RNFBFirestoreDocumentModule',\n  'RNFBFirestoreTransactionModule',\n];\n\nconst nativeEvents = [\n  'firestore_collection_sync_event',\n  'firestore_document_sync_event',\n  'firestore_transaction_event',\n];\n\nclass FirebaseFirestoreModule extends FirebaseModule {\n  constructor(app, config) {\n    super(app, config);\n    this._referencePath = new FirestorePath();\n    this._transactionHandler = new FirestoreTransactionHandler(this);\n\n    // Fan out native events\n    this.emitter.addListener(this.eventNameForApp('firestore_collection_sync_event'), event => {\n      this.emitter.emit(\n        this.eventNameForApp(`firestore_collection_sync_event:${event.listenerId}`),\n        event,\n      );\n    });\n\n    this.emitter.addListener(this.eventNameForApp('firestore_document_sync_event'), event => {\n      this.emitter.emit(\n        this.eventNameForApp(`firestore_document_sync_event:${event.listenerId}`),\n        event,\n      );\n    });\n\n    this._settings = {\n      ignoreUndefinedProperties: false,\n    };\n  }\n\n  batch() {\n    return new FirestoreWriteBatch(this);\n  }\n\n  loadBundle(bundle) {\n    if (!isString(bundle)) {\n      throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a string value.\");\n    }\n\n    if (bundle === '') {\n      throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a non-empty string.\");\n    }\n\n    return this.native.loadBundle(bundle);\n  }\n\n  namedQuery(queryName) {\n    if (!isString(queryName)) {\n      throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a string value.\");\n    }\n\n    if (queryName === '') {\n      throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a non-empty string.\");\n    }\n\n    return new FirestoreQuery(this, this._referencePath, new FirestoreQueryModifiers(), queryName);\n  }\n\n  async clearPersistence() {\n    await this.native.clearPersistence();\n  }\n\n  async waitForPendingWrites() {\n    await this.native.waitForPendingWrites();\n  }\n\n  async terminate() {\n    await this.native.terminate();\n  }\n\n  useEmulator(host, port) {\n    if (!host || !isString(host) || !port || !isNumber(port)) {\n      throw new Error('firebase.firestore().useEmulator() takes a non-empty host and port');\n    }\n    let _host = host;\n    const androidBypassEmulatorUrlRemap =\n      typeof this.firebaseJson.android_bypass_emulator_url_remap === 'boolean' &&\n      this.firebaseJson.android_bypass_emulator_url_remap;\n    if (!androidBypassEmulatorUrlRemap && isAndroid && _host) {\n      if (_host === 'localhost' || _host === '127.0.0.1') {\n        _host = '10.0.2.2';\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping firestore host to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.',\n        );\n      }\n    }\n    this.native.useEmulator(_host, port);\n    return [_host, port]; // undocumented return, just used to unit test android host remapping\n  }\n\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must be a string value.\",\n      );\n    }\n\n    if (collectionPath === '') {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must be a non-empty string.\",\n      );\n    }\n\n    const path = this._referencePath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must point to a collection.\",\n      );\n    }\n\n    return new FirestoreCollectionReference(this, path);\n  }\n\n  collectionGroup(collectionId) {\n    if (!isString(collectionId)) {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must be a string value.\",\n      );\n    }\n\n    if (collectionId === '') {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must be a non-empty string.\",\n      );\n    }\n\n    if (collectionId.indexOf('/') >= 0) {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must not contain '/'.\",\n      );\n    }\n\n    return new FirestoreQuery(\n      this,\n      this._referencePath.child(collectionId),\n      new FirestoreQueryModifiers().asCollectionGroupQuery(),\n      undefined,\n    );\n  }\n\n  async disableNetwork() {\n    await this.native.disableNetwork();\n  }\n\n  doc(documentPath) {\n    if (!isString(documentPath)) {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a string value.\");\n    }\n\n    if (documentPath === '') {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a non-empty string.\");\n    }\n\n    const path = this._referencePath.child(documentPath);\n\n    if (!path.isDocument) {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must point to a document.\");\n    }\n\n    return new FirestoreDocumentReference(this, path);\n  }\n\n  async enableNetwork() {\n    await this.native.enableNetwork();\n  }\n\n  runTransaction(updateFunction) {\n    if (!isFunction(updateFunction)) {\n      return Promise.reject(\n        new Error(\"firebase.firestore().runTransaction(*) 'updateFunction' must be a function.\"),\n      );\n    }\n\n    return this._transactionHandler._add(updateFunction);\n  }\n\n  settings(settings) {\n    if (!isObject(settings)) {\n      return Promise.reject(\n        new Error(\"firebase.firestore().settings(*) 'settings' must be an object.\"),\n      );\n    }\n\n    const keys = Object.keys(settings);\n\n    const opts = [\n      'cacheSizeBytes',\n      'host',\n      'persistence',\n      'ssl',\n      'ignoreUndefinedProperties',\n      'serverTimestampBehavior',\n    ];\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (!opts.includes(key)) {\n        return Promise.reject(\n          new Error(\n            `firebase.firestore().settings(*) 'settings.${key}' is not a valid settings field.`,\n          ),\n        );\n      }\n    }\n\n    if (!isUndefined(settings.cacheSizeBytes)) {\n      if (!isNumber(settings.cacheSizeBytes)) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.cacheSizeBytes' must be a number value.\",\n          ),\n        );\n      }\n\n      if (\n        settings.cacheSizeBytes !== FirestoreStatics.CACHE_SIZE_UNLIMITED &&\n        settings.cacheSizeBytes < 1048576 // 1MB\n      ) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.cacheSizeBytes' the minimum cache size is 1048576 bytes (1MB).\",\n          ),\n        );\n      }\n    }\n\n    if (!isUndefined(settings.host)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'host in settings to connect with firestore emulator is deprecated. Use useEmulator instead.',\n      );\n      if (!isString(settings.host)) {\n        return Promise.reject(\n          new Error(\"firebase.firestore().settings(*) 'settings.host' must be a string value.\"),\n        );\n      }\n\n      if (settings.host === '') {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.host' must not be an empty string.\",\n          ),\n        );\n      }\n\n      if (isAndroid) {\n        if (settings.host.startsWith('localhost')) {\n          settings.host = settings.host.replace('localhost', '10.0.2.2');\n          // eslint-disable-next-line no-console\n          console.log(\n            'Mapping firestore host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n          );\n        }\n        if (settings.host.startsWith('127.0.0.1')) {\n          settings.host = settings.host.replace('127.0.0.1', '10.0.2.2');\n          // eslint-disable-next-line no-console\n          console.log(\n            'Mapping firestore host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n          );\n        }\n      }\n    }\n\n    if (!isUndefined(settings.persistence) && !isBoolean(settings.persistence)) {\n      return Promise.reject(\n        new Error(\n          \"firebase.firestore().settings(*) 'settings.persistence' must be a boolean value.\",\n        ),\n      );\n    }\n\n    if (!isUndefined(settings.ssl) && !isBoolean(settings.ssl)) {\n      throw new Error(\"firebase.firestore().settings(*) 'settings.ssl' must be a boolean value.\");\n    }\n\n    if (\n      !isUndefined(settings.serverTimestampBehavior) &&\n      !['estimate', 'previous', 'none'].includes(settings.serverTimestampBehavior)\n    ) {\n      return Promise.reject(\n        new Error(\n          \"firebase.firestore().settings(*) 'settings.serverTimestampBehavior' must be one of 'estimate', 'previous', 'none'.\",\n        ),\n      );\n    }\n\n    if (!isUndefined(settings.ignoreUndefinedProperties)) {\n      if (!isBoolean(settings.ignoreUndefinedProperties)) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.ignoreUndefinedProperties' must be a boolean value.\",\n          ),\n        );\n      } else {\n        this._settings.ignoreUndefinedProperties = settings.ignoreUndefinedProperties;\n      }\n\n      delete settings.ignoreUndefinedProperties;\n    }\n\n    return this.native.settings(settings);\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/firestore';\nexport const SDK_VERSION = version;\n\n// import firestore from '@react-native-firebase/firestore';\n// firestore().X(...);\nexport default createModuleNamespace({\n  statics: FirestoreStatics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseFirestoreModule,\n});\n\n// import firestore, { firebase } from '@react-native-firebase/firestore';\n// firestore().X(...);\n// firebase.firestore().X(...);\nexport const firebase = getFirebaseRoot();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}