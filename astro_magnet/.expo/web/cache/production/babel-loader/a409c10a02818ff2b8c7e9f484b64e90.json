{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"inset\",\"style\",\"theme\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../core/theming\";import{black,white}from\"../styles/colors\";var Divider=function Divider(_ref){var inset=_ref.inset,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var isDarkTheme=theme.dark;return React.createElement(View,_extends({},rest,{style:[isDarkTheme?styles.dark:styles.light,inset&&styles.inset,style]}));};var styles=StyleSheet.create({light:{backgroundColor:color(black).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},dark:{backgroundColor:color(white).alpha(0.12).rgb().string(),height:StyleSheet.hairlineWidth},inset:{marginLeft:72}});export default withTheme(Divider);","map":{"version":3,"sources":["Divider.tsx"],"names":["React","color","withTheme","black","white","Divider","inset","style","theme","rest","dark","isDarkTheme","styles","light","create","backgroundColor","alpha","rgb","string","height","StyleSheet","hairlineWidth","marginLeft"],"mappings":"oZAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,MAAOC,MAAP,KAAkB,OAAlB,CAAA,sHAEA,OAASC,SAAT,uBACA,OAASC,KAAT,CAAgBC,KAAhB,wBA0CA,GAAMC,QAAO,CAAG,QAAVA,QAAO,CAAG,IAAA,CAA6C,CAA5C,GAAEC,MAAF,CAA4C,IAAA,CAA1CA,KAAF,CAASC,KAAT,CAA4C,IAAA,CAAnCA,KAAT,CAAgBC,KAAhB,CAA4C,IAAA,CAA5BA,KAAhB,CAA0BC,IAAAA,0BAAkB,IAAA,YAC3D,GAAcE,YAAAA,CAAgBH,KAA9B,CAAQE,IAAI,CACZ,MACE,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,QAAA,CAAA,CAAA,CAAA,CACMD,IADN,CAAA,CAEE,KAAK,CAAE,CACLE,WAAW,CAAGC,MAAM,CAACF,IAAV,CAAiBE,MAAM,CAACC,KAD9B,CAELP,KAAK,EAAIM,MAAM,CAACN,KAFX,CAGLC,KAHK,CAFT,CAAA,CAAA,CADF,CAUD,CAZD,CAcA,GAAMK,OAAM,CAAG,UAAU,CAACE,MAAX,CAAkB,CAC/BD,KAAK,CAAE,CACLE,eAAe,CAAEd,KAAK,CAACE,KAAD,CAALF,CAAae,KAAbf,CAAmB,IAAnBA,CAAAA,CAAyBgB,GAAzBhB,EAAAA,CAA+BiB,MAA/BjB,EADZ,CAELkB,MAAM,CAAEC,UAAU,CAACC,aAFd,CADwB,CAK/BX,IAAI,CAAE,CACJK,eAAe,CAAEd,KAAK,CAACG,KAAD,CAALH,CAAae,KAAbf,CAAmB,IAAnBA,CAAAA,CAAyBgB,GAAzBhB,EAAAA,CAA+BiB,MAA/BjB,EADb,CAEJkB,MAAM,CAAEC,UAAU,CAACC,aAFf,CALyB,CAS/Bf,KAAK,CAAE,CACLgB,UAAU,CAAE,EADP,CATwB,CAAlB,CAAf,CAcA,cAAepB,UAAS,CAACG,OAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { $RemoveChildren } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, theme, ...rest }: Props) => {\n  const { dark: isDarkTheme } = theme;\n  return (\n    <View\n      {...rest}\n      style={[\n        isDarkTheme ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]},"metadata":{},"sourceType":"module"}