{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var MultiFactorResolver=function(){function MultiFactorResolver(auth,resolver){_classCallCheck(this,MultiFactorResolver);this._auth=auth;this.hints=resolver.hints;this.session=resolver.session;}_createClass(MultiFactorResolver,[{key:\"resolveSignIn\",value:function resolveSignIn(assertion){var token=assertion.token,secret=assertion.secret;return this._auth.resolveMultiFactorSignIn(this.session,token,secret);}}]);return MultiFactorResolver;}();export{MultiFactorResolver as default};","map":{"version":3,"names":["MultiFactorResolver","auth","resolver","_auth","hints","session","assertion","token","secret","resolveMultiFactorSignIn"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/auth/lib/MultiFactorResolver.js"],"sourcesContent":["/**\n * Base class to facilitate multi-factor authentication.\n */\nexport default class MultiFactorResolver {\n  constructor(auth, resolver) {\n    this._auth = auth;\n    this.hints = resolver.hints;\n    this.session = resolver.session;\n  }\n\n  resolveSignIn(assertion) {\n    const { token, secret } = assertion;\n    return this._auth.resolveMultiFactorSignIn(this.session, token, secret);\n  }\n}\n"],"mappings":"mIAGqBA,oBAAmB,YACtC,6BAAYC,IAAI,CAAEC,QAAQ,CAAE,2CAC1B,IAAI,CAACC,KAAK,CAAGF,IAAI,CACjB,IAAI,CAACG,KAAK,CAAGF,QAAQ,CAACE,KAAK,CAC3B,IAAI,CAACC,OAAO,CAAGH,QAAQ,CAACG,OAAO,CACjC,CAAC,6DAED,uBAAcC,SAAS,CAAE,CACvB,GAAQC,MAAK,CAAaD,SAAS,CAA3BC,KAAK,CAAEC,MAAM,CAAKF,SAAS,CAApBE,MAAM,CACrB,MAAO,KAAI,CAACL,KAAK,CAACM,wBAAwB,CAAC,IAAI,CAACJ,OAAO,CAAEE,KAAK,CAAEC,MAAM,CAAC,CACzE,CAAC,0CAVkBR,mBAAmB"},"metadata":{},"sourceType":"module"}