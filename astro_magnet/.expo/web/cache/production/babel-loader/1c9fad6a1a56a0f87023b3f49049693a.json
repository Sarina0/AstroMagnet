{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"accessibilityLabel\",\"accessibilityState\",\"color\",\"disabled\",\"onPress\",\"onLongPress\",\"theme\",\"style\",\"visible\",\"uppercase\",\"testID\",\"animateFrom\",\"extended\",\"iconMode\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Easing from\"react-native-web/dist/exports/Easing\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Surface from\"../../Surface\";import Icon from\"../../Icon\";import TouchableRipple from\"../../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../../core/theming\";import{white,black}from\"../../../styles/colors\";import AnimatedText from\"../../Typography/AnimatedText\";import{getCombinedStyles}from\"./utils\";var SIZE=56;var BORDER_RADIUS=SIZE/2;var SCALE=0.9;var AnimatedFAB=function AnimatedFAB(_ref){var icon=_ref.icon,label=_ref.label,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,accessibilityState=_ref.accessibilityState,customColor=_ref.color,disabled=_ref.disabled,onPress=_ref.onPress,onLongPress=_ref.onLongPress,theme=_ref.theme,style=_ref.style,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?true:_ref$uppercase,testID=_ref.testID,_ref$animateFrom=_ref.animateFrom,animateFrom=_ref$animateFrom===void 0?'right':_ref$animateFrom,_ref$extended=_ref.extended,extended=_ref$extended===void 0?false:_ref$extended,_ref$iconMode=_ref.iconMode,iconMode=_ref$iconMode===void 0?'dynamic':_ref$iconMode,rest=_objectWithoutProperties(_ref,_excluded);var isIOS=Platform.OS==='ios';var isAnimatedFromRight=animateFrom==='right';var isIconStatic=iconMode==='static';var isRTL=I18nManager.isRTL;var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),visibility=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(0)),animFAB=_React$useRef2.current;var scale=theme.animation.scale;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),textWidth=_React$useState2[0],setTextWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),textHeight=_React$useState4[0],setTextHeight=_React$useState4[1];React.useEffect(function(){if(visible){Animated.timing(visibility,{toValue:1,duration:200*scale,useNativeDriver:true}).start();}else{Animated.timing(visibility,{toValue:0,duration:150*scale,useNativeDriver:true}).start();}},[visible,scale,visibility]);var disabledColor=color(theme.dark?white:black).alpha(0.12).rgb().string();var _ref3=StyleSheet.flatten(style)||{},_ref3$backgroundColor=_ref3.backgroundColor,backgroundColor=_ref3$backgroundColor===void 0?disabled?disabledColor:theme.colors.accent:_ref3$backgroundColor;var foregroundColor;if(typeof customColor!=='undefined'){foregroundColor=customColor;}else if(disabled){foregroundColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else{foregroundColor=!color(backgroundColor).isLight()?white:'rgba(0, 0, 0, .54)';}var rippleColor=color(foregroundColor).alpha(0.32).rgb().string();var extendedWidth=textWidth+1.5*SIZE;var distance=isAnimatedFromRight?-textWidth-BORDER_RADIUS:textWidth+BORDER_RADIUS;React.useEffect(function(){Animated.timing(animFAB,{toValue:!extended?0:distance,duration:150*scale,useNativeDriver:true,easing:Easing.linear}).start();},[animFAB,scale,distance,extended]);var onTextLayout=function onTextLayout(_ref2){var nativeEvent=_ref2.nativeEvent;var currentWidth=Math.ceil(nativeEvent.lines[0].width);var currentHeight=Math.ceil(nativeEvent.lines[0].height);if(currentWidth!==textWidth||currentHeight!==textHeight){setTextHeight(currentHeight);if(isIOS){return setTextWidth(currentWidth-12);}setTextWidth(currentWidth);}};var propForDirection=function propForDirection(right){if(isAnimatedFromRight){return right;}return right.reverse();};var combinedStyles=getCombinedStyles({isAnimatedFromRight:isAnimatedFromRight,isIconStatic:isIconStatic,distance:distance,animFAB:animFAB});return React.createElement(Surface,_extends({},rest,{style:[{opacity:visibility,transform:[{scale:visibility}],elevation:isIOS?6:0},styles.container,disabled&&styles.disabled,style]}),React.createElement(Animated.View,{style:[{transform:[{scaleY:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SCALE,1])})}]},styles.standard]},React.createElement(View,{style:[StyleSheet.absoluteFill,styles.shadowWrapper]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.shadow,{width:extendedWidth,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([1,0.15,0])})}]}),React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.shadow,{opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([0,0.85,1])}),width:SIZE,borderRadius:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SIZE/(extendedWidth/SIZE),BORDER_RADIUS])})},combinedStyles.absoluteFill]})),React.createElement(Animated.View,{pointerEvents:\"box-none\",style:[styles.innerWrapper]},React.createElement(Animated.View,{style:[styles.standard,{width:extendedWidth,backgroundColor:backgroundColor},combinedStyles.innerWrapper]},React.createElement(TouchableRipple,{borderless:true,onPress:onPress,onLongPress:onLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:_objectSpread(_objectSpread({},accessibilityState),{},{disabled:disabled}),testID:testID,style:styles.touchable},React.createElement(View,{style:[styles.standard,{width:extendedWidth}]}))))),React.createElement(Animated.View,{style:[styles.iconWrapper,combinedStyles.iconWrapper],pointerEvents:\"none\"},React.createElement(Icon,{source:icon,size:24,color:foregroundColor})),React.createElement(View,{pointerEvents:\"none\"},React.createElement(AnimatedText,{numberOfLines:1,onTextLayout:isIOS?onTextLayout:undefined,ellipsizeMode:'tail',style:[_defineProperty({},isAnimatedFromRight||isRTL?'right':'left',isIconStatic?isIOS?SIZE-10:SIZE-12:BORDER_RADIUS),{minWidth:textWidth,top:-BORDER_RADIUS-textHeight/2,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.7*distance,0]),outputRange:propForDirection([1,0,0])}),transform:[{translateX:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([0,SIZE])})}]},styles.label,uppercase&&styles.uppercaseLabel,_objectSpread({color:foregroundColor},theme.fonts.medium)]},label)),!isIOS&&React.createElement(ScrollView,{style:styles.textPlaceholderContainer},React.createElement(Text,{onTextLayout:onTextLayout},label)));};var styles=StyleSheet.create({standard:{height:SIZE,borderRadius:BORDER_RADIUS},disabled:{elevation:0},container:{position:'absolute',backgroundColor:'transparent',borderRadius:BORDER_RADIUS},innerWrapper:{flexDirection:'row',overflow:'hidden',borderRadius:BORDER_RADIUS},shadowWrapper:{elevation:0},shadow:{elevation:6,borderRadius:BORDER_RADIUS},touchable:{borderRadius:BORDER_RADIUS},iconWrapper:{alignItems:'center',justifyContent:'center',position:'absolute',height:SIZE,width:SIZE},label:{position:'absolute'},uppercaseLabel:{textTransform:'uppercase'},textPlaceholderContainer:{height:0,position:'absolute'}});export default withTheme(AnimatedFAB);","map":{"version":3,"sources":["AnimatedFAB.tsx"],"names":["React","color","Surface","Icon","TouchableRipple","withTheme","white","black","AnimatedText","getCombinedStyles","SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","testID","animateFrom","extended","iconMode","rest","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","current","visibility","useRef","Animated","Value","animFAB","scale","animation","textWidth","setTextWidth","useState","textHeight","setTextHeight","useEffect","timing","toValue","duration","useNativeDriver","start","disabledColor","dark","alpha","rgb","string","backgroundColor","colors","accent","StyleSheet","flatten","foregroundColor","isLight","rippleColor","extendedWidth","distance","easing","Easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","shadow","borderRadius","innerWrapper","touchable","iconWrapper","undefined","minWidth","top","translateX","uppercaseLabel","fonts","medium","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"]},"metadata":{},"sourceType":"module"}