{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{hasOwnProperty,isArray,isBoolean,isFunction,isObject,isString,isUndefined}from'@react-native-firebase/app/lib/common';import FirestoreFieldPath,{fromDotSeparatedString}from\"../FirestoreFieldPath\";export function extractFieldPathData(data,segmenets){if(!isObject(data)){return undefined;}var pathValue=data[segmenets[0]];if(segmenets.length===1){return pathValue;}return extractFieldPathData(pathValue,segmenets.slice(1));}export function parseUpdateArgs(args){var data={};if(args.length===1){if(!isObject(args[0])){throw new Error('if using a single update argument, it must be an object.');}var _args=_slicedToArray(args,1);data=_args[0];}else if(args.length%2===1){throw new Error('the update arguments must be either a single object argument, or equal numbers of key/value pairs.');}else{for(var i=0;i<args.length;i+=2){var key=args[i];var value=args[i+1];if(isString(key)){data[key]=value;}else if(key instanceof FirestoreFieldPath){data[key._toPath()]=value;}else{throw new Error(\"argument at index \"+i+\" must be a string or FieldPath\");}}}return data;}export function parseSetOptions(options){var out={};if(isUndefined(options)){return out;}if(!isObject(options)){throw new Error(\"'options' must be an object.\");}if(hasOwnProperty(options,'merge')&&hasOwnProperty(options,'mergeFields')){throw new Error(\"'options' must not contain both 'merge' & 'mergeFields'.\");}if(!isUndefined(options.merge)){if(!isBoolean(options.merge)){throw new Error(\"'options.merge' must be a boolean value.\");}out.merge=options.merge;}if(!isUndefined(options.mergeFields)){if(!isArray(options.mergeFields)){throw new Error(\"'options.mergeFields' must be an array.\");}out.mergeFields=[];for(var i=0;i<options.mergeFields.length;i++){var field=options.mergeFields[i];if(!isString(field)&&!(field instanceof FirestoreFieldPath)){throw new Error(\"'options.mergeFields' all fields must be of type string or FieldPath, but the value at index \"+i+\" was \"+typeof field);}var path=field;if(isString(path)){try{path=fromDotSeparatedString(field);}catch(e){throw new Error(\"'options.mergeFields' \"+e.message);}}if(field instanceof FirestoreFieldPath){out.mergeFields.push(field._toPath());}else{out.mergeFields.push(field);}}}return out;}function isPartialObserver(input){if(input==null){return false;}return input.next!=null||input.error!=null||input.complete!=null;}export function parseSnapshotArgs(args){if(args.length===0){throw new Error('expected at least one argument.');}var NOOP=function NOOP(){};var snapshotListenOptions={};var callback=NOOP;var onError=NOOP;var onNext=NOOP;if(isFunction(args[0])){if(isFunction(args[1])){onNext=args[0];onError=args[1];}else{callback=args[0];}}if(isObject(args[0])&&isPartialObserver(args[0])){var observer=args[0];if(observer.error){onError=isFunction(observer.error)?observer.error.bind(observer):observer.error;}if(observer.next){onNext=isFunction(observer.next)?observer.next.bind(observer):observer.next;}}if(isObject(args[0])&&!isPartialObserver(args[0])){snapshotListenOptions.includeMetadataChanges=args[0].includeMetadataChanges==null?false:args[0].includeMetadataChanges;if(isFunction(args[1])){if(isFunction(args[2])){onNext=args[1];onError=args[2];}else{callback=args[1];}}else if(isPartialObserver(args[1])){var _observer=args[1];if(_observer.error){onError=isFunction(_observer.error)?_observer.error.bind(_observer):_observer.error;}if(_observer.next){onNext=isFunction(_observer.next)?_observer.next.bind(_observer):_observer.next;}}}if(hasOwnProperty(snapshotListenOptions,'includeMetadataChanges')){if(!isBoolean(snapshotListenOptions.includeMetadataChanges)){throw new Error(\"'options' SnapshotOptions.includeMetadataChanges must be a boolean value.\");}}if(!isFunction(onNext)){throw new Error(\"'observer.next' or 'onNext' expected a function.\");}if(!isFunction(onError)){throw new Error(\"'observer.error' or 'onError' expected a function.\");}return{snapshotListenOptions:snapshotListenOptions,callback:callback,onNext:onNext,onError:onError};}","map":{"version":3,"names":["hasOwnProperty","isArray","isBoolean","isFunction","isObject","isString","isUndefined","FirestoreFieldPath","fromDotSeparatedString","extractFieldPathData","data","segmenets","undefined","pathValue","length","slice","parseUpdateArgs","args","Error","i","key","value","_toPath","parseSetOptions","options","out","merge","mergeFields","field","path","e","message","push","isPartialObserver","input","next","error","complete","parseSnapshotArgs","NOOP","snapshotListenOptions","callback","onError","onNext","observer","bind","includeMetadataChanges"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/utils/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  hasOwnProperty,\n  isArray,\n  isBoolean,\n  isFunction,\n  isObject,\n  isString,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\nimport FirestoreFieldPath, { fromDotSeparatedString } from '../FirestoreFieldPath';\n\nexport function extractFieldPathData(data, segmenets) {\n  if (!isObject(data)) {\n    return undefined;\n  }\n\n  const pathValue = data[segmenets[0]];\n\n  if (segmenets.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segmenets.slice(1));\n}\n\nexport function parseUpdateArgs(args) {\n  let data = {};\n  if (args.length === 1) {\n    if (!isObject(args[0])) {\n      throw new Error('if using a single update argument, it must be an object.');\n    }\n    [data] = args;\n  } else if (args.length % 2 === 1) {\n    throw new Error(\n      'the update arguments must be either a single object argument, or equal numbers of key/value pairs.',\n    );\n  } else {\n    for (let i = 0; i < args.length; i += 2) {\n      const key = args[i];\n      const value = args[i + 1];\n      if (isString(key)) {\n        data[key] = value;\n      } else if (key instanceof FirestoreFieldPath) {\n        data[key._toPath()] = value;\n      } else {\n        throw new Error(`argument at index ${i} must be a string or FieldPath`);\n      }\n    }\n  }\n  return data;\n}\n\n/**\n *\n * @param options\n */\nexport function parseSetOptions(options) {\n  const out = {};\n\n  if (isUndefined(options)) {\n    return out;\n  }\n\n  if (!isObject(options)) {\n    throw new Error(\"'options' must be an object.\");\n  }\n\n  if (hasOwnProperty(options, 'merge') && hasOwnProperty(options, 'mergeFields')) {\n    throw new Error(\"'options' must not contain both 'merge' & 'mergeFields'.\");\n  }\n\n  if (!isUndefined(options.merge)) {\n    if (!isBoolean(options.merge)) {\n      throw new Error(\"'options.merge' must be a boolean value.\");\n    }\n\n    out.merge = options.merge;\n  }\n\n  if (!isUndefined(options.mergeFields)) {\n    if (!isArray(options.mergeFields)) {\n      throw new Error(\"'options.mergeFields' must be an array.\");\n    }\n\n    out.mergeFields = [];\n\n    for (let i = 0; i < options.mergeFields.length; i++) {\n      const field = options.mergeFields[i];\n      if (!isString(field) && !(field instanceof FirestoreFieldPath)) {\n        throw new Error(\n          `'options.mergeFields' all fields must be of type string or FieldPath, but the value at index ${i} was ${typeof field}`,\n        );\n      }\n\n      let path = field;\n\n      if (isString(path)) {\n        try {\n          path = fromDotSeparatedString(field);\n        } catch (e) {\n          throw new Error(`'options.mergeFields' ${e.message}`);\n        }\n      }\n\n      if (field instanceof FirestoreFieldPath) {\n        out.mergeFields.push(field._toPath());\n      } else {\n        out.mergeFields.push(field);\n      }\n    }\n  }\n\n  return out;\n}\n\n// function buildFieldPathData(segments, value) {\n//   if (segments.length === 1) {\n//     return {\n//       [segments[0]]: value,\n//     };\n//   }\n//   return {\n//     [segments[0]]: buildFieldPathData(segments.slice(1), value),\n//   };\n// }\n\nfunction isPartialObserver(input) {\n  if (input == null) {\n    return false;\n  }\n  return input.next != null || input.error != null || input.complete != null;\n}\n\nexport function parseSnapshotArgs(args) {\n  if (args.length === 0) {\n    throw new Error('expected at least one argument.');\n  }\n\n  // Ignore onComplete as its never used\n  const NOOP = () => {};\n  const snapshotListenOptions = {};\n  let callback = NOOP;\n  let onError = NOOP;\n  let onNext = NOOP;\n\n  /**\n   * .onSnapshot(Function...\n   */\n  if (isFunction(args[0])) {\n    /**\n     * .onSnapshot((snapshot) => {}, (error) => {}\n     */\n    if (isFunction(args[1])) {\n      onNext = args[0];\n      onError = args[1];\n    } else {\n      /**\n       * .onSnapshot((snapshot, error) => {})\n       */\n      callback = args[0];\n    }\n  }\n\n  /**\n   * .onSnapshot({ complete: () => {}, error: (e) => {}, next: (snapshot) => {} })\n   */\n  if (isObject(args[0]) && isPartialObserver(args[0])) {\n    const observer = args[0];\n    if (observer.error) {\n      onError = isFunction(observer.error) ? observer.error.bind(observer) : observer.error;\n    }\n    if (observer.next) {\n      onNext = isFunction(observer.next) ? observer.next.bind(observer) : observer.next;\n    }\n  }\n\n  /**\n   * .onSnapshot(SnapshotListenOptions, ...\n   */\n  if (isObject(args[0]) && !isPartialObserver(args[0])) {\n    snapshotListenOptions.includeMetadataChanges =\n      args[0].includeMetadataChanges == null ? false : args[0].includeMetadataChanges;\n    if (isFunction(args[1])) {\n      /**\n       * .onSnapshot(SnapshotListenOptions, Function);\n       */\n      if (isFunction(args[2])) {\n        /**\n         * .onSnapshot(SnapshotListenOptions, (snapshot) => {}, (error) => {});\n         */\n        onNext = args[1];\n        onError = args[2];\n      } else {\n        /**\n         * .onSnapshot(SnapshotListenOptions, (s, e) => {};\n         */\n        callback = args[1];\n      }\n    } else if (isPartialObserver(args[1])) {\n      /**\n       * .onSnapshot(SnapshotListenOptions, { complete: () => {}, error: (e) => {}, next: (snapshot) => {} });\n       */\n      const observer = args[1];\n      if (observer.error) {\n        onError = isFunction(observer.error) ? observer.error.bind(observer) : observer.error;\n      }\n      if (observer.next) {\n        onNext = isFunction(observer.next) ? observer.next.bind(observer) : observer.next;\n      }\n    }\n  }\n\n  if (hasOwnProperty(snapshotListenOptions, 'includeMetadataChanges')) {\n    if (!isBoolean(snapshotListenOptions.includeMetadataChanges)) {\n      throw new Error(\"'options' SnapshotOptions.includeMetadataChanges must be a boolean value.\");\n    }\n  }\n\n  if (!isFunction(onNext)) {\n    throw new Error(\"'observer.next' or 'onNext' expected a function.\");\n  }\n\n  if (!isFunction(onError)) {\n    throw new Error(\"'observer.error' or 'onError' expected a function.\");\n  }\n\n  return { snapshotListenOptions, callback, onNext, onError };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}