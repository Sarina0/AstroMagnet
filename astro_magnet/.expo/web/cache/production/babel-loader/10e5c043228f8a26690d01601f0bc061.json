{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import firestore from'@react-native-firebase/firestore';var UserController=function(){function UserController(){_classCallCheck(this,UserController);throw new Error(\"UserController is a static class\");}_createClass(UserController,null,[{key:\"createUser\",value:function(){var _createUser=_asyncToGenerator(function*(data,onError){yield firestore().collection('users').add(_objectSpread({},data)).catch(function(error){console.log(\"[LOG] error create user:\",error);onError&&onError(error.message);});return{status:true,data:\"User created\"};});function createUser(_x,_x2){return _createUser.apply(this,arguments);}return createUser;}()},{key:\"updateUser\",value:function(){var _updateUser=_asyncToGenerator(function*(userId,data,onError){yield firestore().collection('users').doc(userId).update(_objectSpread({},data)).catch(function(error){console.log(\"[LOG] error update user:\",error);onError&&onError(error.message);});return{status:true,data:\"User updated successfully\"};});function updateUser(_x3,_x4,_x5){return _updateUser.apply(this,arguments);}return updateUser;}()},{key:\"getAllUsers\",value:function(){var _getAllUsers=_asyncToGenerator(function*(onError){var result=[];yield firestore().collection('users').get().then(function(querySnapshot){querySnapshot.forEach(function(documentSnapshot){result.push(documentSnapshot);});}).catch(function(error){console.log(\"[LOG] error get all user:\",error);onError&&onError(error.message);});return{status:true,data:result};});function getAllUsers(_x6){return _getAllUsers.apply(this,arguments);}return getAllUsers;}()},{key:\"likeUser\",value:function(){var _likeUser=_asyncToGenerator(function*(currentUserId,userId,onError){yield firestore().collection('users').doc(currentUserId).update({liked:firestore.FieldValue.arrayUnion(userId)}).catch(function(error){console.log(\"[LOG] error liking user:\",error);onError&&onError(error.message);});});function likeUser(_x7,_x8,_x9){return _likeUser.apply(this,arguments);}return likeUser;}()},{key:\"dislikeUser\",value:function(){var _dislikeUser=_asyncToGenerator(function*(currentUserId,userId,onError){yield firestore().collection('users').doc(currentUserId).update({disliked:firestore.FieldValue.arrayUnion(userId)}).catch(function(error){console.log(\"[LOG] error dislike user:\",error);onError&&onError(error.message);});});function dislikeUser(_x10,_x11,_x12){return _dislikeUser.apply(this,arguments);}return dislikeUser;}()}]);return UserController;}();export{UserController as default};","map":{"version":3,"names":["firestore","UserController","Error","data","onError","collection","add","catch","error","console","log","message","status","userId","doc","update","result","get","then","querySnapshot","forEach","documentSnapshot","push","currentUserId","liked","FieldValue","arrayUnion","disliked"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/controller/user/index.tsx"],"sourcesContent":["import { User } from '@app/shared/interfaces/user';\nimport firestore, { FirebaseFirestoreTypes } from '@react-native-firebase/firestore';\nimport { FireDoc } from \"@app/shared/interfaces/firebase\";\n\ntype NWResult<T> = {\n    status: boolean,\n    data: T\n}\n\n/**\n * User controller\n */\nexport default class UserController {\n\n    constructor() {\n        throw new Error(\"UserController is a static class\");\n    }\n\n    /**\n     * create a new user profile in firestore\n     * @param {User} data - new profile data\n     * @param {((message:)=>void)|undefinded }onError - error callback(handle network error)\n     * @returns {Promise<NWResult<string>>} - returns status of operation and message\n     */\n    static async createUser(\n        data: User,\n        onError?: (message: string) => void\n    ): Promise<NWResult<string>> {\n        await firestore()\n            .collection('users')\n            .add({\n                ...data,\n            }).catch((error) => {\n                console.log(\"[LOG] error create user:\", error)\n                onError && onError(error.message)\n            })\n\n        return {\n            status: true,\n            data: \"User created\"\n        }\n    }\n\n    /**\n     * update user profile in firestore\n     * @param {string} userId - current logged in user id\n     * @param {Partial<User>} data - new data to be updated\n     * @param {(message: string)=>void} onError - error callback(handle network error)\n     */\n    static async updateUser(\n        userId: string, \n        data: Partial<User>,\n        onError?: (message: string) => void\n    ): Promise<NWResult<string>> {\n        await firestore()\n            .collection('users')\n            .doc(userId)\n            .update({\n                ...data,\n            }).catch((error) => {\n                console.log(\"[LOG] error update user:\", error)\n                onError && onError(error.message)\n            })\n\n        return {\n            status: true,\n            data: \"User updated successfully\"\n        }\n    }\n\n    /**\n     * get all users\n     * @param {string} currentUserId - current logged in user id\n     * @param {(message: string)=>void} onError - error callback(handle network error)\n     * @returns returns FireDoc of users\n     */\n    static async getAllUsers(\n        onError?: (message: string) => void\n    ): Promise<NWResult<FireDoc[]>> {\n        let result: FireDoc[] = []\n        await firestore()\n            .collection('users')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((documentSnapshot) => {\n                    result.push(documentSnapshot)\n                });\n            }).catch((error) => {\n                console.log(\"[LOG] error get all user:\", error)\n                onError && onError(error.message)\n            })\n\n        return {\n            status: true,\n            data: result\n        };\n    }\n\n    /**\n     * like user\n     * @param {string} currentUserId - current logged in user id\n     * @param {string} userId - user id to be liked\n     * @param {(message: string)=>void} onError - error callback(handle network error)\n     * @returns\n     */\n    static async likeUser(\n        currentUserId: string, \n        userId: string, \n        onError?: (message: string) => void\n    ): Promise<void> {\n        await firestore()\n            .collection('users')\n            .doc(currentUserId)\n            .update({\n                liked: firestore.FieldValue.arrayUnion(userId),\n            }).catch((error)=> {\n                console.log(\"[LOG] error liking user:\", error)\n                onError && onError(error.message)\n            })\n    }\n\n    /**\n     * like user\n     * @param {string} currentUserId - current logged in user id\n     * @param {string} userId - user id to be unliked\n     * @param {(message: string)=>void} onError - error callback(handle network error)\n     * @returns\n     */\n    static async dislikeUser(\n        currentUserId: string,\n        userId: string,\n        onError?: (message: string) => void\n    ): Promise<void> {\n        await firestore()\n            .collection('users')\n            .doc(currentUserId)\n            .update({\n                disliked: firestore.FieldValue.arrayUnion(userId),\n            }).catch((error) => {\n                console.log(\"[LOG] error dislike user:\", error)\n                onError && onError(error.message)\n            })\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}