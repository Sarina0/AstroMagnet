{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isArray,isNumber}from'@react-native-firebase/app/lib/common';import{buildNativeArray,provideFieldValueClass}from\"./utils/serialize\";export var TypeFieldValueDelete='delete';export var TypeFieldValueIncrement='increment';export var TypeFieldValueRemove='array_remove';export var TypeFieldValueUnion='array_union';export var TypeFieldValueTimestamp='timestamp';function validateArrayElements(elements){for(var i=0;i<elements.length;i++){var element=elements[i];if(element instanceof FirestoreFieldValue){throw new Error('FieldValue instance cannot be used with other FieldValue methods.');}if(isArray(element)){throw new Error('Nested arrays are not supported');}}}var FirestoreFieldValue=function(){function FirestoreFieldValue(){var internal=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var type=arguments.length>1?arguments[1]:undefined;var elements=arguments.length>2?arguments[2]:undefined;_classCallCheck(this,FirestoreFieldValue);if(internal===false){throw new Error('firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.');}this._type=type;this._elements=elements;}_createClass(FirestoreFieldValue,[{key:\"isEqual\",value:function isEqual(other){if(!(other instanceof FirestoreFieldValue)){throw new Error(\"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\");}return this._type===other._type&&JSON.stringify(this._elements)===JSON.stringify(other._elements);}}],[{key:\"delete\",value:function _delete(){return new FirestoreFieldValue(true,TypeFieldValueDelete);}},{key:\"increment\",value:function increment(n){if(!isNumber(n)){throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");}return new FirestoreFieldValue(true,TypeFieldValueIncrement,n);}},{key:\"serverTimestamp\",value:function serverTimestamp(){return new FirestoreFieldValue(true,TypeFieldValueTimestamp);}},{key:\"arrayUnion\",value:function arrayUnion(){for(var _len=arguments.length,elements=new Array(_len),_key=0;_key<_len;_key++){elements[_key]=arguments[_key];}try{validateArrayElements(elements);}catch(e){throw new Error(\"firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. \"+e.message);}return new FirestoreFieldValue(true,TypeFieldValueUnion,buildNativeArray(elements));}},{key:\"arrayRemove\",value:function arrayRemove(){for(var _len2=arguments.length,elements=new Array(_len2),_key2=0;_key2<_len2;_key2++){elements[_key2]=arguments[_key2];}try{validateArrayElements(elements);}catch(e){throw new Error(\"firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. \"+e.message);}return new FirestoreFieldValue(true,TypeFieldValueRemove,buildNativeArray(elements));}}]);return FirestoreFieldValue;}();export{FirestoreFieldValue as default};provideFieldValueClass(FirestoreFieldValue);","map":{"version":3,"names":["isArray","isNumber","buildNativeArray","provideFieldValueClass","TypeFieldValueDelete","TypeFieldValueIncrement","TypeFieldValueRemove","TypeFieldValueUnion","TypeFieldValueTimestamp","validateArrayElements","elements","i","length","element","FirestoreFieldValue","Error","internal","type","_type","_elements","other","JSON","stringify","n","e","message"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreFieldValue.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isNumber } from '@react-native-firebase/app/lib/common';\nimport { buildNativeArray, provideFieldValueClass } from './utils/serialize';\n\nexport const TypeFieldValueDelete = 'delete';\nexport const TypeFieldValueIncrement = 'increment';\nexport const TypeFieldValueRemove = 'array_remove';\nexport const TypeFieldValueUnion = 'array_union';\nexport const TypeFieldValueTimestamp = 'timestamp';\n\nfunction validateArrayElements(elements) {\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (element instanceof FirestoreFieldValue) {\n      throw new Error('FieldValue instance cannot be used with other FieldValue methods.');\n    }\n\n    if (isArray(element)) {\n      throw new Error('Nested arrays are not supported');\n    }\n  }\n}\n\nexport default class FirestoreFieldValue {\n  constructor(internal = false, type, elements) {\n    if (internal === false) {\n      throw new Error(\n        'firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.',\n      );\n    }\n\n    this._type = type;\n    this._elements = elements;\n  }\n\n  static delete() {\n    return new FirestoreFieldValue(true, TypeFieldValueDelete);\n  }\n\n  static increment(n) {\n    if (!isNumber(n)) {\n      throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueIncrement, n);\n  }\n\n  static serverTimestamp() {\n    return new FirestoreFieldValue(true, TypeFieldValueTimestamp);\n  }\n\n  static arrayUnion(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueUnion, buildNativeArray(elements));\n  }\n\n  static arrayRemove(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueRemove, buildNativeArray(elements));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreFieldValue)) {\n      throw new Error(\n        \"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\",\n      );\n    }\n\n    return (\n      this._type === other._type &&\n      JSON.stringify(this._elements) === JSON.stringify(other._elements)\n    );\n  }\n}\n\nprovideFieldValueClass(FirestoreFieldValue); // serialize\n"],"mappings":"gIAiBA,OAASA,OAAO,CAAEC,QAAQ,KAAQ,uCAAuC,CACzE,OAASC,gBAAgB,CAAEC,sBAAsB,yBAEjD,MAAO,IAAMC,qBAAoB,CAAG,QAAQ,CAC5C,MAAO,IAAMC,wBAAuB,CAAG,WAAW,CAClD,MAAO,IAAMC,qBAAoB,CAAG,cAAc,CAClD,MAAO,IAAMC,oBAAmB,CAAG,aAAa,CAChD,MAAO,IAAMC,wBAAuB,CAAG,WAAW,CAElD,QAASC,sBAAqB,CAACC,QAAQ,CAAE,CACvC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,QAAQ,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACxC,GAAME,QAAO,CAAGH,QAAQ,CAACC,CAAC,CAAC,CAE3B,GAAIE,OAAO,WAAYC,oBAAmB,CAAE,CAC1C,KAAM,IAAIC,MAAK,CAAC,mEAAmE,CAAC,CACtF,CAEA,GAAIf,OAAO,CAACa,OAAO,CAAC,CAAE,CACpB,KAAM,IAAIE,MAAK,CAAC,iCAAiC,CAAC,CACpD,CACF,CACF,CAAC,GAEoBD,oBAAmB,YACtC,8BAA8C,IAAlCE,SAAQ,2DAAG,KAAK,IAAEC,KAAI,8CAAEP,SAAQ,qFAC1C,GAAIM,QAAQ,GAAK,KAAK,CAAE,CACtB,KAAM,IAAID,MAAK,CACb,yFAAyF,CAC1F,CACH,CAEA,IAAI,CAACG,KAAK,CAAGD,IAAI,CACjB,IAAI,CAACE,SAAS,CAAGT,QAAQ,CAC3B,CAAC,uDA0CD,iBAAQU,KAAK,CAAE,CACb,GAAI,EAAEA,KAAK,WAAYN,oBAAmB,CAAC,CAAE,CAC3C,KAAM,IAAIC,MAAK,CACb,kFAAkF,CACnF,CACH,CAEA,MACE,KAAI,CAACG,KAAK,GAAKE,KAAK,CAACF,KAAK,EAC1BG,IAAI,CAACC,SAAS,CAAC,IAAI,CAACH,SAAS,CAAC,GAAKE,IAAI,CAACC,SAAS,CAACF,KAAK,CAACD,SAAS,CAAC,CAEtE,CAAC,wBAnDD,kBAAgB,CACd,MAAO,IAAIL,oBAAmB,CAAC,IAAI,CAAEV,oBAAoB,CAAC,CAC5D,CAAC,yBAED,mBAAiBmB,CAAC,CAAE,CAClB,GAAI,CAACtB,QAAQ,CAACsB,CAAC,CAAC,CAAE,CAChB,KAAM,IAAIR,MAAK,CAAC,yEAAyE,CAAC,CAC5F,CAEA,MAAO,IAAID,oBAAmB,CAAC,IAAI,CAAET,uBAAuB,CAAEkB,CAAC,CAAC,CAClE,CAAC,+BAED,0BAAyB,CACvB,MAAO,IAAIT,oBAAmB,CAAC,IAAI,CAAEN,uBAAuB,CAAC,CAC/D,CAAC,0BAED,qBAA+B,+BAAVE,QAAQ,0CAARA,QAAQ,wBAC3B,GAAI,CACFD,qBAAqB,CAACC,QAAQ,CAAC,CACjC,CAAE,MAAOc,CAAC,CAAE,CACV,KAAM,IAAIT,MAAK,qFACuES,CAAC,CAACC,OAAO,CAC9F,CACH,CAEA,MAAO,IAAIX,oBAAmB,CAAC,IAAI,CAAEP,mBAAmB,CAAEL,gBAAgB,CAACQ,QAAQ,CAAC,CAAC,CACvF,CAAC,2BAED,sBAAgC,gCAAVA,QAAQ,+CAARA,QAAQ,0BAC5B,GAAI,CACFD,qBAAqB,CAACC,QAAQ,CAAC,CACjC,CAAE,MAAOc,CAAC,CAAE,CACV,KAAM,IAAIT,MAAK,sFACwES,CAAC,CAACC,OAAO,CAC/F,CACH,CAEA,MAAO,IAAIX,oBAAmB,CAAC,IAAI,CAAER,oBAAoB,CAAEJ,gBAAgB,CAACQ,QAAQ,CAAC,CAAC,CACxF,CAAC,0CAlDkBI,mBAAmB,aAkExCX,sBAAsB,CAACW,mBAAmB,CAAC"},"metadata":{},"sourceType":"module"}