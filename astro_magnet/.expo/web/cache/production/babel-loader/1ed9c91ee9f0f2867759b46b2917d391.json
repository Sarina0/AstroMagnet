{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{ListAccordionGroupContext}from\"./ListAccordionGroup\";var ListAccordion=function ListAccordion(_ref){var left=_ref.left,right=_ref.right,title=_ref.title,description=_ref.description,children=_ref.children,theme=_ref.theme,titleStyle=_ref.titleStyle,descriptionStyle=_ref.descriptionStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$descriptionNumbe=_ref.descriptionNumberOfLines,descriptionNumberOfLines=_ref$descriptionNumbe===void 0?2:_ref$descriptionNumbe,style=_ref.style,id=_ref.id,testID=_ref.testID,onPress=_ref.onPress,onLongPress=_ref.onLongPress,expandedProp=_ref.expanded,accessibilityLabel=_ref.accessibilityLabel;var _React$useState=React.useState(expandedProp||false),_React$useState2=_slicedToArray(_React$useState,2),expanded=_React$useState2[0],setExpanded=_React$useState2[1];var handlePressAction=function handlePressAction(){onPress===null||onPress===void 0?void 0:onPress();if(expandedProp===undefined){setExpanded(function(expanded){return!expanded;});}};var titleColor=color(theme.colors.text).alpha(0.87).rgb().string();var descriptionColor=color(theme.colors.text).alpha(0.54).rgb().string();var expandedInternal=expandedProp!==undefined?expandedProp:expanded;var groupContext=React.useContext(ListAccordionGroupContext);if(groupContext!==null&&!id){throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');}var isExpanded=groupContext?groupContext.expandedId===id:expandedInternal;var handlePress=groupContext&&id!==undefined?function(){return groupContext.onAccordionPress(id);}:handlePressAction;return React.createElement(View,null,React.createElement(View,{style:{backgroundColor:theme.colors.background}},React.createElement(TouchableRipple,{style:[styles.container,style],onPress:handlePress,onLongPress:onLongPress,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{expanded:isExpanded},accessibilityLabel:accessibilityLabel,testID:testID,delayPressIn:0,borderless:true},React.createElement(View,{style:styles.row,pointerEvents:\"none\"},left?left({color:isExpanded?theme.colors.primary:descriptionColor}):null,React.createElement(View,{style:[styles.item,styles.content]},React.createElement(Text,{selectable:false,numberOfLines:titleNumberOfLines,style:[styles.title,{color:isExpanded?theme.colors.primary:titleColor},titleStyle]},title),description?React.createElement(Text,{selectable:false,numberOfLines:descriptionNumberOfLines,style:[styles.description,{color:descriptionColor},descriptionStyle]},description):null),React.createElement(View,{style:[styles.item,description?styles.multiline:undefined]},right?right({isExpanded:isExpanded}):React.createElement(MaterialCommunityIcon,{name:isExpanded?'chevron-up':'chevron-down',color:titleColor,size:24,direction:I18nManager.isRTL?'rtl':'ltr'}))))),isExpanded?React.Children.map(children,function(child){if(left&&React.isValidElement(child)&&!child.props.left&&!child.props.right){return React.cloneElement(child,{style:[styles.child,child.props.style]});}return child;}):null);};ListAccordion.displayName='List.Accordion';var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row',alignItems:'center'},multiline:{height:40,alignItems:'center',justifyContent:'center'},title:{fontSize:16},description:{fontSize:14},item:{margin:8},child:{paddingLeft:64},content:{flex:1,justifyContent:'center'}});export default withTheme(ListAccordion);","map":{"version":3,"sources":["ListAccordion.tsx"],"names":["color","React","TouchableRipple","MaterialCommunityIcon","Text","withTheme","ListAccordionGroupContext","ListAccordion","left","right","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","expanded","expandedProp","accessibilityLabel","setExpanded","useState","handlePressAction","undefined","titleColor","colors","text","alpha","rgb","string","descriptionColor","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","handlePress","onAccordionPress","backgroundColor","background","styles","container","row","primary","item","content","multiline","I18nManager","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  I18nManager,\n  GestureResponderEvent,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  style,\n  id,\n  testID,\n  onPress,\n  onLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n}: Props) => {\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n\n  const handlePressAction = () => {\n    onPress?.();\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n  const descriptionColor = color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme.colors.background }}>\n        <TouchableRipple\n          style={[styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          delayPressIn={0}\n          borderless\n        >\n          <View style={styles.row} pointerEvents=\"none\">\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors.primary : descriptionColor,\n                })\n              : null}\n            <View style={[styles.item, styles.content]}>\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: isExpanded ? theme.colors.primary : titleColor,\n                  },\n                  titleStyle,\n                ]}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={titleColor}\n                  size={24}\n                  direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child, {\n                style: [styles.child, child.props.style],\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    margin: 8,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(ListAccordion);\n"]},"metadata":{},"sourceType":"module"}