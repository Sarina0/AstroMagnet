{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"color\",\"indeterminate\",\"style\",\"progress\",\"visible\",\"theme\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import setColor from'color';import{withTheme}from\"../core/theming\";var INDETERMINATE_DURATION=2000;var INDETERMINATE_MAX_WIDTH=0.6;var isRTL=I18nManager.isRTL;var ProgressBar=function ProgressBar(_ref){var color=_ref.color,indeterminate=_ref.indeterminate,style=_ref.style,_ref$progress=_ref.progress,progress=_ref$progress===void 0?0:_ref$progress,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(0)),timer=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(0)),fade=_React$useRef2.current;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),width=_React$useState2[0],setWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),prevWidth=_React$useState4[0],setPrevWidth=_React$useState4[1];var indeterminateAnimation=React.useRef(null);var scale=theme.animation.scale;var startAnimation=React.useCallback(function(){Animated.timing(fade,{duration:200*scale,toValue:1,useNativeDriver:true,isInteraction:false}).start();if(indeterminate){if(!indeterminateAnimation.current){indeterminateAnimation.current=Animated.timing(timer,{duration:INDETERMINATE_DURATION,toValue:1,useNativeDriver:Platform.OS!=='web',isInteraction:false});}timer.setValue(0);Animated.loop(indeterminateAnimation.current).start();}else{Animated.timing(timer,{duration:200*scale,toValue:progress?progress:0,useNativeDriver:true,isInteraction:false}).start();}},[scale,timer,progress,indeterminate,fade]);var stopAnimation=React.useCallback(function(){if(indeterminateAnimation.current){indeterminateAnimation.current.stop();}Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start();},[fade,scale]);React.useEffect(function(){if(visible)startAnimation();else stopAnimation();},[visible,startAnimation,stopAnimation]);React.useEffect(function(){if(visible&&prevWidth===0){startAnimation();}},[prevWidth,startAnimation,visible]);var onLayout=function onLayout(event){setPrevWidth(width);setWidth(event.nativeEvent.layout.width);};var tintColor=color||theme.colors.primary;var trackTintColor=setColor(tintColor).alpha(0.38).rgb().string();return React.createElement(View,_extends({onLayout:onLayout},rest,{accessible:true,accessibilityRole:\"progressbar\",accessibilityState:{busy:visible},accessibilityValue:indeterminate?{}:{min:0,max:100,now:progress*100}}),React.createElement(Animated.View,{style:[styles.container,{backgroundColor:trackTintColor,opacity:fade},style]},width?React.createElement(Animated.View,{style:[styles.progressBar,{width:width,backgroundColor:tintColor,transform:[{translateX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[(isRTL?1:-1)*0.5*width,(isRTL?1:-1)*0.5*INDETERMINATE_MAX_WIDTH*width,(isRTL?-1:1)*0.7*width]}:{inputRange:[0,1],outputRange:[(isRTL?1:-1)*0.5*width,0]})},{scaleX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[0.0001,INDETERMINATE_MAX_WIDTH,0.0001]}:{inputRange:[0,1],outputRange:[0.0001,1]})}]}]}):null));};var styles=StyleSheet.create({container:{height:4,overflow:'hidden'},progressBar:{flex:1}});export default withTheme(ProgressBar);","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["React","setColor","withTheme","INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","color","indeterminate","style","progress","visible","theme","rest","current","timer","useRef","Animated","Value","fade","width","setWidth","useState","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","Platform","OS","setValue","loop","stopAnimation","stop","useEffect","onLayout","event","nativeEvent","layout","tintColor","colors","primary","trackTintColor","alpha","rgb","string","busy","min","max","now","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","create","height","overflow","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}