{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"underlineColor\",\"outlineColor\",\"activeOutlineColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"left\",\"right\",\"placeholderTextColor\"],_excluded2=[\"fontSize\",\"fontWeight\",\"fontVariant\",\"lineHeight\",\"height\",\"backgroundColor\",\"textAlign\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import color from'color';import TextInputAdornment,{getAdornmentConfig,getAdornmentStyleAdjustmentForNativeInput}from\"./Adornment/TextInputAdornment\";import InputLabel from\"./Label/InputLabel\";import LabelBackground from\"./Label/LabelBackground\";import{MAXIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_FONT_SIZE,LABEL_WIGGLE_X_OFFSET,ADORNMENT_SIZE,ADORNMENT_OFFSET}from\"./constants\";import{calculateLabelTopPosition,calculateInputHeight,calculatePadding,adjustPaddingOut,interpolatePlaceholder,calculateOutlinedIconAndAffixTopPosition}from\"./helpers\";import{AdornmentType,AdornmentSide}from\"./Adornment/enums\";var OUTLINE_MINIMIZED_LABEL_Y_OFFSET=-6;var LABEL_PADDING_TOP=8;var MIN_HEIGHT=64;var MIN_DENSE_HEIGHT=48;var INPUT_PADDING_HORIZONTAL=14;var TextInputOutlined=function TextInputOutlined(_ref){var _affixTopPosition,_onAffixChange,_topPosition;var _ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$editable=_ref.editable,editable=_ref$editable===void 0?true:_ref$editable,label=_ref.label,_ref$error=_ref.error,error=_ref$error===void 0?false:_ref$error,selectionColor=_ref.selectionColor,_underlineColor=_ref.underlineColor,customOutlineColor=_ref.outlineColor,activeOutlineColor=_ref.activeOutlineColor,dense=_ref.dense,style=_ref.style,theme=_ref.theme,_ref$render=_ref.render,render=_ref$render===void 0?function(props){return React.createElement(NativeTextInput,props);}:_ref$render,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,parentState=_ref.parentState,innerRef=_ref.innerRef,onFocus=_ref.onFocus,forceFocus=_ref.forceFocus,onBlur=_ref.onBlur,onChangeText=_ref.onChangeText,onLayoutAnimatedText=_ref.onLayoutAnimatedText,onLeftAffixLayoutChange=_ref.onLeftAffixLayoutChange,onRightAffixLayoutChange=_ref.onRightAffixLayoutChange,left=_ref.left,right=_ref.right,placeholderTextColor=_ref.placeholderTextColor,rest=_objectWithoutProperties(_ref,_excluded);var adornmentConfig=getAdornmentConfig({left:left,right:right});var colors=theme.colors,fonts=theme.fonts;var font=fonts.regular;var hasActiveOutline=parentState.focused||error;var _ref4=StyleSheet.flatten(style)||{},fontSizeStyle=_ref4.fontSize,fontWeight=_ref4.fontWeight,fontVariant=_ref4.fontVariant,lineHeight=_ref4.lineHeight,height=_ref4.height,_ref4$backgroundColor=_ref4.backgroundColor,backgroundColor=_ref4$backgroundColor===void 0?colors.background:_ref4$backgroundColor,textAlign=_ref4.textAlign,viewStyle=_objectWithoutProperties(_ref4,_excluded2);var fontSize=fontSizeStyle||MAXIMIZED_LABEL_FONT_SIZE;var inputTextColor,activeColor,outlineColor,placeholderColor,errorColor;if(disabled){var isTransparent=color(customOutlineColor).alpha()===0;inputTextColor=activeColor=color(colors.text).alpha(0.54).rgb().string();placeholderColor=colors.disabled;outlineColor=isTransparent?customOutlineColor:colors.disabled;}else{inputTextColor=colors.text;activeColor=error?colors.error:activeOutlineColor||colors.primary;placeholderColor=colors.placeholder;outlineColor=customOutlineColor||colors.placeholder;errorColor=colors.error;}var labelScale=MINIMIZED_LABEL_FONT_SIZE/fontSize;var fontScale=MAXIMIZED_LABEL_FONT_SIZE/fontSize;var labelWidth=parentState.labelLayout.width;var labelHeight=parentState.labelLayout.height;var labelHalfWidth=labelWidth/2;var labelHalfHeight=labelHeight/2;var baseLabelTranslateX=(I18nManager.isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2-(fontSize-MINIMIZED_LABEL_FONT_SIZE)*labelScale);var labelTranslationXOffset=0;var isAdornmentLeftIcon=adornmentConfig.some(function(_ref2){var side=_ref2.side,type=_ref2.type;return side===AdornmentSide.Left&&type===AdornmentType.Icon;});if(isAdornmentLeftIcon){labelTranslationXOffset=(I18nManager.isRTL?-1:1)*(ADORNMENT_SIZE+ADORNMENT_OFFSET-8);}var minInputHeight=(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT)-LABEL_PADDING_TOP;var inputHeight=calculateInputHeight(labelHeight,height,minInputHeight);var topPosition=calculateLabelTopPosition(labelHeight,inputHeight,LABEL_PADDING_TOP);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}var paddingSettings={height:height?+height:null,labelHalfHeight:labelHalfHeight,offset:LABEL_PADDING_TOP,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition:topPosition,fontSize:fontSize,lineHeight:lineHeight,label:label,scale:fontScale,isAndroid:Platform.OS==='android',styles:StyleSheet.flatten(dense?styles.inputOutlinedDense:styles.inputOutlined)};var pad=calculatePadding(paddingSettings);var paddingOut=adjustPaddingOut(_objectSpread(_objectSpread({},paddingSettings),{},{pad:pad}));var baseLabelTranslateY=-labelHalfHeight-(topPosition+OUTLINE_MINIMIZED_LABEL_Y_OFFSET);var placeholderOpacity=hasActiveOutline?interpolatePlaceholder(parentState.labeled,hasActiveOutline):parentState.labelLayout.measured?1:0;var labelProps={label:label,onLayoutAnimatedText:onLayoutAnimatedText,placeholderOpacity:placeholderOpacity,error:error,placeholderStyle:styles.placeholder,baseLabelTranslateY:baseLabelTranslateY,baseLabelTranslateX:baseLabelTranslateX,font:font,fontSize:fontSize,fontWeight:fontWeight,labelScale:labelScale,wiggleOffsetX:LABEL_WIGGLE_X_OFFSET,topPosition:topPosition,hasActiveOutline:hasActiveOutline,activeColor:activeColor,placeholderColor:placeholderColor,backgroundColor:backgroundColor,errorColor:errorColor,labelTranslationXOffset:labelTranslationXOffset,roundness:theme.roundness,maxFontSizeMultiplier:rest.maxFontSizeMultiplier};var minHeight=height||(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT);var leftLayout=parentState.leftLayout,rightLayout=parentState.rightLayout;var leftAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:leftLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:rightLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var iconTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:ADORNMENT_SIZE,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixWidth=right?rightLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var leftAffixWidth=left?leftLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var adornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput({adornmentConfig:adornmentConfig,rightAffixWidth:rightAffixWidth,leftAffixWidth:leftAffixWidth,mode:'outlined'});var affixTopPosition=(_affixTopPosition={},_defineProperty(_affixTopPosition,AdornmentSide.Left,leftAffixTopPosition),_defineProperty(_affixTopPosition,AdornmentSide.Right,rightAffixTopPosition),_affixTopPosition);var onAffixChange=(_onAffixChange={},_defineProperty(_onAffixChange,AdornmentSide.Left,onLeftAffixLayoutChange),_defineProperty(_onAffixChange,AdornmentSide.Right,onRightAffixLayoutChange),_onAffixChange);var adornmentProps={adornmentConfig:adornmentConfig,forceFocus:forceFocus,topPosition:(_topPosition={},_defineProperty(_topPosition,AdornmentType.Icon,iconTopPosition),_defineProperty(_topPosition,AdornmentType.Affix,affixTopPosition),_topPosition),onAffixChange:onAffixChange,isTextInputFocused:parentState.focused,maxFontSizeMultiplier:rest.maxFontSizeMultiplier};if(adornmentConfig.length){adornmentProps=_objectSpread(_objectSpread({},adornmentProps),{},{left:left,right:right,textStyle:_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight}),visible:parentState.labeled});}return React.createElement(View,{style:viewStyle},React.createElement(Outline,{theme:theme,hasActiveOutline:hasActiveOutline,focused:parentState.focused,activeColor:activeColor,outlineColor:outlineColor,backgroundColor:backgroundColor}),React.createElement(View,null,React.createElement(View,{style:[styles.labelContainer,{paddingTop:LABEL_PADDING_TOP,minHeight:minHeight}]},React.createElement(InputLabel,{parentState:parentState,labelProps:labelProps,labelBackground:LabelBackground,maxFontSizeMultiplier:rest.maxFontSizeMultiplier}),render===null||render===void 0?void 0:render(_objectSpread(_objectSpread({testID:'text-input-outlined'},rest),{},{ref:innerRef,onChangeText:onChangeText,placeholder:label?parentState.placeholder:rest.placeholder,placeholderTextColor:placeholderTextColor||placeholderColor,editable:!disabled&&editable,selectionColor:typeof selectionColor==='undefined'?activeColor:selectionColor,onFocus:onFocus,onBlur:onBlur,underlineColorAndroid:'transparent',multiline:multiline,style:[styles.input,!multiline||multiline&&height?{height:inputHeight}:{},paddingOut,_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight,fontVariant:fontVariant,color:inputTextColor,textAlignVertical:multiline?'top':'center',textAlign:textAlign?textAlign:I18nManager.isRTL?'right':'left'}),Platform.OS==='web'&&{outline:'none'},adornmentStyleAdjustmentForNativeInput]}))),React.createElement(TextInputAdornment,adornmentProps)));};export default TextInputOutlined;var Outline=function Outline(_ref3){var theme=_ref3.theme,hasActiveOutline=_ref3.hasActiveOutline,activeColor=_ref3.activeColor,outlineColor=_ref3.outlineColor,focused=_ref3.focused,backgroundColor=_ref3.backgroundColor;return React.createElement(View,{testID:\"text-input-outline\",pointerEvents:\"none\",style:[styles.outline,{backgroundColor:backgroundColor,borderRadius:theme.roundness,borderWidth:focused?2:1,borderColor:hasActiveOutline?activeColor:outlineColor}]});};var styles=StyleSheet.create({placeholder:{position:'absolute',left:0,paddingHorizontal:INPUT_PADDING_HORIZONTAL},outline:{position:'absolute',left:0,right:0,top:6,bottom:0},labelContainer:{paddingBottom:0},input:{flexGrow:1,paddingHorizontal:INPUT_PADDING_HORIZONTAL,margin:0,zIndex:1},inputOutlined:{paddingTop:8,paddingBottom:8},inputOutlinedDense:{paddingTop:4,paddingBottom:4}});","map":{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","fontVariant","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","alpha","text","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","roundness","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","testID","ref","underlineColorAndroid","input","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"mappings":"u2CAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAAA,2TAUA,MAAOC,MAAP,KAAkB,OAAlB,CACA,MAAOC,mBAAP,EACEC,kBADF,CAEEC,yCAFF,sCAMA,MAAOC,WAAP,0BACA,MAAOC,gBAAP,+BAGA,OACEC,yBADF,CAEEC,yBAFF,CAGEC,qBAHF,CAIEC,cAJF,CAKEC,gBALF,mBAQA,OACEC,yBADF,CAEEC,oBAFF,CAGEC,gBAHF,CAIEC,gBAJF,CAMEC,sBANF,CAOEC,wCAPF,iBASA,OAASC,aAAT,CAAwBC,aAAxB,yBAEA,GAAMC,iCAAgC,CAAG,CAAC,CAA1C,CACA,GAAMC,kBAAiB,CAAG,CAA1B,CACA,GAAMC,WAAU,CAAG,EAAnB,CACA,GAAMC,iBAAgB,CAAG,EAAzB,CACA,GAAMC,yBAAwB,CAAG,EAAjC,CAEA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,CAAG,IAAA,CA2BC,mDA3BA,kBA2BA,IAAA,CA1BzBC,QAAQ,CAARA,QAAQ,wBAAG,KADc,6BA2BA,IAAA,CAzBzBC,QAAQ,CAARA,QAAQ,wBAAG,IAFc,eAGzBC,KAHyB,CA2BA,IAAA,CAxBzBA,KAHyB,YA2BA,IAAA,CAvBzBC,KAAK,CAALA,KAAK,qBAAG,KAJiB,YAKzBC,cALyB,CA2BA,IAAA,CAtBzBA,cALyB,CAMTE,eANS,CA2BA,IAAA,CArBzBD,cAAc,CACAG,kBAPW,CA2BA,IAAA,CApBzBD,YAAY,CACZE,kBARyB,CA2BA,IAAA,CAnBzBA,kBARyB,CASzBC,KATyB,CA2BA,IAAA,CAlBzBA,KATyB,CAUzBC,KAVyB,CA2BA,IAAA,CAjBzBA,KAVyB,CAWzBC,KAXyB,CA2BA,IAAA,CAhBzBA,KAXyB,aA2BA,IAAA,CAfzBC,MAAM,CAANA,MAAM,sBAAIC,SAAAA,KAAD,QAAwB,MAAA,CAAA,aAAA,CAAC,eAAD,CAAqBA,KAArB,CAZR,8BA2BA,IAAA,CAdzBC,SAAS,CAATA,SAAS,yBAAG,KAba,gBAczBC,WAdyB,CA2BA,IAAA,CAbzBA,WAdyB,CAezBC,QAfyB,CA2BA,IAAA,CAZzBA,QAfyB,CAgBzBC,OAhByB,CA2BA,IAAA,CAXzBA,OAhByB,CAiBzBC,UAjByB,CA2BA,IAAA,CAVzBA,UAjByB,CAkBzBC,MAlByB,CA2BA,IAAA,CATzBA,MAlByB,CAmBzBC,YAnByB,CA2BA,IAAA,CARzBA,YAnByB,CAoBzBC,oBApByB,CA2BA,IAAA,CAPzBA,oBApByB,CAqBzBC,uBArByB,CA2BA,IAAA,CANzBA,uBArByB,CAsBzBC,wBAtByB,CA2BA,IAAA,CALzBA,wBAtByB,CAuBzBC,IAvByB,CA2BA,IAAA,CAJzBA,IAvByB,CAwBzBC,KAxByB,CA2BA,IAAA,CAHzBA,KAxByB,CAyBzBC,oBAzByB,CA2BA,IAAA,CAFzBA,oBAzByB,CA0BtBC,IAAAA,0BACsB,IAAA,YACzB,GAAMC,gBAAe,CAAGpD,kBAAkB,CAAC,CAAEgD,IAAF,CAAEA,IAAF,CAAQC,KAAAA,CAAAA,KAAR,CAAD,CAA1C,CAEA,GAAQI,OAAF,CAAoBlB,KAA1B,CAAQkB,MAAF,CAAUC,KAAAA,CAAUnB,KAA1B,CAAgBmB,KAAAA,CAChB,GAAMC,KAAI,CAAGD,KAAK,CAACE,OAAnB,CACA,GAAMC,iBAAgB,CAAGlB,WAAW,CAACmB,OAAZnB,EAAuBb,KAAhD,CAEA,UASK2C,UAAU,CAACC,OAAXD,CAAmBnC,KAAnBmC,CAAAA,EAA6B,CAAA,CATlC,CACYT,aADN,OACJD,QAAQ,CACRE,UAFI,OAEJA,UAFI,CAGJC,WAHI,OAGJA,WAHI,CAIJC,UAJI,OAIJA,UAJI,CAKJC,MALI,OAKJA,MALI,6BAMJC,eAAe,CAAfA,eAAe,gCAAGZ,MAAM,CAACa,UANrB,uBAOJC,SAPI,OAOJA,SAPI,CAQDC,SAAAA,4CAEL,GAAMT,SAAQ,CAAGC,aAAa,EAAIxD,yBAAlC,CAEA,GAAImE,eAAJ,CAAoBC,WAApB,CAAiC1C,YAAjC,CAA+C2C,gBAA/C,CAAiEC,UAAjE,CAEA,GAAInD,QAAJ,CAAc,CACZ,GAAMoD,cAAa,CAAG7E,KAAK,CAACiC,kBAAD,CAALjC,CAA0B8E,KAA1B9E,EAAAA,GAAsC,CAA5D,CACAyE,cAAc,CAAGC,WAAW,CAAG1E,KAAK,CAACuD,MAAM,CAACwB,IAAR,CAAL/E,CAC5B8E,KAD4B9E,CACtB,IADsBA,CAAAA,CAE5BgF,GAF4BhF,EAAAA,CAG5BiF,MAH4BjF,EAA/ByE,CAIAE,gBAAgB,CAAGpB,MAAM,CAAC9B,QAA1BkD,CACA3C,YAAY,CAAG6C,aAAa,CAAG5C,kBAAH,CAAwBsB,MAAM,CAAC9B,QAA3DO,CACD,CARD,IAQO,CACLyC,cAAc,CAAGlB,MAAM,CAACwB,IAAxBN,CACAC,WAAW,CAAG9C,KAAK,CAAG2B,MAAM,CAAC3B,KAAV,CAAkBM,kBAAkB,EAAIqB,MAAM,CAAC2B,OAAlER,CACAC,gBAAgB,CAAGpB,MAAM,CAAC4B,WAA1BR,CACA3C,YAAY,CAAGC,kBAAkB,EAAIsB,MAAM,CAAC4B,WAA5CnD,CACA4C,UAAU,CAAGrB,MAAM,CAAC3B,KAApBgD,CACD,CAED,GAAMQ,WAAU,CAAG7E,yBAAyB,CAAGsD,QAA/C,CACA,GAAMwB,UAAS,CAAG/E,yBAAyB,CAAGuD,QAA9C,CAEA,GAAMyB,WAAU,CAAG7C,WAAW,CAAC8C,WAAZ9C,CAAwB+C,KAA3C,CACA,GAAMC,YAAW,CAAGhD,WAAW,CAAC8C,WAAZ9C,CAAwByB,MAA5C,CACA,GAAMwB,eAAc,CAAGJ,UAAU,CAAG,CAApC,CACA,GAAMK,gBAAe,CAAGF,WAAW,CAAG,CAAtC,CAEA,GAAMG,oBAAmB,CACvB,CAACC,WAAW,CAACC,KAAZD,CAAoB,CAApBA,CAAwB,CAAC,CAA1B,GACCH,cAAc,CACZN,UAAU,CAAGE,UAAd,CAA4B,CAD7BI,CAEC,CAAC7B,QAAQ,CAAGtD,yBAAZ,EAAyC6E,UAH3C,CADF,CAMA,GAAIW,wBAAuB,CAAG,CAA9B,CACA,GAAMC,oBAAmB,CAAG,eAAe,CAACC,IAAhB,CAC1B,SAAA,KAAA,CAAA,CAAA,GAAGC,KAAF,CAAD,KAAA,CAAGA,IAAF,CAAQC,IAAAA,CAAT,KAAA,CAASA,IAAAA,CAAT,MACED,KAAI,GAAKhF,aAAa,CAACkF,IAAvBF,EAA+BC,IAAI,GAAKlF,aAAa,CAACoF,IADxD,CAAA,CAD0B,CAA5B,CAIA,GAAIL,mBAAJ,CAAyB,CACvBD,uBAAuB,CACrB,CAACF,WAAW,CAACC,KAAZD,CAAoB,CAAC,CAArBA,CAAyB,CAA1B,GAAgCpF,cAAc,CAAGC,gBAAjBD,CAAoC,CAApE,CADFsF,CAED,CAED,GAAMO,eAAc,CAClB,CAACnE,KAAK,CAAGb,gBAAH,CAAsBD,UAA5B,EAA0CD,iBAD5C,CAGA,GAAMmF,YAAW,CAAG3F,oBAAoB,CAAC6E,WAAD,CAAcvB,MAAd,CAAsBoC,cAAtB,CAAxC,CAEA,GAAME,YAAW,CAAG7F,yBAAyB,CAC3C8E,WAD2C,CAE3Cc,WAF2C,CAG3CnF,iBAH2C,CAA7C,CAMA,GAAI8C,MAAM,EAAI,MAAOA,OAAP,GAAkB,QAAhC,CAA0C,CAExCuC,OAAO,CAACC,IAARD,CAAa,kDAAbA,CAAAA,CACD,CAED,GAAME,gBAAe,CAAG,CACtBzC,MAAM,CAAEA,MAAM,CAAG,CAACA,MAAJ,CAAa,IADL,CAEtByB,eAFsB,CAEtBA,eAFsB,CAGtBiB,MAAM,CAAExF,iBAHc,CAItBoB,SAAS,CAAEA,SAAS,CAAGA,SAAH,CAAe,IAJb,CAKtBL,KAAK,CAAEA,KAAK,CAAGA,KAAH,CAAW,IALD,CAMtBqE,WANsB,CAMtBA,WANsB,CAOtB3C,QAPsB,CAOtBA,QAPsB,CAQtBI,UARsB,CAQtBA,UARsB,CAStBtC,KATsB,CAStBA,KATsB,CAUtBkF,KAAK,CAAExB,SAVe,CAWtByB,SAAS,CAAEC,QAAQ,CAACC,EAATD,GAAgB,SAXL,CAYtBE,MAAM,CAAE1C,UAAU,CAACC,OAAXD,CACNpC,KAAK,CAAG8E,MAAM,CAACC,kBAAV,CAA+BD,MAAM,CAACE,aADrC5C,CAZc,CAAxB,CAiBA,GAAM6C,IAAG,CAAGvG,gBAAgB,CAAC8F,eAAD,CAA5B,CAEA,GAAMU,WAAU,CAAGvG,gBAAgB,gCAAM6F,eAAL,MAAsBS,GAAAA,CAAAA,GAAAA,GAA1D,CAEA,GAAME,oBAAmB,CACvB,CAAC3B,eAAD,EAAoBa,WAAW,CAAGrF,gCAAlC,CADF,CAGA,GAAMoG,mBAAkB,CAAG5D,gBAAgB,CACvC5C,sBAAsB,CAAC0B,WAAW,CAAC+E,OAAb,CAAsB7D,gBAAtB,CADiB,CAEvClB,WAAW,CAAC8C,WAAZ9C,CAAwBgF,QAAxBhF,CACA,CADAA,CAEA,CAJJ,CAMA,GAAMiF,WAAU,CAAG,CACjB/F,KADiB,CACjBA,KADiB,CAEjBoB,oBAFiB,CAEjBA,oBAFiB,CAGjBwE,kBAHiB,CAGjBA,kBAHiB,CAIjB3F,KAJiB,CAIjBA,KAJiB,CAKjB+F,gBAAgB,CAAEV,MAAM,CAAC9B,WALR,CAMjBmC,mBANiB,CAMjBA,mBANiB,CAOjB1B,mBAPiB,CAOjBA,mBAPiB,CAQjBnC,IARiB,CAQjBA,IARiB,CASjBI,QATiB,CASjBA,QATiB,CAUjBE,UAViB,CAUjBA,UAViB,CAWjBqB,UAXiB,CAWjBA,UAXiB,CAYjBwC,aAAa,CAAEpH,qBAZE,CAajBgG,WAbiB,CAajBA,WAbiB,CAcjB7C,gBAdiB,CAcjBA,gBAdiB,CAejBe,WAfiB,CAejBA,WAfiB,CAgBjBC,gBAhBiB,CAgBjBA,gBAhBiB,CAiBjBR,eAAe,CAAEA,eAjBA,CAkBjBS,UAlBiB,CAkBjBA,UAlBiB,CAmBjBmB,uBAnBiB,CAmBjBA,uBAnBiB,CAoBjB8B,SAAS,CAAExF,KAAK,CAACwF,SApBA,CAqBjBC,qBAAqB,CAAEzE,IAAI,CAACyE,qBArBX,CAAnB,CAwBA,GAAMC,UAAS,CAAI7D,MAAM,GACtB/B,KAAK,CAAGb,gBAAH,CAAsBD,UADL,CAAzB,CAGA,GAAQ2G,WAAF,CAA8BvF,WAApC,CAAQuF,UAAF,CAAcC,WAAAA,CAAgBxF,WAApC,CAAoBwF,WAAAA,CAEpB,GAAMC,qBAAoB,CAAGlH,wCAAwC,CAAC,CACpEkD,MAAM,CAAE6D,SAD4D,CAEpEI,WAAW,CAAEH,UAAU,CAAC9D,MAAX8D,EAAqB,CAFkC,CAGpEI,YAAY,CAAE,CAACjH,gCAHqD,CAAD,CAArE,CAMA,GAAMkH,sBAAqB,CAAGrH,wCAAwC,CAAC,CACrEkD,MAAM,CAAE6D,SAD6D,CAErEI,WAAW,CAAEF,WAAW,CAAC/D,MAAZ+D,EAAsB,CAFkC,CAGrEG,YAAY,CAAE,CAACjH,gCAHsD,CAAD,CAAtE,CAKA,GAAMmH,gBAAe,CAAGtH,wCAAwC,CAAC,CAC/DkD,MAAM,CAAE6D,SADuD,CAE/DI,WAAW,CAAE1H,cAFkD,CAG/D2H,YAAY,CAAE,CAACjH,gCAHgD,CAAD,CAAhE,CAMA,GAAMoH,gBAAe,CAAGpF,KAAK,CACzB8E,WAAW,CAACzC,KAAZyC,EAAqBxH,cADI,CAEzBA,cAFJ,CAIA,GAAM+H,eAAc,CAAGtF,IAAI,CACvB8E,UAAU,CAACxC,KAAXwC,EAAoBvH,cADG,CAEvBA,cAFJ,CAIA,GAAMgI,uCAAsC,CAC1CtI,yCAAyC,CAAC,CACxCmD,eADwC,CACxCA,eADwC,CAExCiF,eAFwC,CAExCA,eAFwC,CAGxCC,cAHwC,CAGxCA,cAHwC,CAIxCE,IAAI,CAAE,UAJkC,CAAD,CAD3C,CAOA,GAAMC,iBAAgB,yDACnBzH,aAAa,CAACkF,IAAf,CAAsB8B,oBADC,oCAEtBhH,aAAa,CAAC0H,KAAf,CAAuBP,qBAAAA,oBAFzB,CAIA,GAAMQ,cAAa,mDAChB3H,aAAa,CAACkF,IAAf,CAAsBpD,uBADF,iCAEnB9B,aAAa,CAAC0H,KAAf,CAAuB3F,wBAAAA,iBAFzB,CAKA,GAAI6F,eAAuC,CAAG,CAC5CxF,eAD4C,CAC5CA,eAD4C,CAE5CV,UAF4C,CAE5CA,UAF4C,CAG5C4D,WAAW,+CACRvF,aAAa,CAACoF,IAAf,CAAsBiC,eADX,+BAEVrH,aAAa,CAAC8H,KAAf,CAAuBJ,gBAAAA,eALmB,CAO5CE,aAP4C,CAO5CA,aAP4C,CAQ5CG,kBAAkB,CAAEvG,WAAW,CAACmB,OARY,CAS5CkE,qBAAqB,CAAEzE,IAAI,CAACyE,qBATgB,CAA9C,CAWA,GAAIxE,eAAe,CAAC2F,MAApB,CAA4B,CAC1BH,cAAc,gCACTA,cADY,MAEf5F,IAFe,CAEfA,IAFe,CAGfC,KAHe,CAGfA,KAHe,CAIf+F,SAAS,gCAAOzF,IAAL,MAAWI,QAAX,CAAWA,QAAX,CAAqBE,UAAAA,CAAAA,UAAAA,EAJjB,CAKfoF,OAAO,CAAE1G,WAAW,CAAC+E,OAAAA,EALvBsB,CAOD,CAED,MACE,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CAAM,KAAK,CAAExE,SAAb,CAAA,CAME,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,CACE,KAAK,CAAEjC,KADT,CAEE,gBAAgB,CAAEsB,gBAFpB,CAGE,OAAO,CAAElB,WAAW,CAACmB,OAHvB,CAIE,WAAW,CAAEc,WAJf,CAKE,YAAY,CAAE1C,YALhB,CAME,eAAe,CAAEmC,eANnB,CAAA,CANF,CAcE,KAAA,CAAA,aAAA,CAAC,IAAD,CAAA,IAAA,CACE,KAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CACE,KAAK,CAAE,CACL8C,MAAM,CAACmC,cADF,CAEL,CACEC,UAAU,CAAEjI,iBADd,CAEE2G,SAAAA,CAAAA,SAFF,CAFK,CADT,CAAA,CASE,KAAA,CAAA,aAAA,CAAC,UAAD,CAAA,CACE,WAAW,CAAEtF,WADf,CAEE,UAAU,CAAEiF,UAFd,CAGE,eAAe,CAAErH,eAHnB,CAIE,qBAAqB,CAAEgD,IAAI,CAACyE,qBAJ9B,CAAA,CATF,CAeGxF,MAfH,GAAA,IAAA,EAeGA,MAfH,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAeGA,MAAM,8BACLgH,MAAM,CAAE,qBADA,EAELjG,IAFK,MAGRkG,GAAG,CAAE7G,QAHG,CAIRI,YAJQ,CAIRA,YAJQ,CAKRqC,WAAW,CAAExD,KAAK,CAAGc,WAAW,CAAC0C,WAAf,CAA6B9B,IAAI,CAAC8B,WAL5C,CAMR/B,oBAAoB,CAAEA,oBAAoB,EAAIuB,gBANtC,CAORjD,QAAQ,CAAE,CAACD,QAAD,EAAaC,QAPf,CAQRG,cAAc,CACZ,MAAOA,eAAP,GAA0B,WAA1B,CACI6C,WADJ,CAEI7C,cAXE,CAYRc,OAZQ,CAYRA,OAZQ,CAaRE,MAbQ,CAaRA,MAbQ,CAcR2G,qBAAqB,CAAE,aAdf,CAeRhH,SAfQ,CAeRA,SAfQ,CAgBRJ,KAAK,CAAE,CACL6E,MAAM,CAACwC,KADF,CAEL,CAACjH,SAAD,EAAeA,SAAS,EAAI0B,MAA5B,CACI,CAAEA,MAAM,CAAEqC,WAAV,CADJ,CAEI,CAAA,CAJC,CAKLc,UALK,gCAOA5D,IADL,MAEEI,QAFF,CAEEA,QAFF,CAGEE,UAHF,CAGEA,UAHF,CAIEC,WAJF,CAIEA,WAJF,CAKEhE,KAAK,CAAEyE,cALT,CAMEiF,iBAAiB,CAAElH,SAAS,CAAG,KAAH,CAAW,QANzC,CAOE6B,SAAS,CAAEA,SAAS,CAChBA,SADgB,CAEhBwB,WAAW,CAACC,KAAZD,CACA,OADAA,CAEA,MAAA,GAENkB,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,EAAyB,CAAE4C,OAAO,CAAE,MAAX,CAnBpB,CAoBLlB,sCApBK,CAAA,GA/BX,CADF,CAwDE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAwBK,cAAxB,CAxDF,CAdF,CADF,CA2ED,CA5SD,CA8SA,cAAetH,kBAAf,CAWA,GAAMoI,QAAO,CAAG,QAAVA,QAAO,CAAG,KAAA,CAAA,CAAA,GACdvH,MADe,CAAD,KAAA,CACdA,KADe,CAEfsB,gBAFe,CAAD,KAAA,CAEdA,gBAFe,CAGfe,WAHe,CAAD,KAAA,CAGdA,WAHe,CAIf1C,YAJe,CAAD,KAAA,CAIdA,YAJe,CAKf4B,OALe,CAAD,KAAA,CAKdA,OALe,CAMfO,eAAAA,CANc,KAAA,CAMdA,eAAAA,CANc,MAQd,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CACE,MAAM,CAAC,oBADT,CAEE,aAAa,CAAC,MAFhB,CAGE,KAAK,CAAE,CACL8C,MAAM,CAAC0C,OADF,CAGL,CACExF,eADF,CACEA,eADF,CAEE0F,YAAY,CAAExH,KAAK,CAACwF,SAFtB,CAGEiC,WAAW,CAAElG,OAAO,CAAG,CAAH,CAAO,CAH7B,CAIEmG,WAAW,CAAEpG,gBAAgB,CAAGe,WAAH,CAAiB1C,YAJhD,CAHK,CAHT,CAAA,CARc,CAAA,CAAhB,CAwBA,GAAMiF,OAAM,CAAG,UAAU,CAAC+C,MAAX,CAAkB,CAC/B7E,WAAW,CAAE,CACX8E,QAAQ,CAAE,UADC,CAEX/G,IAAI,CAAE,CAFK,CAGXgH,iBAAiB,CAAE3I,wBAHR,CADkB,CAM/BoI,OAAO,CAAE,CACPM,QAAQ,CAAE,UADH,CAEP/G,IAAI,CAAE,CAFC,CAGPC,KAAK,CAAE,CAHA,CAIPgH,GAAG,CAAE,CAJE,CAKPC,MAAM,CAAE,CALD,CANsB,CAa/BhB,cAAc,CAAE,CACdiB,aAAa,CAAE,CADD,CAbe,CAgB/BZ,KAAK,CAAE,CACLa,QAAQ,CAAE,CADL,CAELJ,iBAAiB,CAAE3I,wBAFd,CAGLgJ,MAAM,CAAE,CAHH,CAILC,MAAM,CAAE,CAJH,CAhBwB,CAsB/BrD,aAAa,CAAE,CACbkC,UAAU,CAAE,CADC,CAEbgB,aAAa,CAAE,CAFF,CAtBgB,CA0B/BnD,kBAAkB,CAAE,CAClBmC,UAAU,CAAE,CADM,CAElBgB,aAAa,CAAE,CAFG,CA1BW,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    fontVariant,\n    lineHeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    const isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        theme={theme}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: 'text-input-outlined',\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                fontVariant,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  activeColor: string;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  backgroundColor: ColorValue;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  focused,\n  backgroundColor,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: focused ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}