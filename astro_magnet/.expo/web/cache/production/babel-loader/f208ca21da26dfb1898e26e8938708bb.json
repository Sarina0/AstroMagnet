{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Icon,{isValidIcon,isEqualIcon}from\"./Icon\";import{withTheme}from\"../core/theming\";var CrossFadeIcon=function CrossFadeIcon(_ref){var color=_ref.color,size=_ref.size,source=_ref.source,theme=_ref.theme;var _React$useState=React.useState(function(){return source;}),_React$useState2=_slicedToArray(_React$useState,2),currentIcon=_React$useState2[0],setCurrentIcon=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),previousIcon=_React$useState4[0],setPreviousIcon=_React$useState4[1];var _React$useRef=React.useRef(new Animated.Value(1)),fade=_React$useRef.current;var scale=theme.animation.scale;if(currentIcon!==source){setPreviousIcon(function(){return currentIcon;});setCurrentIcon(function(){return source;});}React.useEffect(function(){if(isValidIcon(previousIcon)&&!isEqualIcon(previousIcon,currentIcon)){fade.setValue(1);Animated.timing(fade,{duration:scale*200,toValue:0,useNativeDriver:true}).start();}},[currentIcon,previousIcon,fade,scale]);var opacityPrev=fade;var opacityNext=previousIcon?fade.interpolate({inputRange:[0,1],outputRange:[1,0]}):1;var rotatePrev=fade.interpolate({inputRange:[0,1],outputRange:['-90deg','0deg']});var rotateNext=previousIcon?fade.interpolate({inputRange:[0,1],outputRange:['0deg','-180deg']}):'0deg';return React.createElement(View,{style:[styles.content,{height:size,width:size}]},previousIcon?React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityPrev,transform:[{rotate:rotatePrev}]}]},React.createElement(Icon,{source:previousIcon,size:size,color:color})):null,React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityNext,transform:[{rotate:rotateNext}]}]},React.createElement(Icon,{source:currentIcon,size:size,color:color})));};export default withTheme(CrossFadeIcon);var styles=StyleSheet.create({content:{alignItems:'center',justifyContent:'center'},icon:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Animated","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}