{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{isAndroid,isBoolean,isString,isNull,isValidUrl}from'@react-native-firebase/app/lib/common';import{createModuleNamespace,FirebaseModule,getFirebaseRoot}from'@react-native-firebase/app/lib/internal';import ConfirmationResult from\"./ConfirmationResult\";import PhoneAuthListener from\"./PhoneAuthListener\";import EmailAuthProvider from\"./providers/EmailAuthProvider\";import FacebookAuthProvider from\"./providers/FacebookAuthProvider\";import GithubAuthProvider from\"./providers/GithubAuthProvider\";import GoogleAuthProvider from\"./providers/GoogleAuthProvider\";import OAuthProvider from\"./providers/OAuthProvider\";import PhoneAuthProvider from\"./providers/PhoneAuthProvider\";import PhoneMultiFactorGenerator from\"./PhoneMultiFactorGenerator\";import TwitterAuthProvider from\"./providers/TwitterAuthProvider\";import AppleAuthProvider from\"./providers/AppleAuthProvider\";import Settings from\"./Settings\";import User from\"./User\";import version from\"./version\";import{getMultiFactorResolver as _getMultiFactorResolver}from\"./getMultiFactorResolver\";import{multiFactor,MultiFactorUser}from\"./multiFactor\";var statics={AppleAuthProvider:AppleAuthProvider,EmailAuthProvider:EmailAuthProvider,PhoneAuthProvider:PhoneAuthProvider,GoogleAuthProvider:GoogleAuthProvider,GithubAuthProvider:GithubAuthProvider,TwitterAuthProvider:TwitterAuthProvider,FacebookAuthProvider:FacebookAuthProvider,PhoneMultiFactorGenerator:PhoneMultiFactorGenerator,OAuthProvider:OAuthProvider,PhoneAuthState:{CODE_SENT:'sent',AUTO_VERIFY_TIMEOUT:'timeout',AUTO_VERIFIED:'verified',ERROR:'error'},getMultiFactorResolver:_getMultiFactorResolver,multiFactor:multiFactor};var namespace='auth';var nativeModuleName='RNFBAuthModule';var FirebaseAuthModule=function(_FirebaseModule){_inherits(FirebaseAuthModule,_FirebaseModule);var _super=_createSuper(FirebaseAuthModule);function FirebaseAuthModule(){var _this;_classCallCheck(this,FirebaseAuthModule);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._user=null;_this._settings=null;_this._authResult=false;_this._languageCode=_this.native.APP_LANGUAGE[_this.app._name];_this._tenantId=null;if(!_this.languageCode){_this._languageCode=_this.native.APP_LANGUAGE['[DEFAULT]'];}if(_this.native.APP_USER[_this.app._name]){_this._setUser(_this.native.APP_USER[_this.app._name]);}_this.emitter.addListener(_this.eventNameForApp('auth_state_changed'),function(event){_this._setUser(event.user);_this.emitter.emit(_this.eventNameForApp('onAuthStateChanged'),_this._user);});_this.emitter.addListener(_this.eventNameForApp('phone_auth_state_changed'),function(event){var eventKey=\"phone:auth:\"+event.requestKey+\":\"+event.type;_this.emitter.emit(eventKey,event.state);});_this.emitter.addListener(_this.eventNameForApp('auth_id_token_changed'),function(auth){_this._setUser(auth.user);_this.emitter.emit(_this.eventNameForApp('onIdTokenChanged'),_this._user);});_this.native.addAuthStateListener();_this.native.addIdTokenListener();return _this;}_createClass(FirebaseAuthModule,[{key:\"languageCode\",get:function get(){return this._languageCode;}},{key:\"tenantId\",get:function get(){return this._tenantId;}},{key:\"settings\",get:function get(){if(!this._settings){this._settings=new Settings(this);}return this._settings;}},{key:\"currentUser\",get:function get(){return this._user;}},{key:\"_setUser\",value:function _setUser(user){this._user=user?new User(this,user):null;this._authResult=true;this.emitter.emit(this.eventNameForApp('onUserChanged'),this._user);return this._user;}},{key:\"_setUserCredential\",value:function _setUserCredential(userCredential){var user=new User(this,userCredential.user);this._user=user;this._authResult=true;this.emitter.emit(this.eventNameForApp('onUserChanged'),this._user);return{additionalUserInfo:userCredential.additionalUserInfo,user:user};}},{key:\"setLanguageCode\",value:function(){var _setLanguageCode=_asyncToGenerator(function*(code){if(!isString(code)&&!isNull(code)){throw new Error(\"firebase.auth().setLanguageCode(*) expected 'languageCode' to be a string or null value\");}yield this.native.setLanguageCode(code);if(code===null){this._languageCode=this.native.APP_LANGUAGE[this.app._name];if(!this.languageCode){this._languageCode=this.native.APP_LANGUAGE['[DEFAULT]'];}}else{this._languageCode=code;}});function setLanguageCode(_x){return _setLanguageCode.apply(this,arguments);}return setLanguageCode;}()},{key:\"setTenantId\",value:function(){var _setTenantId=_asyncToGenerator(function*(tenantId){if(!isString(tenantId)){throw new Error(\"firebase.auth().setTenantId(*) expected 'tenantId' to be a string\");}this._tenantId=tenantId;yield this.native.setTenantId(tenantId);});function setTenantId(_x2){return _setTenantId.apply(this,arguments);}return setTenantId;}()},{key:\"_parseListener\",value:function _parseListener(listenerOrObserver){return typeof listenerOrObserver==='object'?listenerOrObserver.next.bind(listenerOrObserver):listenerOrObserver;}},{key:\"onAuthStateChanged\",value:function onAuthStateChanged(listenerOrObserver){var _this2=this;var listener=this._parseListener(listenerOrObserver);var subscription=this.emitter.addListener(this.eventNameForApp('onAuthStateChanged'),listener);if(this._authResult){Promise.resolve().then(function(){listener(_this2._user||null);});}return function(){return subscription.remove();};}},{key:\"onIdTokenChanged\",value:function onIdTokenChanged(listenerOrObserver){var _this3=this;var listener=this._parseListener(listenerOrObserver);var subscription=this.emitter.addListener(this.eventNameForApp('onIdTokenChanged'),listener);if(this._authResult){Promise.resolve().then(function(){listener(_this3._user||null);});}return function(){return subscription.remove();};}},{key:\"onUserChanged\",value:function onUserChanged(listenerOrObserver){var _this4=this;var listener=this._parseListener(listenerOrObserver);var subscription=this.emitter.addListener(this.eventNameForApp('onUserChanged'),listener);if(this._authResult){Promise.resolve().then(function(){listener(_this4._user||null);});}return function(){subscription.remove();};}},{key:\"signOut\",value:function signOut(){var _this5=this;return this.native.signOut().then(function(){_this5._setUser();});}},{key:\"signInAnonymously\",value:function signInAnonymously(){var _this6=this;return this.native.signInAnonymously().then(function(userCredential){return _this6._setUserCredential(userCredential);});}},{key:\"signInWithPhoneNumber\",value:function signInWithPhoneNumber(phoneNumber,forceResend){var _this7=this;if(isAndroid){return this.native.signInWithPhoneNumber(phoneNumber,forceResend||false).then(function(result){return new ConfirmationResult(_this7,result.verificationId);});}return this.native.signInWithPhoneNumber(phoneNumber).then(function(result){return new ConfirmationResult(_this7,result.verificationId);});}},{key:\"verifyPhoneNumber\",value:function verifyPhoneNumber(phoneNumber,autoVerifyTimeoutOrForceResend,forceResend){var _forceResend=forceResend;var _autoVerifyTimeout=60;if(isBoolean(autoVerifyTimeoutOrForceResend)){_forceResend=autoVerifyTimeoutOrForceResend;}else{_autoVerifyTimeout=autoVerifyTimeoutOrForceResend;}return new PhoneAuthListener(this,phoneNumber,_autoVerifyTimeout,_forceResend);}},{key:\"verifyPhoneNumberWithMultiFactorInfo\",value:function verifyPhoneNumberWithMultiFactorInfo(multiFactorHint,session){return this.native.verifyPhoneNumberWithMultiFactorInfo(multiFactorHint.uid,session);}},{key:\"verifyPhoneNumberForMultiFactor\",value:function verifyPhoneNumberForMultiFactor(phoneInfoOptions){var phoneNumber=phoneInfoOptions.phoneNumber,session=phoneInfoOptions.session;return this.native.verifyPhoneNumberForMultiFactor(phoneNumber,session);}},{key:\"resolveMultiFactorSignIn\",value:function resolveMultiFactorSignIn(session,verificationId,verificationCode){var _this8=this;return this.native.resolveMultiFactorSignIn(session,verificationId,verificationCode).then(function(userCredential){return _this8._setUserCredential(userCredential);});}},{key:\"createUserWithEmailAndPassword\",value:function createUserWithEmailAndPassword(email,password){var _this9=this;return this.native.createUserWithEmailAndPassword(email,password).then(function(userCredential){return _this9._setUserCredential(userCredential);});}},{key:\"signInWithEmailAndPassword\",value:function signInWithEmailAndPassword(email,password){var _this10=this;return this.native.signInWithEmailAndPassword(email,password).then(function(userCredential){return _this10._setUserCredential(userCredential);});}},{key:\"signInWithCustomToken\",value:function signInWithCustomToken(customToken){var _this11=this;return this.native.signInWithCustomToken(customToken).then(function(userCredential){return _this11._setUserCredential(userCredential);});}},{key:\"signInWithCredential\",value:function signInWithCredential(credential){var _this12=this;return this.native.signInWithCredential(credential.providerId,credential.token,credential.secret).then(function(userCredential){return _this12._setUserCredential(userCredential);});}},{key:\"sendPasswordResetEmail\",value:function sendPasswordResetEmail(email){var actionCodeSettings=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.native.sendPasswordResetEmail(email,actionCodeSettings);}},{key:\"sendSignInLinkToEmail\",value:function sendSignInLinkToEmail(email){var actionCodeSettings=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.native.sendSignInLinkToEmail(email,actionCodeSettings);}},{key:\"isSignInWithEmailLink\",value:function isSignInWithEmailLink(emailLink){return typeof emailLink==='string'&&(emailLink.includes('mode=signIn')||emailLink.includes('mode%3DsignIn'))&&(emailLink.includes('oobCode=')||emailLink.includes('oobCode%3D'));}},{key:\"signInWithEmailLink\",value:function signInWithEmailLink(email,emailLink){var _this13=this;return this.native.signInWithEmailLink(email,emailLink).then(function(userCredential){return _this13._setUserCredential(userCredential);});}},{key:\"confirmPasswordReset\",value:function confirmPasswordReset(code,newPassword){return this.native.confirmPasswordReset(code,newPassword);}},{key:\"applyActionCode\",value:function applyActionCode(code){var _this14=this;return this.native.applyActionCode(code).then(function(user){_this14._setUser(user);});}},{key:\"checkActionCode\",value:function checkActionCode(code){return this.native.checkActionCode(code);}},{key:\"fetchSignInMethodsForEmail\",value:function fetchSignInMethodsForEmail(email){return this.native.fetchSignInMethodsForEmail(email);}},{key:\"verifyPasswordResetCode\",value:function verifyPasswordResetCode(code){return this.native.verifyPasswordResetCode(code);}},{key:\"useUserAccessGroup\",value:function useUserAccessGroup(userAccessGroup){if(isAndroid){return Promise.resolve();}return this.native.useUserAccessGroup(userAccessGroup);}},{key:\"getRedirectResult\",value:function getRedirectResult(){throw new Error('firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.');}},{key:\"setPersistence\",value:function setPersistence(){throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');}},{key:\"signInWithPopup\",value:function signInWithPopup(){throw new Error('firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.');}},{key:\"signInWithRedirect\",value:function signInWithRedirect(){throw new Error('firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.');}},{key:\"useDeviceLanguage\",value:function useDeviceLanguage(){throw new Error('firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.');}},{key:\"useEmulator\",value:function useEmulator(url){if(!url||!isString(url)||!isValidUrl(url)){throw new Error('firebase.auth().useEmulator() takes a non-empty string URL');}var _url=url;var androidBypassEmulatorUrlRemap=typeof this.firebaseJson.android_bypass_emulator_url_remap==='boolean'&&this.firebaseJson.android_bypass_emulator_url_remap;if(!androidBypassEmulatorUrlRemap&&isAndroid&&_url){if(_url.startsWith('http://localhost')){_url=_url.replace('http://localhost','http://10.0.2.2');console.log('Mapping auth host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.');}if(_url.startsWith('http://127.0.0.1')){_url=_url.replace('http://127.0.0.1','http://10.0.2.2');console.log('Mapping auth host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.');}}var hostPortRegex=/^http:\\/\\/([\\w\\d-.]+):(\\d+)$/;var urlMatches=_url.match(hostPortRegex);if(!urlMatches){throw new Error('firebase.auth().useEmulator() unable to parse host and port from URL');}var host=urlMatches[1];var port=parseInt(urlMatches[2],10);this.native.useEmulator(host,port);return[host,port];}},{key:\"getMultiFactorResolver\",value:function getMultiFactorResolver(error){return _getMultiFactorResolver(this,error);}},{key:\"multiFactor\",value:function multiFactor(user){if(user.userId!==this.currentUser.userId){throw new Error('firebase.auth().multiFactor() only operates on currentUser');}return new MultiFactorUser(this,user);}}]);return FirebaseAuthModule;}(FirebaseModule);export var SDK_VERSION=version;export default createModuleNamespace({statics:statics,version:version,namespace:namespace,nativeModuleName:nativeModuleName,nativeEvents:['auth_state_changed','auth_id_token_changed','phone_auth_state_changed'],hasMultiAppSupport:true,hasCustomUrlOrRegionSupport:false,ModuleClass:FirebaseAuthModule});export var firebase=getFirebaseRoot();","map":{"version":3,"names":["isAndroid","isBoolean","isString","isNull","isValidUrl","createModuleNamespace","FirebaseModule","getFirebaseRoot","ConfirmationResult","PhoneAuthListener","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","PhoneAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AppleAuthProvider","Settings","User","version","getMultiFactorResolver","multiFactor","MultiFactorUser","statics","PhoneAuthState","CODE_SENT","AUTO_VERIFY_TIMEOUT","AUTO_VERIFIED","ERROR","namespace","nativeModuleName","FirebaseAuthModule","args","_user","_settings","_authResult","_languageCode","native","APP_LANGUAGE","app","_name","_tenantId","languageCode","APP_USER","_setUser","emitter","addListener","eventNameForApp","event","user","emit","eventKey","requestKey","type","state","auth","addAuthStateListener","addIdTokenListener","userCredential","additionalUserInfo","code","Error","setLanguageCode","tenantId","setTenantId","listenerOrObserver","next","bind","listener","_parseListener","subscription","Promise","resolve","then","remove","signOut","signInAnonymously","_setUserCredential","phoneNumber","forceResend","signInWithPhoneNumber","result","verificationId","autoVerifyTimeoutOrForceResend","_forceResend","_autoVerifyTimeout","multiFactorHint","session","verifyPhoneNumberWithMultiFactorInfo","uid","phoneInfoOptions","verifyPhoneNumberForMultiFactor","verificationCode","resolveMultiFactorSignIn","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","customToken","signInWithCustomToken","credential","signInWithCredential","providerId","token","secret","actionCodeSettings","sendPasswordResetEmail","sendSignInLinkToEmail","emailLink","includes","signInWithEmailLink","newPassword","confirmPasswordReset","applyActionCode","checkActionCode","fetchSignInMethodsForEmail","verifyPasswordResetCode","userAccessGroup","useUserAccessGroup","url","_url","androidBypassEmulatorUrlRemap","firebaseJson","android_bypass_emulator_url_remap","startsWith","replace","console","log","hostPortRegex","urlMatches","match","host","port","parseInt","useEmulator","error","userId","currentUser","SDK_VERSION","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/auth/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isAndroid,\n  isBoolean,\n  isString,\n  isNull,\n  isValidUrl,\n} from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport ConfirmationResult from './ConfirmationResult';\nimport PhoneAuthListener from './PhoneAuthListener';\nimport EmailAuthProvider from './providers/EmailAuthProvider';\nimport FacebookAuthProvider from './providers/FacebookAuthProvider';\nimport GithubAuthProvider from './providers/GithubAuthProvider';\nimport GoogleAuthProvider from './providers/GoogleAuthProvider';\nimport OAuthProvider from './providers/OAuthProvider';\nimport PhoneAuthProvider from './providers/PhoneAuthProvider';\nimport PhoneMultiFactorGenerator from './PhoneMultiFactorGenerator';\nimport TwitterAuthProvider from './providers/TwitterAuthProvider';\nimport AppleAuthProvider from './providers/AppleAuthProvider';\nimport Settings from './Settings';\nimport User from './User';\nimport version from './version';\nimport { getMultiFactorResolver } from './getMultiFactorResolver';\nimport { multiFactor, MultiFactorUser } from './multiFactor';\n\nconst statics = {\n  AppleAuthProvider,\n  EmailAuthProvider,\n  PhoneAuthProvider,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  TwitterAuthProvider,\n  FacebookAuthProvider,\n  PhoneMultiFactorGenerator,\n  OAuthProvider,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error',\n  },\n  getMultiFactorResolver,\n  multiFactor,\n};\n\nconst namespace = 'auth';\n\nconst nativeModuleName = 'RNFBAuthModule';\n\nclass FirebaseAuthModule extends FirebaseModule {\n  constructor(...args) {\n    super(...args);\n    this._user = null;\n    this._settings = null;\n    this._authResult = false;\n    this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n    this._tenantId = null;\n\n    if (!this.languageCode) {\n      this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n    }\n\n    if (this.native.APP_USER[this.app._name]) {\n      this._setUser(this.native.APP_USER[this.app._name]);\n    }\n\n    this.emitter.addListener(this.eventNameForApp('auth_state_changed'), event => {\n      this._setUser(event.user);\n      this.emitter.emit(this.eventNameForApp('onAuthStateChanged'), this._user);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('phone_auth_state_changed'), event => {\n      const eventKey = `phone:auth:${event.requestKey}:${event.type}`;\n      this.emitter.emit(eventKey, event.state);\n    });\n\n    this.emitter.addListener(this.eventNameForApp('auth_id_token_changed'), auth => {\n      this._setUser(auth.user);\n      this.emitter.emit(this.eventNameForApp('onIdTokenChanged'), this._user);\n    });\n\n    this.native.addAuthStateListener();\n    this.native.addIdTokenListener();\n  }\n\n  get languageCode() {\n    return this._languageCode;\n  }\n\n  get tenantId() {\n    return this._tenantId;\n  }\n\n  get settings() {\n    if (!this._settings) {\n      this._settings = new Settings(this);\n    }\n    return this._settings;\n  }\n\n  get currentUser() {\n    return this._user;\n  }\n\n  _setUser(user) {\n    this._user = user ? new User(this, user) : null;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return this._user;\n  }\n\n  _setUserCredential(userCredential) {\n    const user = new User(this, userCredential.user);\n    this._user = user;\n    this._authResult = true;\n    this.emitter.emit(this.eventNameForApp('onUserChanged'), this._user);\n    return {\n      additionalUserInfo: userCredential.additionalUserInfo,\n      user,\n    };\n  }\n\n  async setLanguageCode(code) {\n    if (!isString(code) && !isNull(code)) {\n      throw new Error(\n        \"firebase.auth().setLanguageCode(*) expected 'languageCode' to be a string or null value\",\n      );\n    }\n\n    await this.native.setLanguageCode(code);\n\n    if (code === null) {\n      this._languageCode = this.native.APP_LANGUAGE[this.app._name];\n\n      if (!this.languageCode) {\n        this._languageCode = this.native.APP_LANGUAGE['[DEFAULT]'];\n      }\n    } else {\n      this._languageCode = code;\n    }\n  }\n\n  async setTenantId(tenantId) {\n    if (!isString(tenantId)) {\n      throw new Error(\"firebase.auth().setTenantId(*) expected 'tenantId' to be a string\");\n    }\n    this._tenantId = tenantId;\n    await this.native.setTenantId(tenantId);\n  }\n\n  _parseListener(listenerOrObserver) {\n    return typeof listenerOrObserver === 'object'\n      ? listenerOrObserver.next.bind(listenerOrObserver)\n      : listenerOrObserver;\n  }\n\n  onAuthStateChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onAuthStateChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onIdTokenChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(\n      this.eventNameForApp('onIdTokenChanged'),\n      listener,\n    );\n\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n    return () => subscription.remove();\n  }\n\n  onUserChanged(listenerOrObserver) {\n    const listener = this._parseListener(listenerOrObserver);\n    const subscription = this.emitter.addListener(this.eventNameForApp('onUserChanged'), listener);\n    if (this._authResult) {\n      Promise.resolve().then(() => {\n        listener(this._user || null);\n      });\n    }\n\n    return () => {\n      subscription.remove();\n    };\n  }\n\n  signOut() {\n    return this.native.signOut().then(() => {\n      this._setUser();\n    });\n  }\n\n  signInAnonymously() {\n    return this.native\n      .signInAnonymously()\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithPhoneNumber(phoneNumber, forceResend) {\n    if (isAndroid) {\n      return this.native\n        .signInWithPhoneNumber(phoneNumber, forceResend || false)\n        .then(result => new ConfirmationResult(this, result.verificationId));\n    }\n\n    return this.native\n      .signInWithPhoneNumber(phoneNumber)\n      .then(result => new ConfirmationResult(this, result.verificationId));\n  }\n\n  verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n    let _forceResend = forceResend;\n    let _autoVerifyTimeout = 60;\n\n    if (isBoolean(autoVerifyTimeoutOrForceResend)) {\n      _forceResend = autoVerifyTimeoutOrForceResend;\n    } else {\n      _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n    }\n\n    return new PhoneAuthListener(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n  }\n\n  verifyPhoneNumberWithMultiFactorInfo(multiFactorHint, session) {\n    return this.native.verifyPhoneNumberWithMultiFactorInfo(multiFactorHint.uid, session);\n  }\n\n  verifyPhoneNumberForMultiFactor(phoneInfoOptions) {\n    const { phoneNumber, session } = phoneInfoOptions;\n    return this.native.verifyPhoneNumberForMultiFactor(phoneNumber, session);\n  }\n\n  resolveMultiFactorSignIn(session, verificationId, verificationCode) {\n    return this.native\n      .resolveMultiFactorSignIn(session, verificationId, verificationCode)\n      .then(userCredential => {\n        return this._setUserCredential(userCredential);\n      });\n  }\n\n  createUserWithEmailAndPassword(email, password) {\n    return this.native\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithEmailAndPassword(email, password) {\n    return this.native\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCustomToken(customToken) {\n    return this.native\n      .signInWithCustomToken(customToken)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  signInWithCredential(credential) {\n    return this.native\n      .signInWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  sendPasswordResetEmail(email, actionCodeSettings = null) {\n    return this.native.sendPasswordResetEmail(email, actionCodeSettings);\n  }\n\n  sendSignInLinkToEmail(email, actionCodeSettings = {}) {\n    return this.native.sendSignInLinkToEmail(email, actionCodeSettings);\n  }\n\n  isSignInWithEmailLink(emailLink) {\n    return (\n      typeof emailLink === 'string' &&\n      (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) &&\n      (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'))\n    );\n  }\n\n  signInWithEmailLink(email, emailLink) {\n    return this.native\n      .signInWithEmailLink(email, emailLink)\n      .then(userCredential => this._setUserCredential(userCredential));\n  }\n\n  confirmPasswordReset(code, newPassword) {\n    return this.native.confirmPasswordReset(code, newPassword);\n  }\n\n  applyActionCode(code) {\n    return this.native.applyActionCode(code).then(user => {\n      this._setUser(user);\n    });\n  }\n\n  checkActionCode(code) {\n    return this.native.checkActionCode(code);\n  }\n\n  fetchSignInMethodsForEmail(email) {\n    return this.native.fetchSignInMethodsForEmail(email);\n  }\n\n  verifyPasswordResetCode(code) {\n    return this.native.verifyPasswordResetCode(code);\n  }\n\n  useUserAccessGroup(userAccessGroup) {\n    if (isAndroid) {\n      return Promise.resolve();\n    }\n    return this.native.useUserAccessGroup(userAccessGroup);\n  }\n\n  getRedirectResult() {\n    throw new Error(\n      'firebase.auth().getRedirectResult() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  setPersistence() {\n    throw new Error('firebase.auth().setPersistence() is unsupported by the native Firebase SDKs.');\n  }\n\n  signInWithPopup() {\n    throw new Error(\n      'firebase.auth().signInWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  signInWithRedirect() {\n    throw new Error(\n      'firebase.auth().signInWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  // firebase issue - https://github.com/invertase/react-native-firebase/pull/655#issuecomment-349904680\n  useDeviceLanguage() {\n    throw new Error(\n      'firebase.auth().useDeviceLanguage() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  useEmulator(url) {\n    if (!url || !isString(url) || !isValidUrl(url)) {\n      throw new Error('firebase.auth().useEmulator() takes a non-empty string URL');\n    }\n\n    let _url = url;\n    const androidBypassEmulatorUrlRemap =\n      typeof this.firebaseJson.android_bypass_emulator_url_remap === 'boolean' &&\n      this.firebaseJson.android_bypass_emulator_url_remap;\n    if (!androidBypassEmulatorUrlRemap && isAndroid && _url) {\n      if (_url.startsWith('http://localhost')) {\n        _url = _url.replace('http://localhost', 'http://10.0.2.2');\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping auth host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.',\n        );\n      }\n      if (_url.startsWith('http://127.0.0.1')) {\n        _url = _url.replace('http://127.0.0.1', 'http://10.0.2.2');\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping auth host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.',\n        );\n      }\n    }\n\n    // Native calls take the host and port split out\n    const hostPortRegex = /^http:\\/\\/([\\w\\d-.]+):(\\d+)$/;\n    const urlMatches = _url.match(hostPortRegex);\n    if (!urlMatches) {\n      throw new Error('firebase.auth().useEmulator() unable to parse host and port from URL');\n    }\n    const host = urlMatches[1];\n    const port = parseInt(urlMatches[2], 10);\n    this.native.useEmulator(host, port);\n    return [host, port]; // undocumented return, useful for unit testing\n  }\n\n  getMultiFactorResolver(error) {\n    return getMultiFactorResolver(this, error);\n  }\n\n  multiFactor(user) {\n    if (user.userId !== this.currentUser.userId) {\n      throw new Error('firebase.auth().multiFactor() only operates on currentUser');\n    }\n    return new MultiFactorUser(this, user);\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/auth';\nexport const SDK_VERSION = version;\n\n// import auth from '@react-native-firebase/auth';\n// auth().X(...);\nexport default createModuleNamespace({\n  statics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents: ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'],\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseAuthModule,\n});\n\n// import auth, { firebase } from '@react-native-firebase/auth';\n// auth().X(...);\n// firebase.auth().X(...);\nexport const firebase = getFirebaseRoot();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}