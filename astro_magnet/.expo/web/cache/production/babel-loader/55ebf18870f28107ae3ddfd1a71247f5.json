{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useEffect,useState,useContext}from\"react\";import firestore from\"@react-native-firebase/firestore\";import{UserContext}from\"../context/user\";export default function useLooking(onError){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useContext=useContext(UserContext),profile=_useContext.profile;useEffect(function(){if(!profile)return;var unsubscribe=firestore().collection(\"users\").where(firestore.FieldPath.documentId(),\"!=\",profile.id).onSnapshot(function(querySnapshot){var list=[];querySnapshot.forEach(function(doc){if(!(profile!=null&&profile.liked.includes(doc.id))&&!(profile!=null&&profile.disliked.includes(doc.id))&&!(profile!=null&&profile.messagingFriendList.map(function(friend){return friend.email;}).includes(doc.data().email))&&profile.interestedType.includes(doc.data().sex)&&doc.data().interestedType.includes(profile.sex)&&!doc.data().disliked.includes(profile.id)){list.push(_objectSpread({id:doc.id},doc.data()));}list.sort(function(a,b){if(b){return(a==null?void 0:a.createdAt.toDate())-b.createdAt.toDate();}return 0;});});setUsers(list);setLoading(false);},function(error){onError&&onError(\"Error fetching users\");console.log(\"[LOG] error fetching users:\",error);});return unsubscribe;},[profile==null?void 0:profile.id,profile==null?void 0:profile.liked,profile==null?void 0:profile.disliked,profile==null?void 0:profile.interestedType,profile==null?void 0:profile.messagingFriendList]);return{users:users,loading:loading};}","map":{"version":3,"names":["useEffect","useState","useContext","firestore","UserContext","useLooking","onError","users","setUsers","loading","setLoading","profile","unsubscribe","collection","where","FieldPath","documentId","id","onSnapshot","querySnapshot","list","forEach","doc","liked","includes","disliked","messagingFriendList","map","friend","email","data","interestedType","sex","push","sort","a","b","createdAt","toDate","error","console","log"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/hooks/useLooking.tsx"],"sourcesContent":["import {useEffect, useState, useContext} from \"react\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport { FireDoc } from \"@app/shared/interfaces/firebase\";\nimport { UserContext } from \"@app/context/user\";\n\n/**\n * use users hooks, fetch all user from firestore\n * users will not include current logged in user\n * users will not include users that current logged-in user already liked or disliked\n * @param {(error: string)=>void | undefined} onError - callback function to handle network error\n * @returns {users: FirebaseFirestoreTypes.DocumentData[], loading: boolean} - a list of users and loading state\n */\nexport default function useLooking(\n    onError?: (error: string) => void,\n) {\n    const [users, setUsers] = useState<FireDoc[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const { profile } = useContext(UserContext);\n    useEffect(() => {\n        if (!profile) return;\n        const unsubscribe = firestore()\n            .collection(\"users\")\n            .where(firestore.FieldPath.documentId(), \"!=\", profile.id)\n            .onSnapshot((querySnapshot) => {\n                const list: FireDoc[] = [];\n                querySnapshot.forEach((doc) => {\n                    if (\n                        !profile?.liked.includes(doc.id) && \n                        !profile?.disliked.includes(doc.id) &&\n                        !profile?.messagingFriendList.map(\n                            (friend) => friend.email\n                        ).includes(doc.data().email) &&\n                        profile.interestedType.includes(doc.data().sex) &&\n                        doc.data().interestedType.includes(profile.sex) &&\n                        !doc.data().disliked.includes(profile.id)\n                        ) {\n                        list.push({\n                            id: doc.id,\n                            ...doc.data(),\n                        });\n                    }\n                    list.sort((a, b) => {\n                        if (b) {\n                            return a?.createdAt.toDate() - b.createdAt.toDate();\n                        }\n                        return 0;\n                    });\n                });\n                setUsers(list);\n                setLoading(false);\n            }, (error) => {\n                onError && onError(\"Error fetching users\");\n                console.log(\"[LOG] error fetching users:\", error);\n            });\n        return unsubscribe;\n    }, [\n        profile?.id,\n        profile?.liked,\n        profile?.disliked,\n        profile?.interestedType,\n        profile?.messagingFriendList,\n    ]);\n    return {\n\n        /** result after look */\n        users,\n\n        /** loading state of fetching result */\n        loading\n    }\n}"],"mappings":"y4BAAA,OAAQA,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAO,OAAO,CACrD,MAAOC,UAAS,KAAM,kCAAkC,CAExD,OAASC,WAAW,uBASpB,cAAe,SAASC,WAAU,CAC9BC,OAAiC,CACnC,CACE,cAA0BL,QAAQ,CAAY,EAAE,CAAC,wCAA1CM,KAAK,eAAEC,QAAQ,eACtB,eAA8BP,QAAQ,CAAU,IAAI,CAAC,yCAA9CQ,OAAO,eAAEC,UAAU,eAC1B,gBAAoBR,UAAU,CAACE,WAAW,CAAC,CAAnCO,OAAO,aAAPA,OAAO,CACfX,SAAS,CAAC,UAAM,CACZ,GAAI,CAACW,OAAO,CAAE,OACd,GAAMC,YAAW,CAAGT,SAAS,EAAE,CAC1BU,UAAU,CAAC,OAAO,CAAC,CACnBC,KAAK,CAACX,SAAS,CAACY,SAAS,CAACC,UAAU,EAAE,CAAE,IAAI,CAAEL,OAAO,CAACM,EAAE,CAAC,CACzDC,UAAU,CAAC,SAACC,aAAa,CAAK,CAC3B,GAAMC,KAAe,CAAG,EAAE,CAC1BD,aAAa,CAACE,OAAO,CAAC,SAACC,GAAG,CAAK,CAC3B,GACI,EAACX,OAAO,QAAPA,OAAO,CAAEY,KAAK,CAACC,QAAQ,CAACF,GAAG,CAACL,EAAE,CAAC,GAChC,EAACN,OAAO,QAAPA,OAAO,CAAEc,QAAQ,CAACD,QAAQ,CAACF,GAAG,CAACL,EAAE,CAAC,GACnC,EAACN,OAAO,QAAPA,OAAO,CAAEe,mBAAmB,CAACC,GAAG,CAC7B,SAACC,MAAM,QAAKA,OAAM,CAACC,KAAK,GAC3B,CAACL,QAAQ,CAACF,GAAG,CAACQ,IAAI,EAAE,CAACD,KAAK,CAAC,GAC5BlB,OAAO,CAACoB,cAAc,CAACP,QAAQ,CAACF,GAAG,CAACQ,IAAI,EAAE,CAACE,GAAG,CAAC,EAC/CV,GAAG,CAACQ,IAAI,EAAE,CAACC,cAAc,CAACP,QAAQ,CAACb,OAAO,CAACqB,GAAG,CAAC,EAC/C,CAACV,GAAG,CAACQ,IAAI,EAAE,CAACL,QAAQ,CAACD,QAAQ,CAACb,OAAO,CAACM,EAAE,CAAC,CACvC,CACFG,IAAI,CAACa,IAAI,gBACLhB,EAAE,CAAEK,GAAG,CAACL,EAAE,EACPK,GAAG,CAACQ,IAAI,EAAE,EACf,CACN,CACAV,IAAI,CAACc,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,CAAK,CAChB,GAAIA,CAAC,CAAE,CACH,MAAO,CAAAD,CAAC,cAADA,CAAC,CAAEE,SAAS,CAACC,MAAM,EAAE,EAAGF,CAAC,CAACC,SAAS,CAACC,MAAM,EAAE,CACvD,CACA,MAAO,EAAC,CACZ,CAAC,CAAC,CACN,CAAC,CAAC,CACF9B,QAAQ,CAACY,IAAI,CAAC,CACdV,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,SAAC6B,KAAK,CAAK,CACVjC,OAAO,EAAIA,OAAO,CAAC,sBAAsB,CAAC,CAC1CkC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEF,KAAK,CAAC,CACrD,CAAC,CAAC,CACN,MAAO3B,YAAW,CACtB,CAAC,CAAE,CACCD,OAAO,cAAPA,OAAO,CAAEM,EAAE,CACXN,OAAO,cAAPA,OAAO,CAAEY,KAAK,CACdZ,OAAO,cAAPA,OAAO,CAAEc,QAAQ,CACjBd,OAAO,cAAPA,OAAO,CAAEoB,cAAc,CACvBpB,OAAO,cAAPA,OAAO,CAAEe,mBAAmB,CAC/B,CAAC,CACF,MAAO,CAGHnB,KAAK,CAALA,KAAK,CAGLE,OAAO,CAAPA,OACJ,CAAC,CACL"},"metadata":{},"sourceType":"module"}