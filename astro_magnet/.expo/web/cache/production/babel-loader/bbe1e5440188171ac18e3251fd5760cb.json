{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"background\",\"borderless\",\"disabled\",\"rippleColor\",\"underlayColor\",\"children\",\"theme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import color from'color';import{withTheme}from\"../../core/theming\";var TouchableRipple=function TouchableRipple(_ref){var style=_ref.style,_background=_ref.background,_ref$borderless=_ref.borderless,borderless=_ref$borderless===void 0?false:_ref$borderless,disabledProp=_ref.disabled,rippleColor=_ref.rippleColor,_underlayColor=_ref.underlayColor,children=_ref.children,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var handlePressIn=function handlePressIn(e){var _touches$;var centered=rest.centered,onPressIn=rest.onPressIn;onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);var dark=theme.dark,colors=theme.colors;var calculatedRippleColor=rippleColor||color(colors.text).alpha(dark?0.32:0.2).rgb().string();var button=e.currentTarget;var style=window.getComputedStyle(button);var dimensions=button.getBoundingClientRect();var touchX;var touchY;var _e$nativeEvent=e.nativeEvent,changedTouches=_e$nativeEvent.changedTouches,touches=_e$nativeEvent.touches;var touch=(_touches$=touches===null||touches===void 0?void 0:touches[0])!==null&&_touches$!==void 0?_touches$:changedTouches===null||changedTouches===void 0?void 0:changedTouches[0];if(centered||!touch){touchX=dimensions.width/2;touchY=dimensions.height/2;}else{var _touch$locationX,_touch$locationY;touchX=(_touch$locationX=touch.locationX)!==null&&_touch$locationX!==void 0?_touch$locationX:e.pageX;touchY=(_touch$locationY=touch.locationY)!==null&&_touch$locationY!==void 0?_touch$locationY:e.pageY;}var size=centered?Math.min(dimensions.width,dimensions.height)*1.25:Math.max(dimensions.width,dimensions.height)*2;var container=document.createElement('span');container.setAttribute('data-paper-ripple','');Object.assign(container.style,{position:'absolute',pointerEvents:'none',top:'0',left:'0',right:'0',bottom:'0',borderTopLeftRadius:style.borderTopLeftRadius,borderTopRightRadius:style.borderTopRightRadius,borderBottomRightRadius:style.borderBottomRightRadius,borderBottomLeftRadius:style.borderBottomLeftRadius,overflow:centered?'visible':'hidden'});var ripple=document.createElement('span');Object.assign(ripple.style,{position:'absolute',pointerEvents:'none',backgroundColor:calculatedRippleColor,borderRadius:'50%',transitionProperty:'transform opacity',transitionDuration:Math.min(size*1.5,350)+\"ms\",transitionTimingFunction:'linear',transformOrigin:'center',transform:'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',opacity:'0.5',left:touchX+\"px\",top:touchY+\"px\",width:size+\"px\",height:size+\"px\"});container.appendChild(ripple);button.appendChild(container);requestAnimationFrame(function(){requestAnimationFrame(function(){Object.assign(ripple.style,{transform:'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',opacity:'1'});});});};var handlePressOut=function handlePressOut(e){var _rest$onPressOut;(_rest$onPressOut=rest.onPressOut)===null||_rest$onPressOut===void 0?void 0:_rest$onPressOut.call(rest,e);var containers=e.currentTarget.querySelectorAll('[data-paper-ripple]');requestAnimationFrame(function(){requestAnimationFrame(function(){containers.forEach(function(container){var ripple=container.firstChild;Object.assign(ripple.style,{transitionDuration:'250ms',opacity:0});setTimeout(function(){var parentNode=container.parentNode;if(parentNode){parentNode.removeChild(container);}},500);});});});};var disabled=disabledProp||!rest.onPress;return React.createElement(TouchableWithoutFeedback,_extends({},rest,{onPressIn:handlePressIn,onPressOut:handlePressOut,disabled:disabled}),React.createElement(View,{style:[styles.touchable,borderless&&styles.borderless,style]},React.Children.only(children)));};TouchableRipple.supported=true;var styles=StyleSheet.create({touchable:_objectSpread({position:'relative'},Platform.OS==='web'&&{cursor:'pointer'}),borderless:{overflow:'hidden'}});export default withTheme(TouchableRipple);","map":{"version":3,"sources":["TouchableRipple.tsx"],"names":["React","color","withTheme","TouchableRipple","style","background","_background","borderless","disabled","disabledProp","rippleColor","underlayColor","_underlayColor","children","theme","rest","handlePressIn","e","centered","onPressIn","dark","colors","calculatedRippleColor","text","alpha","rgb","string","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","changedTouches","touches","nativeEvent","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","styles","touchable","Children","only","supported","create","Platform","OS","cursor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  GestureResponderEvent,\n  Platform,\n} from 'react-native';\nimport color from 'color';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<\n  typeof TouchableWithoutFeedback\n> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/touchablenativefeedback#background\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableWithoutFeedback props https://reactnative.dev/docs/touchablewithoutfeedback#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { dark, colors } = theme;\n    const calculatedRippleColor =\n      rippleColor ||\n      color(colors.text)\n        .alpha(dark ? 0.32 : 0.2)\n        .rgb()\n        .string();\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <TouchableWithoutFeedback\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n    >\n      <View style={[styles.touchable, borderless && styles.borderless, style]}>\n        {React.Children.only(children)}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withTheme(TouchableRipple);\n"]},"metadata":{},"sourceType":"module"}