{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _MediaTypeInput;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{PermissionStatus,Platform}from'expo-modules-core';import{v4}from'uuid';import{MediaTypeOptions}from\"./ImagePicker.types\";var MediaTypeInput=(_MediaTypeInput={},_defineProperty(_MediaTypeInput,MediaTypeOptions.All,'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'),_defineProperty(_MediaTypeInput,MediaTypeOptions.Images,'image/*'),_defineProperty(_MediaTypeInput,MediaTypeOptions.Videos,'video/mp4,video/quicktime,video/x-m4v,video/*'),_MediaTypeInput);export default{get name(){return'ExponentImagePicker';},launchImageLibraryAsync:function(){var _launchImageLibraryAsync=_asyncToGenerator(function*(_ref){var _ref$mediaTypes=_ref.mediaTypes,mediaTypes=_ref$mediaTypes===void 0?MediaTypeOptions.Images:_ref$mediaTypes,_ref$allowsMultipleSe=_ref.allowsMultipleSelection,allowsMultipleSelection=_ref$allowsMultipleSe===void 0?false:_ref$allowsMultipleSe,_ref$base=_ref.base64,base64=_ref$base===void 0?false:_ref$base;if(!Platform.isDOMAvailable){return{canceled:true,assets:null};}return yield openFileBrowserAsync({mediaTypes:mediaTypes,allowsMultipleSelection:allowsMultipleSelection,base64:base64});});function launchImageLibraryAsync(_x){return _launchImageLibraryAsync.apply(this,arguments);}return launchImageLibraryAsync;}(),launchCameraAsync:function(){var _launchCameraAsync=_asyncToGenerator(function*(_ref2){var _ref2$mediaTypes=_ref2.mediaTypes,mediaTypes=_ref2$mediaTypes===void 0?MediaTypeOptions.Images:_ref2$mediaTypes,_ref2$allowsMultipleS=_ref2.allowsMultipleSelection,allowsMultipleSelection=_ref2$allowsMultipleS===void 0?false:_ref2$allowsMultipleS,_ref2$base=_ref2.base64,base64=_ref2$base===void 0?false:_ref2$base;if(!Platform.isDOMAvailable){return{canceled:true,assets:null};}return yield openFileBrowserAsync({mediaTypes:mediaTypes,allowsMultipleSelection:allowsMultipleSelection,capture:true,base64:base64});});function launchCameraAsync(_x2){return _launchCameraAsync.apply(this,arguments);}return launchCameraAsync;}(),getCameraPermissionsAsync:function(){var _getCameraPermissionsAsync=_asyncToGenerator(function*(){return permissionGrantedResponse();});function getCameraPermissionsAsync(){return _getCameraPermissionsAsync.apply(this,arguments);}return getCameraPermissionsAsync;}(),requestCameraPermissionsAsync:function(){var _requestCameraPermissionsAsync=_asyncToGenerator(function*(){return permissionGrantedResponse();});function requestCameraPermissionsAsync(){return _requestCameraPermissionsAsync.apply(this,arguments);}return requestCameraPermissionsAsync;}(),getMediaLibraryPermissionsAsync:function(){var _getMediaLibraryPermissionsAsync=_asyncToGenerator(function*(_writeOnly){return permissionGrantedResponse();});function getMediaLibraryPermissionsAsync(_x3){return _getMediaLibraryPermissionsAsync.apply(this,arguments);}return getMediaLibraryPermissionsAsync;}(),requestMediaLibraryPermissionsAsync:function(){var _requestMediaLibraryPermissionsAsync=_asyncToGenerator(function*(_writeOnly){return permissionGrantedResponse();});function requestMediaLibraryPermissionsAsync(_x4){return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}return requestMediaLibraryPermissionsAsync;}()};function permissionGrantedResponse(){return{status:PermissionStatus.GRANTED,expires:'never',granted:true,canAskAgain:true};}function openFileBrowserAsync(_ref3){var mediaTypes=_ref3.mediaTypes,_ref3$capture=_ref3.capture,capture=_ref3$capture===void 0?false:_ref3$capture,_ref3$allowsMultipleS=_ref3.allowsMultipleSelection,allowsMultipleSelection=_ref3$allowsMultipleS===void 0?false:_ref3$allowsMultipleS,base64=_ref3.base64;var mediaTypeFormat=MediaTypeInput[mediaTypes];var input=document.createElement('input');input.style.display='none';input.setAttribute('type','file');input.setAttribute('accept',mediaTypeFormat);input.setAttribute('id',v4());if(allowsMultipleSelection){input.setAttribute('multiple','multiple');}if(capture){input.setAttribute('capture','camera');}document.body.appendChild(input);return new Promise(function(resolve){input.addEventListener('change',_asyncToGenerator(function*(){if(input.files){var files=allowsMultipleSelection?input.files:[input.files[0]];var assets=yield Promise.all(Array.from(files).map(function(file){return readFile(file,{base64:base64});}));resolve({canceled:false,assets:assets});}else{resolve({canceled:true,assets:null});}document.body.removeChild(input);}));var event=new MouseEvent('click');input.dispatchEvent(event);});}function readFile(targetFile,options){return new Promise(function(resolve,reject){var reader=new FileReader();reader.onerror=function(){reject(new Error(\"Failed to read the selected media because the operation failed.\"));};reader.onload=function(_ref5){var target=_ref5.target;var uri=target.result;var returnRaw=function returnRaw(){return resolve({uri:uri,width:0,height:0});};if(typeof uri==='string'){var image=new Image();image.src=uri;image.onload=function(){var _image$naturalWidth,_image$naturalHeight;resolve(_objectSpread({uri:uri,width:(_image$naturalWidth=image.naturalWidth)!=null?_image$naturalWidth:image.width,height:(_image$naturalHeight=image.naturalHeight)!=null?_image$naturalHeight:image.height},options.base64&&{base64:uri.substr(uri.indexOf(',')+1)}));};image.onerror=function(){return returnRaw();};}else{returnRaw();}};reader.readAsDataURL(targetFile);});}","map":{"version":3,"sources":["../src/ExponentImagePicker.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () => {\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}