{"ast":null,"code":"import _construct from\"@babel/runtime/helpers/construct\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{isString}from'@react-native-firebase/app/lib/common';var RESERVED=new RegExp('[~*/\\\\[\\\\]]');var FirestoreFieldPath=function(){function FirestoreFieldPath(){_classCallCheck(this,FirestoreFieldPath);for(var _len=arguments.length,segments=new Array(_len),_key=0;_key<_len;_key++){segments[_key]=arguments[_key];}if(segments.length===0){throw new Error('firebase.firestore.FieldPath cannot construct FieldPath with no segments.');}for(var i=0;i<segments.length;i++){var segment=segments[i];if(!isString(segment)||segment===''){throw new Error(\"firebase.firestore.FieldPath invalid segment at index \"+i+\", expected a non-empty string.\");}}this._segments=segments;}_createClass(FirestoreFieldPath,[{key:\"isEqual\",value:function isEqual(other){if(!(other instanceof FirestoreFieldPath)){throw new Error(\"firebase.firestore.FieldPath.isEqual(*) 'other' expected instance of FieldPath.\");}return this._toPath()===other._toPath();}},{key:\"_toPath\",value:function _toPath(){return this._segments.join('.');}},{key:\"_toArray\",value:function _toArray(){return this._segments;}}],[{key:\"documentId\",value:function documentId(){return DOCUMENT_ID;}}]);return FirestoreFieldPath;}();export{FirestoreFieldPath as default};export var DOCUMENT_ID=new FirestoreFieldPath('__name__');export function fromDotSeparatedString(path){if(path===''||path.startsWith('.')||path.endsWith('.')||path.indexOf('..')>0){throw new Error(\"Invalid field path. Paths must not be empty, begin with '.', end with '.', or contain '..'.\");}var found=path.search(RESERVED);if(found>0){throw new Error(\"Invalid field path (\"+path+\"). Paths must not contain '~', '*', '/', '[', or ']'.\");}return _construct(FirestoreFieldPath,_toConsumableArray(path.split('.')));}","map":{"version":3,"names":["isString","RESERVED","RegExp","FirestoreFieldPath","segments","length","Error","i","segment","_segments","other","_toPath","join","DOCUMENT_ID","fromDotSeparatedString","path","startsWith","endsWith","indexOf","found","search","split"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreFieldPath.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '@react-native-firebase/app/lib/common';\n\nconst RESERVED = new RegExp('[~*/\\\\[\\\\]]');\n\nexport default class FirestoreFieldPath {\n  static documentId() {\n    return DOCUMENT_ID;\n  }\n\n  constructor(...segments) {\n    if (segments.length === 0) {\n      throw new Error('firebase.firestore.FieldPath cannot construct FieldPath with no segments.');\n    }\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (!isString(segment) || segment === '') {\n        throw new Error(\n          `firebase.firestore.FieldPath invalid segment at index ${i}, expected a non-empty string.`,\n        );\n      }\n    }\n\n    this._segments = segments;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreFieldPath)) {\n      throw new Error(\n        \"firebase.firestore.FieldPath.isEqual(*) 'other' expected instance of FieldPath.\",\n      );\n    }\n\n    return this._toPath() === other._toPath();\n  }\n\n  _toPath() {\n    return this._segments.join('.');\n  }\n\n  _toArray() {\n    return this._segments;\n  }\n}\n\nexport const DOCUMENT_ID = new FirestoreFieldPath('__name__');\n\nexport function fromDotSeparatedString(path) {\n  if (path === '' || path.startsWith('.') || path.endsWith('.') || path.indexOf('..') > 0) {\n    throw new Error(\n      \"Invalid field path. Paths must not be empty, begin with '.', end with '.', or contain '..'.\",\n    );\n  }\n\n  const found = path.search(RESERVED);\n\n  if (found > 0) {\n    throw new Error(\n      `Invalid field path (${path}). Paths must not contain '~', '*', '/', '[', or ']'.`,\n    );\n  }\n\n  return new FirestoreFieldPath(...path.split('.'));\n}\n"],"mappings":"kQAiBA,OAASA,QAAQ,KAAQ,uCAAuC,CAEhE,GAAMC,SAAQ,CAAG,GAAIC,OAAM,CAAC,aAAa,CAAC,CAAC,GAEtBC,mBAAkB,YAKrC,6BAAyB,wEAAVC,QAAQ,0CAARA,QAAQ,wBACrB,GAAIA,QAAQ,CAACC,MAAM,GAAK,CAAC,CAAE,CACzB,KAAM,IAAIC,MAAK,CAAC,2EAA2E,CAAC,CAC9F,CAEA,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,QAAQ,CAACC,MAAM,CAAEE,CAAC,EAAE,CAAE,CACxC,GAAMC,QAAO,CAAGJ,QAAQ,CAACG,CAAC,CAAC,CAC3B,GAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,EAAIA,OAAO,GAAK,EAAE,CAAE,CACxC,KAAM,IAAIF,MAAK,0DAC4CC,CAAC,kCAC3D,CACH,CACF,CAEA,IAAI,CAACE,SAAS,CAAGL,QAAQ,CAC3B,CAAC,sDAED,iBAAQM,KAAK,CAAE,CACb,GAAI,EAAEA,KAAK,WAAYP,mBAAkB,CAAC,CAAE,CAC1C,KAAM,IAAIG,MAAK,CACb,iFAAiF,CAClF,CACH,CAEA,MAAO,KAAI,CAACK,OAAO,EAAE,GAAKD,KAAK,CAACC,OAAO,EAAE,CAC3C,CAAC,uBAED,kBAAU,CACR,MAAO,KAAI,CAACF,SAAS,CAACG,IAAI,CAAC,GAAG,CAAC,CACjC,CAAC,wBAED,mBAAW,CACT,MAAO,KAAI,CAACH,SAAS,CACvB,CAAC,4BArCD,qBAAoB,CAClB,MAAOI,YAAW,CACpB,CAAC,yCAHkBV,kBAAkB,aAyCvC,MAAO,IAAMU,YAAW,CAAG,GAAIV,mBAAkB,CAAC,UAAU,CAAC,CAE7D,MAAO,SAASW,uBAAsB,CAACC,IAAI,CAAE,CAC3C,GAAIA,IAAI,GAAK,EAAE,EAAIA,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAID,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAIF,IAAI,CAACG,OAAO,CAAC,IAAI,CAAC,CAAG,CAAC,CAAE,CACvF,KAAM,IAAIZ,MAAK,CACb,6FAA6F,CAC9F,CACH,CAEA,GAAMa,MAAK,CAAGJ,IAAI,CAACK,MAAM,CAACnB,QAAQ,CAAC,CAEnC,GAAIkB,KAAK,CAAG,CAAC,CAAE,CACb,KAAM,IAAIb,MAAK,wBACUS,IAAI,yDAC5B,CACH,CAEA,kBAAWZ,kBAAkB,oBAAIY,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC,GAClD"},"metadata":{},"sourceType":"module"}