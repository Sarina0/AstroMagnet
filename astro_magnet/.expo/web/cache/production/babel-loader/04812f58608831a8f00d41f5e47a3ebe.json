{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useState,useEffect,useContext}from\"react\";import{UserContext}from\"../context/user\";import firestore from\"@react-native-firebase/firestore\";export default function useMessage(chatRoomId,page,onError){var _useContext=useContext(UserContext),profile=_useContext.profile;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){if(!profile){setLoading(false);return;}var userMessageList=profile.messagingFriendList;var isUserInChatRoom=userMessageList.find(function(user){return user.chatRoomId===chatRoomId;});if(!isUserInChatRoom){setLoading(false);return;}var chatRoomRef=firestore().collection(\"chatRooms\").doc(chatRoomId);var messagesRef=chatRoomRef.collection(\"messages\").orderBy(\"createdAt\",\"desc\").limit(page?page*10:10);var unsubscribe=messagesRef.onSnapshot(function(snapshot){var list=[];snapshot.forEach(function(doc){list.push(_objectSpread({id:doc.id},doc.data()));});setMessages(list);setLoading(false);},function(error){setLoading(false);console.log(\"[ERROR] error fetching messages:\",error);onError&&onError(\"Error fetching messages\");});return unsubscribe;},[chatRoomId,profile,page]);return{messages:messages,loading:loading};}","map":{"version":3,"names":["useState","useEffect","useContext","UserContext","firestore","useMessage","chatRoomId","page","onError","profile","messages","setMessages","loading","setLoading","userMessageList","messagingFriendList","isUserInChatRoom","find","user","chatRoomRef","collection","doc","messagesRef","orderBy","limit","unsubscribe","onSnapshot","snapshot","list","forEach","push","id","data","error","console","log"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/hooks/useMessage.tsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"@app/context/user\";\nimport type { Message } from \"@app/shared/interfaces/message\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport { FireDoc } from \"@app/shared/interfaces/firebase\";\n\n/**\n * hook to fetch all messages of a channel\n * @param chatRoomId - chat room id\n * @param onError - callback function to handle network error\n * @return {Message[]} - a list of messages\n * @return {boolean} - fetch loading state\n */\nexport default function useMessage(\n    chatRoomId: string,\n    page?: number,\n    onError?:(error:string)=>void,\n) {\n    const {profile} = useContext(UserContext);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    useEffect(() => {\n\n        //guard against unauthenticated user\n        if (!profile) {\n            setLoading(false); \n            return \n        }\n\n        //guard against unauthorized access to chatroom(user not in chatroom)\n        const userMessageList = profile.messagingFriendList;\n        const isUserInChatRoom = userMessageList.find((user) => user.chatRoomId === chatRoomId);\n        if (!isUserInChatRoom) {\n            setLoading(false); \n            return \n        }\n\n        //get messages from firestore\n        const chatRoomRef = firestore().collection(\"chatRooms\").doc(chatRoomId);\n        const messagesRef = chatRoomRef\n            .collection(\"messages\")\n            .orderBy(\"createdAt\", \"desc\")\n            .limit(page ? page * 10 : 10);\n        const unsubscribe = messagesRef\n            .onSnapshot((snapshot) => {\n                const list: FireDoc[] = [];\n                snapshot.forEach((doc) => {\n                    list.push({\n                        id: doc.id,\n                        ...doc.data(),\n                    });\n                });\n                setMessages(list as Message[]);\n                setLoading(false);\n            }, (error) => {\n                setLoading(false);\n                console.log(\"[ERROR] error fetching messages:\", error);\n                onError && onError(\"Error fetching messages\");\n            });\n        return unsubscribe;\n    }, [chatRoomId, profile, page]);\n\n    return {\n        /** current chat room messages */\n        messages,\n\n        /** fetch loading state */\n        loading\n    }\n}\n\n\n\n"],"mappings":"y4BAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CACvD,OAASC,WAAW,uBAEpB,MAAOC,UAAS,KAAM,kCAAkC,CAUxD,cAAe,SAASC,WAAU,CAC9BC,UAAkB,CAClBC,IAAa,CACbC,OAA6B,CAC/B,CACE,gBAAkBN,UAAU,CAACC,WAAW,CAAC,CAAlCM,OAAO,aAAPA,OAAO,CACd,cAAgCT,QAAQ,CAAY,EAAE,CAAC,wCAAhDU,QAAQ,eAAEC,WAAW,eAC5B,eAA8BX,QAAQ,CAAU,IAAI,CAAC,yCAA9CY,OAAO,eAAEC,UAAU,eAC1BZ,SAAS,CAAC,UAAM,CAGZ,GAAI,CAACQ,OAAO,CAAE,CACVI,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAGA,GAAMC,gBAAe,CAAGL,OAAO,CAACM,mBAAmB,CACnD,GAAMC,iBAAgB,CAAGF,eAAe,CAACG,IAAI,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACZ,UAAU,GAAKA,UAAU,GAAC,CACvF,GAAI,CAACU,gBAAgB,CAAE,CACnBH,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAGA,GAAMM,YAAW,CAAGf,SAAS,EAAE,CAACgB,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAACf,UAAU,CAAC,CACvE,GAAMgB,YAAW,CAAGH,WAAW,CAC1BC,UAAU,CAAC,UAAU,CAAC,CACtBG,OAAO,CAAC,WAAW,CAAE,MAAM,CAAC,CAC5BC,KAAK,CAACjB,IAAI,CAAGA,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,CACjC,GAAMkB,YAAW,CAAGH,WAAW,CAC1BI,UAAU,CAAC,SAACC,QAAQ,CAAK,CACtB,GAAMC,KAAe,CAAG,EAAE,CAC1BD,QAAQ,CAACE,OAAO,CAAC,SAACR,GAAG,CAAK,CACtBO,IAAI,CAACE,IAAI,gBACLC,EAAE,CAAEV,GAAG,CAACU,EAAE,EACPV,GAAG,CAACW,IAAI,EAAE,EACf,CACN,CAAC,CAAC,CACFrB,WAAW,CAACiB,IAAI,CAAc,CAC9Bf,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,SAACoB,KAAK,CAAK,CACVpB,UAAU,CAAC,KAAK,CAAC,CACjBqB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEF,KAAK,CAAC,CACtDzB,OAAO,EAAIA,OAAO,CAAC,yBAAyB,CAAC,CACjD,CAAC,CAAC,CACN,MAAOiB,YAAW,CACtB,CAAC,CAAE,CAACnB,UAAU,CAAEG,OAAO,CAAEF,IAAI,CAAC,CAAC,CAE/B,MAAO,CAEHG,QAAQ,CAARA,QAAQ,CAGRE,OAAO,CAAPA,OACJ,CAAC,CACL"},"metadata":{},"sourceType":"module"}