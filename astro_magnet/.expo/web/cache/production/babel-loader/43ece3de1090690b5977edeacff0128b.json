{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{Base64,isString}from'@react-native-firebase/app/lib/common';var FirestoreBlob=function(){function FirestoreBlob(){var internal=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var binaryString=arguments.length>1?arguments[1]:undefined;_classCallCheck(this,FirestoreBlob);if(internal===false){throw new Error('firebase.firestore.Blob constructor is private, use Blob.<field>() instead.');}this._binaryString=binaryString;}_createClass(FirestoreBlob,[{key:\"isEqual\",value:function isEqual(blob){if(!(blob instanceof FirestoreBlob)){throw new Error('firestore.Blob.isEqual expects an instance of Blob');}return this._binaryString===blob._binaryString;}},{key:\"toBase64\",value:function toBase64(){return Base64.btoa(this._binaryString);}},{key:\"toUint8Array\",value:function toUint8Array(){return new Uint8Array(this._binaryString.split('').map(function(c){return c.charCodeAt(0);}));}},{key:\"toString\",value:function toString(){return\"firestore.Blob(base64: \"+this.toBase64()+\")\";}}],[{key:\"fromBase64String\",value:function fromBase64String(base64){if(!isString(base64)||base64.length<1){throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');}return new FirestoreBlob(true,Base64.atob(base64));}},{key:\"fromUint8Array\",value:function fromUint8Array(array){if(!(array instanceof Uint8Array)){throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');}return new FirestoreBlob(true,Array.prototype.map.call(array,function($){return String.fromCharCode($);}).join(''));}}]);return FirestoreBlob;}();export{FirestoreBlob as default};","map":{"version":3,"names":["Base64","isString","FirestoreBlob","internal","binaryString","Error","_binaryString","blob","btoa","Uint8Array","split","map","c","charCodeAt","toBase64","base64","length","atob","array","Array","prototype","call","$","String","fromCharCode","join"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/node_modules/@react-native-firebase/firestore/lib/FirestoreBlob.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Base64, isString } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreBlob {\n  constructor(internal = false, binaryString) {\n    if (internal === false) {\n      throw new Error(\n        'firebase.firestore.Blob constructor is private, use Blob.<field>() instead.',\n      );\n    }\n\n    this._binaryString = binaryString;\n  }\n\n  /**\n   * Creates a new Blob from the given Base64 string\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromBase64String\n   * @param base64 string\n   */\n  static fromBase64String(base64) {\n    if (!isString(base64) || base64.length < 1) {\n      throw new Error(\n        'firestore.Blob.fromBase64String expects a string of at least 1 character in length',\n      );\n    }\n\n    return new FirestoreBlob(true, Base64.atob(base64));\n  }\n\n  /**\n   * Creates a new Blob from the given Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromUint8Array\n   * @param array Array\n   */\n  static fromUint8Array(array) {\n    if (!(array instanceof Uint8Array)) {\n      throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n    }\n\n    return new FirestoreBlob(\n      true,\n      Array.prototype.map.call(array, $ => String.fromCharCode($)).join(''),\n    );\n  }\n\n  /**\n   * Returns 'true' if this Blob is equal to the provided one.\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#isEqual\n   * @param {*} blob Blob The Blob to compare against. Value must not be null.\n   * @returns boolean 'true' if this Blob is equal to the provided one.\n   */\n  isEqual(blob) {\n    if (!(blob instanceof FirestoreBlob)) {\n      throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n    }\n\n    return this._binaryString === blob._binaryString;\n  }\n\n  /**\n   * Returns the bytes of a Blob as a Base64-encoded string.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toBase64\n   * @returns string The Base64-encoded string created from the Blob object.\n   */\n  toBase64() {\n    return Base64.btoa(this._binaryString);\n  }\n\n  /**\n   * Returns the bytes of a Blob in a new Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toUint8Array\n   * @returns non-null Uint8Array The Uint8Array created from the Blob object.\n   */\n  toUint8Array() {\n    return new Uint8Array(this._binaryString.split('').map(c => c.charCodeAt(0)));\n  }\n\n  /**\n   * Returns a string representation of this blob instance\n   *\n   * @returns {string}\n   * @memberof Blob\n   */\n  toString() {\n    return `firestore.Blob(base64: ${this.toBase64()})`;\n  }\n}\n"],"mappings":"gIAiBA,OAASA,MAAM,CAAEC,QAAQ,KAAQ,uCAAuC,CAAC,GAEpDC,cAAa,YAChC,wBAA4C,IAAhCC,SAAQ,2DAAG,KAAK,IAAEC,aAAY,+EACxC,GAAID,QAAQ,GAAK,KAAK,CAAE,CACtB,KAAM,IAAIE,MAAK,CACb,6EAA6E,CAC9E,CACH,CAEA,IAAI,CAACC,aAAa,CAAGF,YAAY,CACnC,CAAC,iDAyCD,iBAAQG,IAAI,CAAE,CACZ,GAAI,EAAEA,IAAI,WAAYL,cAAa,CAAC,CAAE,CACpC,KAAM,IAAIG,MAAK,CAAC,oDAAoD,CAAC,CACvE,CAEA,MAAO,KAAI,CAACC,aAAa,GAAKC,IAAI,CAACD,aAAa,CAClD,CAAC,wBAQD,mBAAW,CACT,MAAON,OAAM,CAACQ,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC,CACxC,CAAC,4BAQD,uBAAe,CACb,MAAO,IAAIG,WAAU,CAAC,IAAI,CAACH,aAAa,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,SAAAC,CAAC,QAAIA,EAAC,CAACC,UAAU,CAAC,CAAC,CAAC,GAAC,CAAC,CAC/E,CAAC,wBAQD,mBAAW,CACT,gCAAiC,IAAI,CAACC,QAAQ,EAAE,KAClD,CAAC,kCArED,0BAAwBC,MAAM,CAAE,CAC9B,GAAI,CAACd,QAAQ,CAACc,MAAM,CAAC,EAAIA,MAAM,CAACC,MAAM,CAAG,CAAC,CAAE,CAC1C,KAAM,IAAIX,MAAK,CACb,oFAAoF,CACrF,CACH,CAEA,MAAO,IAAIH,cAAa,CAAC,IAAI,CAAEF,MAAM,CAACiB,IAAI,CAACF,MAAM,CAAC,CAAC,CACrD,CAAC,8BAQD,wBAAsBG,KAAK,CAAE,CAC3B,GAAI,EAAEA,KAAK,WAAYT,WAAU,CAAC,CAAE,CAClC,KAAM,IAAIJ,MAAK,CAAC,iEAAiE,CAAC,CACpF,CAEA,MAAO,IAAIH,cAAa,CACtB,IAAI,CACJiB,KAAK,CAACC,SAAS,CAACT,GAAG,CAACU,IAAI,CAACH,KAAK,CAAE,SAAAI,CAAC,QAAIC,OAAM,CAACC,YAAY,CAACF,CAAC,CAAC,GAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CACtE,CACH,CAAC,oCA1CkBvB,aAAa"},"metadata":{},"sourceType":"module"}