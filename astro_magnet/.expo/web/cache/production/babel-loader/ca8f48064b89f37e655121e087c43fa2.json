{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useState,useEffect,useContext}from\"react\";import firestore from\"@react-native-firebase/firestore\";import{UserContext}from\"../context/user\";export default function useLiked(onError){var _useContext=useContext(UserContext),profile=_useContext.profile;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),likedUsers=_useState2[0],setLiked=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){if(!profile){setLoading(false);return;}if((profile==null?void 0:profile.liked.length)===0){setLiked([]);setLoading(false);return;}var unsubscribe=firestore().collection(\"users\").where(firestore.FieldPath.documentId(),\"in\",profile.liked).onSnapshot(function(querySnapshot){var list=[];querySnapshot.forEach(function(doc){list.push(_objectSpread({id:doc.id},doc.data()));});setLiked(list);setLoading(false);},function(error){setLoading(false);onError&&onError(\"Error fetching liked users\");console.log(\"[LOG] error fetching liked users:\",error);});return unsubscribe;},[profile]);return{likedUsers:likedUsers,loading:loading};}","map":{"version":3,"names":["useState","useEffect","useContext","firestore","UserContext","useLiked","onError","profile","likedUsers","setLiked","loading","setLoading","liked","length","unsubscribe","collection","where","FieldPath","documentId","onSnapshot","querySnapshot","list","forEach","doc","push","id","data","error","console","log"],"sources":["/Users/sonminhnguyen/Documents/programming/react-native/school/astro_magnet_initial/astro_magnet/src/hooks/useLiked.tsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport { FireDoc } from \"@app/shared/interfaces/firebase\";\nimport { UserContext } from \"@app/context/user\";\nimport {User} from \"@app/shared/interfaces/user\";\n\n/**\n * - This hooks load all users that current logged-in user liked.\n * - Return an object with a list of likedUsers and loading state\n * @param {(error: string)=>void | undefined} onError - callback function to handle network error\n * @return {User[]} likedUsers - a list of users that current logged-in user liked\n * @return {boolean} loading - fetch loading state\n */\nexport default function useLiked(\n    onError?:(error:string)=>void\n) {\n    const { profile } = useContext(UserContext);\n    const [likedUsers, setLiked] = useState<User[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    useEffect(()=> {\n        if (!profile) { \n            setLoading(false);\n            return \n        }\n        if (profile?.liked.length === 0) {\n            setLiked([]);\n            setLoading(false);\n            return;\n        }\n        const unsubscribe = firestore()\n            .collection(\"users\")\n            .where(firestore.FieldPath.documentId(), \"in\", profile.liked)\n            .onSnapshot((querySnapshot) => {\n                const list: FireDoc[] = [];\n                querySnapshot.forEach((doc) => {\n                    list.push({\n                        id: doc.id,\n                        ...doc.data(),\n                    });\n                });\n                setLiked(list as User[]);\n                setLoading(false);\n            }\n            , (error) => {\n                setLoading(false);\n                onError && onError(\"Error fetching liked users\");\n                console.log(\"[LOG] error fetching liked users:\", error);\n        });\n        return unsubscribe;\n    }, [profile]);\n\n    return {\n        likedUsers,\n        loading\n    }\n}"],"mappings":"y4BAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CACvD,MAAOC,UAAS,KAAM,kCAAkC,CAExD,OAASC,WAAW,uBAUpB,cAAe,SAASC,SAAQ,CAC5BC,OAA6B,CAC/B,CACE,gBAAoBJ,UAAU,CAACE,WAAW,CAAC,CAAnCG,OAAO,aAAPA,OAAO,CACf,cAA+BP,QAAQ,CAAS,EAAE,CAAC,wCAA5CQ,UAAU,eAAEC,QAAQ,eAC3B,eAA8BT,QAAQ,CAAU,IAAI,CAAC,yCAA9CU,OAAO,eAAEC,UAAU,eAC1BV,SAAS,CAAC,UAAK,CACX,GAAI,CAACM,OAAO,CAAE,CACVI,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CACA,GAAI,CAAAJ,OAAO,cAAPA,OAAO,CAAEK,KAAK,CAACC,MAAM,IAAK,CAAC,CAAE,CAC7BJ,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CACA,GAAMG,YAAW,CAAGX,SAAS,EAAE,CAC1BY,UAAU,CAAC,OAAO,CAAC,CACnBC,KAAK,CAACb,SAAS,CAACc,SAAS,CAACC,UAAU,EAAE,CAAE,IAAI,CAAEX,OAAO,CAACK,KAAK,CAAC,CAC5DO,UAAU,CAAC,SAACC,aAAa,CAAK,CAC3B,GAAMC,KAAe,CAAG,EAAE,CAC1BD,aAAa,CAACE,OAAO,CAAC,SAACC,GAAG,CAAK,CAC3BF,IAAI,CAACG,IAAI,gBACLC,EAAE,CAAEF,GAAG,CAACE,EAAE,EACPF,GAAG,CAACG,IAAI,EAAE,EACf,CACN,CAAC,CAAC,CACFjB,QAAQ,CAACY,IAAI,CAAW,CACxBV,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CACC,SAACgB,KAAK,CAAK,CACThB,UAAU,CAAC,KAAK,CAAC,CACjBL,OAAO,EAAIA,OAAO,CAAC,4BAA4B,CAAC,CAChDsB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEF,KAAK,CAAC,CAC/D,CAAC,CAAC,CACF,MAAOb,YAAW,CACtB,CAAC,CAAE,CAACP,OAAO,CAAC,CAAC,CAEb,MAAO,CACHC,UAAU,CAAVA,UAAU,CACVE,OAAO,CAAPA,OACJ,CAAC,CACL"},"metadata":{},"sourceType":"module"}